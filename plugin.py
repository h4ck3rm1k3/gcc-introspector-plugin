# Could not init ('configuration_arguments', '"../src/configure -v --with-pkgversion=\\\'Ubuntu/Linaro 4.6.1-9ubuntu3\\\' --with-bugurl=file:///usr/share/doc/gcc-4.6/README.Bugs --enable-languages=c,c++,fortran,objc,obj-c++,go --prefix=/usr --program-suffix=-4.6 --enable-shared --enable-linker-build-id --with-system-zlib --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --with-gxx-include-dir=/usr/include/c++/4.6 --libdir=/usr/lib --enable-nls --with-sysroot=/ --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --enable-plugin --enable-objc-gc --enable-targets=all --disable-werror --with-arch-32=i686 --with-tune=generic --enable-checking=release --build=i686-linux-gnu --host=i686-linux-gnu --target=i686-linux-gnu"') Cannot initialize ArrayType
# Could not init ('thread_model', '"posix"') Cannot initialize ArrayType
# Could not init ('configure_default_options', '{{((const char*)"cpu_32"), ((const char*)"generic")}, {((const char*)"cpu_64"), ((const char*)"generic")}, {((const char*)"arch_32"), ((const char*)"i686")}, {((const char*)"arch_64"), ((const char*)"x86-64")}, {((const char*)"tune"), ((const char*)"generic")}}') Cannot initialize ArrayType
# Could not init ('basever', '"4.6.1"') Cannot initialize ArrayType
# Could not init ('datestamp', '"20110903"') Cannot initialize ArrayType
# Could not init ('devphase', '""') Cannot initialize ArrayType
# Could not init ('revision', '""') Cannot initialize ArrayType
# Could not init ('gcc_version', '{((const char*)((char*)(& basever))), ((const char*)((char*)(& datestamp))), ((const char*)((char*)(& devphase))), ((const char*)((char*)(& revision))), ((const char*)(& configuration_arguments))}') Cannot initialize Structure
# Could not init ('tree_code_type', '{tcc_exceptional, tcc_exceptional, tcc_exceptional, tcc_exceptional, tcc_exceptional, tcc_type, tcc_type, tcc_type, tcc_type, tcc_type, tcc_type, tcc_type, tcc_type, tcc_type, tcc_type, tcc_type, tcc_type, tcc_type, tcc_type, tcc_type, tcc_type, tcc_type, tcc_type, tcc_type, tcc_constant, tcc_constant, tcc_constant, tcc_constant, tcc_constant, tcc_constant, tcc_declaration, tcc_declaration, tcc_declaration, tcc_declaration, tcc_declaration, tcc_declaration, tcc_declaration, tcc_declaration, tcc_declaration, tcc_declaration, tcc_declaration, tcc_declaration, tcc_reference, tcc_reference, tcc_reference, tcc_reference, tcc_reference, tcc_reference, tcc_reference, tcc_expression, tcc_exceptional, tcc_expression, tcc_expression, tcc_expression, tcc_expression, tcc_expression, tcc_expression, tcc_expression, tcc_vl_exp, tcc_expression, tcc_expression, tcc_exceptional, tcc_binary, tcc_binary, tcc_binary, tcc_binary, tcc_binary, tcc_binary, tcc_binary, tcc_binary, tcc_binary, tcc_binary, tcc_binary, tcc_binary, tcc_binary, tcc_binary, tcc_unary, tcc_unary, tcc_unary, tcc_binary, tcc_binary, tcc_unary, tcc_binary, tcc_binary, tcc_binary, tcc_binary, tcc_binary, tcc_binary, tcc_binary, tcc_unary, tcc_expression, tcc_expression, tcc_expression, tcc_expression, tcc_expression, tcc_expression, tcc_comparison, tcc_comparison, tcc_comparison, tcc_comparison, tcc_comparison, tcc_comparison, tcc_comparison, tcc_comparison, tcc_comparison, tcc_comparison, tcc_comparison, tcc_comparison, tcc_comparison, tcc_comparison, tcc_binary, tcc_unary, tcc_unary, tcc_unary, tcc_unary, tcc_unary, tcc_unary, tcc_reference, tcc_expression, tcc_expression, tcc_expression, tcc_expression, tcc_binary, tcc_unary, tcc_expression, tcc_expression, tcc_expression, tcc_expression, tcc_expression, tcc_statement, tcc_statement, tcc_statement, tcc_statement, tcc_statement, tcc_statement, tcc_statement, tcc_statement, tcc_statement, tcc_statement, tcc_statement, tcc_exceptional, tcc_statement, tcc_statement, tcc_expression, tcc_expression, tcc_expression, tcc_exceptional, tcc_expression, tcc_exceptional, tcc_expression, tcc_expression, tcc_reference, tcc_reference, tcc_statement, tcc_statement, tcc_statement, tcc_statement, tcc_statement, tcc_statement, tcc_statement, tcc_statement, tcc_statement, tcc_statement, tcc_exceptional, tcc_unary, tcc_unary, tcc_unary, tcc_expression, tcc_binary, tcc_binary, tcc_expression, tcc_expression, tcc_expression, tcc_binary, tcc_binary, tcc_binary, tcc_binary, tcc_unary, tcc_unary, tcc_unary, tcc_unary, tcc_binary, tcc_binary, tcc_binary, tcc_binary, tcc_binary, tcc_binary, tcc_binary, tcc_expression, tcc_exceptional, tcc_exceptional, tcc_expression, tcc_expression, tcc_type, tcc_reference, tcc_expression, tcc_binary, tcc_binary, tcc_reference, tcc_statement, tcc_statement, tcc_statement, tcc_reference, tcc_constant, tcc_expression, tcc_expression, tcc_expression, tcc_expression, tcc_reference, tcc_reference, tcc_expression, tcc_vl_exp, tcc_expression, tcc_expression, tcc_expression, tcc_exceptional, tcc_declaration, tcc_exceptional, tcc_type, tcc_type, tcc_type, tcc_type, tcc_type, tcc_type, tcc_declaration, tcc_statement, tcc_exceptional, tcc_expression, tcc_exceptional, tcc_expression, tcc_expression, tcc_unary, tcc_unary, tcc_unary, tcc_unary, tcc_unary, tcc_expression, tcc_expression, tcc_unary, tcc_expression, tcc_expression, tcc_statement, tcc_statement, tcc_statement, tcc_expression, tcc_statement, tcc_statement, tcc_statement, tcc_statement, tcc_statement, tcc_statement, tcc_statement, tcc_statement, tcc_statement, tcc_expression, tcc_expression, tcc_expression, tcc_expression, tcc_expression, tcc_expression, tcc_expression, tcc_expression, tcc_unary, tcc_exceptional, tcc_type, tcc_expression, tcc_type, tcc_expression, tcc_exceptional, tcc_exceptional, tcc_exceptional, tcc_type, tcc_exceptional, tcc_binary, tcc_binary, tcc_binary, tcc_binary, tcc_type, tcc_type, tcc_type, tcc_type, tcc_type, tcc_declaration, tcc_declaration, tcc_declaration, tcc_declaration, tcc_expression, tcc_expression, tcc_expression}') Cannot initialize ArrayType
from ctypes import *



ABS_EXPR = 81
ADDR_EXPR = 120
ADDR_SPACE_CONVERT_EXPR = 113
AD_REGS = 7
AGGR_INIT_EXPR = 212
ALIAS_DIAG_NONE = 0
ALIAS_DIAG_TO_EXTERN = 2
ALIAS_DIAG_TO_UNDEF = 1
ALIGNOF_EXPR = 260
ALL_REGS = 26
AREG = 1
ARGUMENT_PACK_SELECT = 269
ARRAY_RANGE_REF = 47
ARRAY_REF = 46
ARRAY_TYPE = 16
ARROW_EXPR = 259
ASM_ATT = 0
ASM_EXPR = 139
ASM_INTEL = 1
ASSERT_EXPR = 147
ATTR_ADDR_EXPR = 199
ATTR_FLAG_ARRAY_NEXT = 4
ATTR_FLAG_BUILT_IN = 16
ATTR_FLAG_DECL_NEXT = 1
ATTR_FLAG_FUNCTION_NEXT = 2
ATTR_FLAG_TYPE_IN_PLACE = 8
AT_ENCODE_EXPR = 261
AVAIL_AVAILABLE = 3
AVAIL_LOCAL = 4
AVAIL_NOT_AVAILABLE = 1
AVAIL_OVERWRITABLE = 2
AVAIL_UNSET = 0
BASELINK = 216
BB_COLD_PARTITION = 64
BB_DISABLE_SCHEDULE = 16
BB_DUPLICATED = 128
BB_FORWARDER_BLOCK = 1024
BB_HOT_PARTITION = 32
BB_IRREDUCIBLE_LOOP = 4
BB_MODIFIED = 4096
BB_NEW = 1
BB_NONTHREADABLE_BLOCK = 2048
BB_NON_LOCAL_GOTO_TARGET = 256
BB_REACHABLE = 2
BB_RTL = 512
BB_SUPERBLOCK = 8
BCS_FN_BODY = 4
BCS_NO_SCOPE = 1
BCS_TRY_BLOCK = 2
BIND_EXPR = 57
BITSIZETYPE = 2
BIT_AND_EXPR = 88
BIT_FIELD_REF = 43
BIT_IOR_EXPR = 86
BIT_NOT_EXPR = 89
BIT_XOR_EXPR = 87
BImode = 13
BLKmode = 1
BLOCK = 4
BOOLEAN_TYPE = 7
BOUND_TEMPLATE_TEMPLATE_PARM = 223
BREAK_STMT = 252
BREG = 4
BT_BASE_FILE = 3
BT_COUNTER = 9
BT_DATE = 1
BT_FILE = 2
BT_FIRST_USER = 10
BT_INCLUDE_LEVEL = 4
BT_LAST_USER = 41
BT_PRAGMA = 7
BT_SPECLINE = 0
BT_STDC = 6
BT_TIME = 5
BT_TIMESTAMP = 8
BUILT_IN_ABORT = 412
BUILT_IN_ABS = 413
BUILT_IN_ACOS = 0
BUILT_IN_ACOSF = 1
BUILT_IN_ACOSH = 2
BUILT_IN_ACOSHF = 3
BUILT_IN_ACOSHL = 4
BUILT_IN_ACOSL = 5
BUILT_IN_ADD_AND_FETCH_1 = 591
BUILT_IN_ADD_AND_FETCH_16 = 595
BUILT_IN_ADD_AND_FETCH_2 = 592
BUILT_IN_ADD_AND_FETCH_4 = 593
BUILT_IN_ADD_AND_FETCH_8 = 594
BUILT_IN_ADD_AND_FETCH_N = 590
BUILT_IN_ADJUST_TRAMPOLINE = 520
BUILT_IN_AGGREGATE_INCOMING_ADDRESS = 414
BUILT_IN_ALLOCA = 415
BUILT_IN_AND_AND_FETCH_1 = 609
BUILT_IN_AND_AND_FETCH_16 = 613
BUILT_IN_AND_AND_FETCH_2 = 610
BUILT_IN_AND_AND_FETCH_4 = 611
BUILT_IN_AND_AND_FETCH_8 = 612
BUILT_IN_AND_AND_FETCH_N = 608
BUILT_IN_APPLY = 416
BUILT_IN_APPLY_ARGS = 417
BUILT_IN_ASIN = 6
BUILT_IN_ASINF = 7
BUILT_IN_ASINH = 8
BUILT_IN_ASINHF = 9
BUILT_IN_ASINHL = 10
BUILT_IN_ASINL = 11
BUILT_IN_ATAN = 12
BUILT_IN_ATAN2 = 13
BUILT_IN_ATAN2F = 14
BUILT_IN_ATAN2L = 15
BUILT_IN_ATANF = 16
BUILT_IN_ATANH = 17
BUILT_IN_ATANHF = 18
BUILT_IN_ATANHL = 19
BUILT_IN_ATANL = 20
BUILT_IN_BCMP = 324
BUILT_IN_BCOPY = 325
BUILT_IN_BOOL_COMPARE_AND_SWAP_1 = 627
BUILT_IN_BOOL_COMPARE_AND_SWAP_16 = 631
BUILT_IN_BOOL_COMPARE_AND_SWAP_2 = 628
BUILT_IN_BOOL_COMPARE_AND_SWAP_4 = 629
BUILT_IN_BOOL_COMPARE_AND_SWAP_8 = 630
BUILT_IN_BOOL_COMPARE_AND_SWAP_N = 626
BUILT_IN_BSWAP32 = 418
BUILT_IN_BSWAP64 = 419
BUILT_IN_BZERO = 326
BUILT_IN_CABS = 252
BUILT_IN_CABSF = 253
BUILT_IN_CABSL = 254
BUILT_IN_CACOS = 255
BUILT_IN_CACOSF = 256
BUILT_IN_CACOSH = 257
BUILT_IN_CACOSHF = 258
BUILT_IN_CACOSHL = 259
BUILT_IN_CACOSL = 260
BUILT_IN_CALLOC = 421
BUILT_IN_CARG = 261
BUILT_IN_CARGF = 262
BUILT_IN_CARGL = 263
BUILT_IN_CASIN = 264
BUILT_IN_CASINF = 265
BUILT_IN_CASINH = 266
BUILT_IN_CASINHF = 267
BUILT_IN_CASINHL = 268
BUILT_IN_CASINL = 269
BUILT_IN_CATAN = 270
BUILT_IN_CATANF = 271
BUILT_IN_CATANH = 272
BUILT_IN_CATANHF = 273
BUILT_IN_CATANHL = 274
BUILT_IN_CATANL = 275
BUILT_IN_CBRT = 21
BUILT_IN_CBRTF = 22
BUILT_IN_CBRTL = 23
BUILT_IN_CCOS = 276
BUILT_IN_CCOSF = 277
BUILT_IN_CCOSH = 278
BUILT_IN_CCOSHF = 279
BUILT_IN_CCOSHL = 280
BUILT_IN_CCOSL = 281
BUILT_IN_CEIL = 24
BUILT_IN_CEILF = 25
BUILT_IN_CEILL = 26
BUILT_IN_CEXP = 282
BUILT_IN_CEXPF = 283
BUILT_IN_CEXPI = 285
BUILT_IN_CEXPIF = 286
BUILT_IN_CEXPIL = 287
BUILT_IN_CEXPL = 284
BUILT_IN_CIMAG = 288
BUILT_IN_CIMAGF = 289
BUILT_IN_CIMAGL = 290
BUILT_IN_CLASSIFY_TYPE = 422
BUILT_IN_CLEAR_CACHE = 420
BUILT_IN_CLOG = 291
BUILT_IN_CLOG10 = 294
BUILT_IN_CLOG10F = 295
BUILT_IN_CLOG10L = 296
BUILT_IN_CLOGF = 292
BUILT_IN_CLOGL = 293
BUILT_IN_CLZ = 423
BUILT_IN_CLZIMAX = 424
BUILT_IN_CLZL = 425
BUILT_IN_CLZLL = 426
BUILT_IN_COMPLEX_DIV_MAX = 719
BUILT_IN_COMPLEX_DIV_MIN = 716
BUILT_IN_COMPLEX_MUL_MAX = 715
BUILT_IN_COMPLEX_MUL_MIN = 712
BUILT_IN_CONJ = 297
BUILT_IN_CONJF = 298
BUILT_IN_CONJL = 299
BUILT_IN_CONSTANT_P = 427
BUILT_IN_COPYSIGN = 27
BUILT_IN_COPYSIGNF = 28
BUILT_IN_COPYSIGNL = 29
BUILT_IN_COS = 30
BUILT_IN_COSF = 31
BUILT_IN_COSH = 32
BUILT_IN_COSHF = 33
BUILT_IN_COSHL = 34
BUILT_IN_COSL = 35
BUILT_IN_CPOW = 300
BUILT_IN_CPOWF = 301
BUILT_IN_CPOWL = 302
BUILT_IN_CPROJ = 303
BUILT_IN_CPROJF = 304
BUILT_IN_CPROJL = 305
BUILT_IN_CREAL = 306
BUILT_IN_CREALF = 307
BUILT_IN_CREALL = 308
BUILT_IN_CSIN = 309
BUILT_IN_CSINF = 310
BUILT_IN_CSINH = 311
BUILT_IN_CSINHF = 312
BUILT_IN_CSINHL = 313
BUILT_IN_CSINL = 314
BUILT_IN_CSQRT = 315
BUILT_IN_CSQRTF = 316
BUILT_IN_CSQRTL = 317
BUILT_IN_CTAN = 318
BUILT_IN_CTANF = 319
BUILT_IN_CTANH = 320
BUILT_IN_CTANHF = 321
BUILT_IN_CTANHL = 322
BUILT_IN_CTANL = 323
BUILT_IN_CTZ = 428
BUILT_IN_CTZIMAX = 429
BUILT_IN_CTZL = 430
BUILT_IN_CTZLL = 431
BUILT_IN_CXA_END_CLEANUP = 550
BUILT_IN_DCGETTEXT = 432
BUILT_IN_DGETTEXT = 433
BUILT_IN_DREM = 36
BUILT_IN_DREMF = 37
BUILT_IN_DREML = 38
BUILT_IN_DWARF_CFA = 434
BUILT_IN_DWARF_SP_COLUMN = 435
BUILT_IN_EH_COPY_VALUES = 553
BUILT_IN_EH_FILTER = 552
BUILT_IN_EH_POINTER = 551
BUILT_IN_EH_RETURN = 436
BUILT_IN_EH_RETURN_DATA_REGNO = 437
BUILT_IN_EMUTLS_GET_ADDRESS = 547
BUILT_IN_EMUTLS_REGISTER_COMMON = 548
BUILT_IN_ERF = 39
BUILT_IN_ERFC = 40
BUILT_IN_ERFCF = 41
BUILT_IN_ERFCL = 42
BUILT_IN_ERFF = 43
BUILT_IN_ERFL = 44
BUILT_IN_EXECL = 438
BUILT_IN_EXECLE = 440
BUILT_IN_EXECLP = 439
BUILT_IN_EXECV = 441
BUILT_IN_EXECVE = 443
BUILT_IN_EXECVP = 442
BUILT_IN_EXIT = 444
BUILT_IN_EXP = 45
BUILT_IN_EXP10 = 46
BUILT_IN_EXP10F = 47
BUILT_IN_EXP10L = 48
BUILT_IN_EXP2 = 49
BUILT_IN_EXP2F = 50
BUILT_IN_EXP2L = 51
BUILT_IN_EXPECT = 445
BUILT_IN_EXPF = 52
BUILT_IN_EXPL = 53
BUILT_IN_EXPM1 = 54
BUILT_IN_EXPM1F = 55
BUILT_IN_EXPM1L = 56
BUILT_IN_EXTEND_POINTER = 446
BUILT_IN_EXTRACT_RETURN_ADDR = 447
BUILT_IN_FABS = 57
BUILT_IN_FABSF = 58
BUILT_IN_FABSL = 59
BUILT_IN_FDIM = 60
BUILT_IN_FDIMF = 61
BUILT_IN_FDIML = 62
BUILT_IN_FETCH_AND_ADD_1 = 555
BUILT_IN_FETCH_AND_ADD_16 = 559
BUILT_IN_FETCH_AND_ADD_2 = 556
BUILT_IN_FETCH_AND_ADD_4 = 557
BUILT_IN_FETCH_AND_ADD_8 = 558
BUILT_IN_FETCH_AND_ADD_N = 554
BUILT_IN_FETCH_AND_AND_1 = 573
BUILT_IN_FETCH_AND_AND_16 = 577
BUILT_IN_FETCH_AND_AND_2 = 574
BUILT_IN_FETCH_AND_AND_4 = 575
BUILT_IN_FETCH_AND_AND_8 = 576
BUILT_IN_FETCH_AND_AND_N = 572
BUILT_IN_FETCH_AND_NAND_1 = 585
BUILT_IN_FETCH_AND_NAND_16 = 589
BUILT_IN_FETCH_AND_NAND_2 = 586
BUILT_IN_FETCH_AND_NAND_4 = 587
BUILT_IN_FETCH_AND_NAND_8 = 588
BUILT_IN_FETCH_AND_NAND_N = 584
BUILT_IN_FETCH_AND_OR_1 = 567
BUILT_IN_FETCH_AND_OR_16 = 571
BUILT_IN_FETCH_AND_OR_2 = 568
BUILT_IN_FETCH_AND_OR_4 = 569
BUILT_IN_FETCH_AND_OR_8 = 570
BUILT_IN_FETCH_AND_OR_N = 566
BUILT_IN_FETCH_AND_SUB_1 = 561
BUILT_IN_FETCH_AND_SUB_16 = 565
BUILT_IN_FETCH_AND_SUB_2 = 562
BUILT_IN_FETCH_AND_SUB_4 = 563
BUILT_IN_FETCH_AND_SUB_8 = 564
BUILT_IN_FETCH_AND_SUB_N = 560
BUILT_IN_FETCH_AND_XOR_1 = 579
BUILT_IN_FETCH_AND_XOR_16 = 583
BUILT_IN_FETCH_AND_XOR_2 = 580
BUILT_IN_FETCH_AND_XOR_4 = 581
BUILT_IN_FETCH_AND_XOR_8 = 582
BUILT_IN_FETCH_AND_XOR_N = 578
BUILT_IN_FFS = 448
BUILT_IN_FFSIMAX = 449
BUILT_IN_FFSL = 450
BUILT_IN_FFSLL = 451
BUILT_IN_FINITE = 459
BUILT_IN_FINITED128 = 464
BUILT_IN_FINITED32 = 462
BUILT_IN_FINITED64 = 463
BUILT_IN_FINITEF = 460
BUILT_IN_FINITEL = 461
BUILT_IN_FLOOR = 63
BUILT_IN_FLOORF = 64
BUILT_IN_FLOORL = 65
BUILT_IN_FMA = 66
BUILT_IN_FMAF = 67
BUILT_IN_FMAL = 68
BUILT_IN_FMAX = 69
BUILT_IN_FMAXF = 70
BUILT_IN_FMAXL = 71
BUILT_IN_FMIN = 72
BUILT_IN_FMINF = 73
BUILT_IN_FMINL = 74
BUILT_IN_FMOD = 75
BUILT_IN_FMODF = 76
BUILT_IN_FMODL = 77
BUILT_IN_FORK = 452
BUILT_IN_FPCLASSIFY = 465
BUILT_IN_FPRINTF = 354
BUILT_IN_FPRINTF_CHK = 541
BUILT_IN_FPRINTF_UNLOCKED = 355
BUILT_IN_FPUTC = 358
BUILT_IN_FPUTC_UNLOCKED = 359
BUILT_IN_FPUTS = 360
BUILT_IN_FPUTS_UNLOCKED = 361
BUILT_IN_FRAME_ADDRESS = 453
BUILT_IN_FREE = 454
BUILT_IN_FREXP = 78
BUILT_IN_FREXPF = 79
BUILT_IN_FREXPL = 80
BUILT_IN_FROB_RETURN_ADDR = 455
BUILT_IN_FRONTEND = 1
BUILT_IN_FSCANF = 362
BUILT_IN_FWRITE = 363
BUILT_IN_FWRITE_UNLOCKED = 364
BUILT_IN_GAMMA = 81
BUILT_IN_GAMMAF = 82
BUILT_IN_GAMMAF_R = 85
BUILT_IN_GAMMAL = 83
BUILT_IN_GAMMAL_R = 86
BUILT_IN_GAMMA_R = 84
BUILT_IN_GETTEXT = 456
BUILT_IN_GOMP_ATOMIC_END = 654
BUILT_IN_GOMP_ATOMIC_START = 653
BUILT_IN_GOMP_BARRIER = 655
BUILT_IN_GOMP_CRITICAL_END = 658
BUILT_IN_GOMP_CRITICAL_NAME_END = 660
BUILT_IN_GOMP_CRITICAL_NAME_START = 659
BUILT_IN_GOMP_CRITICAL_START = 657
BUILT_IN_GOMP_LOOP_DYNAMIC_NEXT = 670
BUILT_IN_GOMP_LOOP_DYNAMIC_START = 662
BUILT_IN_GOMP_LOOP_END = 697
BUILT_IN_GOMP_LOOP_END_NOWAIT = 698
BUILT_IN_GOMP_LOOP_GUIDED_NEXT = 671
BUILT_IN_GOMP_LOOP_GUIDED_START = 663
BUILT_IN_GOMP_LOOP_ORDERED_DYNAMIC_NEXT = 674
BUILT_IN_GOMP_LOOP_ORDERED_DYNAMIC_START = 666
BUILT_IN_GOMP_LOOP_ORDERED_GUIDED_NEXT = 675
BUILT_IN_GOMP_LOOP_ORDERED_GUIDED_START = 667
BUILT_IN_GOMP_LOOP_ORDERED_RUNTIME_NEXT = 676
BUILT_IN_GOMP_LOOP_ORDERED_RUNTIME_START = 668
BUILT_IN_GOMP_LOOP_ORDERED_STATIC_NEXT = 673
BUILT_IN_GOMP_LOOP_ORDERED_STATIC_START = 665
BUILT_IN_GOMP_LOOP_RUNTIME_NEXT = 672
BUILT_IN_GOMP_LOOP_RUNTIME_START = 664
BUILT_IN_GOMP_LOOP_STATIC_NEXT = 669
BUILT_IN_GOMP_LOOP_STATIC_START = 661
BUILT_IN_GOMP_LOOP_ULL_DYNAMIC_NEXT = 686
BUILT_IN_GOMP_LOOP_ULL_DYNAMIC_START = 678
BUILT_IN_GOMP_LOOP_ULL_GUIDED_NEXT = 687
BUILT_IN_GOMP_LOOP_ULL_GUIDED_START = 679
BUILT_IN_GOMP_LOOP_ULL_ORDERED_DYNAMIC_NEXT = 690
BUILT_IN_GOMP_LOOP_ULL_ORDERED_DYNAMIC_START = 682
BUILT_IN_GOMP_LOOP_ULL_ORDERED_GUIDED_NEXT = 691
BUILT_IN_GOMP_LOOP_ULL_ORDERED_GUIDED_START = 683
BUILT_IN_GOMP_LOOP_ULL_ORDERED_RUNTIME_NEXT = 692
BUILT_IN_GOMP_LOOP_ULL_ORDERED_RUNTIME_START = 684
BUILT_IN_GOMP_LOOP_ULL_ORDERED_STATIC_NEXT = 689
BUILT_IN_GOMP_LOOP_ULL_ORDERED_STATIC_START = 681
BUILT_IN_GOMP_LOOP_ULL_RUNTIME_NEXT = 688
BUILT_IN_GOMP_LOOP_ULL_RUNTIME_START = 680
BUILT_IN_GOMP_LOOP_ULL_STATIC_NEXT = 685
BUILT_IN_GOMP_LOOP_ULL_STATIC_START = 677
BUILT_IN_GOMP_ORDERED_END = 700
BUILT_IN_GOMP_ORDERED_START = 699
BUILT_IN_GOMP_PARALLEL_END = 702
BUILT_IN_GOMP_PARALLEL_LOOP_DYNAMIC_START = 694
BUILT_IN_GOMP_PARALLEL_LOOP_GUIDED_START = 695
BUILT_IN_GOMP_PARALLEL_LOOP_RUNTIME_START = 696
BUILT_IN_GOMP_PARALLEL_LOOP_STATIC_START = 693
BUILT_IN_GOMP_PARALLEL_SECTIONS_START = 706
BUILT_IN_GOMP_PARALLEL_START = 701
BUILT_IN_GOMP_SECTIONS_END = 707
BUILT_IN_GOMP_SECTIONS_END_NOWAIT = 708
BUILT_IN_GOMP_SECTIONS_NEXT = 705
BUILT_IN_GOMP_SECTIONS_START = 704
BUILT_IN_GOMP_SINGLE_COPY_END = 711
BUILT_IN_GOMP_SINGLE_COPY_START = 710
BUILT_IN_GOMP_SINGLE_START = 709
BUILT_IN_GOMP_TASK = 703
BUILT_IN_GOMP_TASKWAIT = 656
BUILT_IN_HUGE_VAL = 87
BUILT_IN_HUGE_VALF = 88
BUILT_IN_HUGE_VALL = 89
BUILT_IN_HYPOT = 90
BUILT_IN_HYPOTF = 91
BUILT_IN_HYPOTL = 92
BUILT_IN_ILOGB = 93
BUILT_IN_ILOGBF = 94
BUILT_IN_ILOGBL = 95
BUILT_IN_IMAXABS = 457
BUILT_IN_INDEX = 327
BUILT_IN_INF = 96
BUILT_IN_INFD128 = 101
BUILT_IN_INFD32 = 99
BUILT_IN_INFD64 = 100
BUILT_IN_INFF = 97
BUILT_IN_INFL = 98
BUILT_IN_INIT_DWARF_REG_SIZES = 458
BUILT_IN_INIT_TRAMPOLINE = 519
BUILT_IN_ISALNUM = 382
BUILT_IN_ISALPHA = 383
BUILT_IN_ISASCII = 384
BUILT_IN_ISBLANK = 385
BUILT_IN_ISCNTRL = 386
BUILT_IN_ISDIGIT = 387
BUILT_IN_ISFINITE = 466
BUILT_IN_ISGRAPH = 388
BUILT_IN_ISGREATER = 481
BUILT_IN_ISGREATEREQUAL = 482
BUILT_IN_ISINF = 468
BUILT_IN_ISINFD128 = 473
BUILT_IN_ISINFD32 = 471
BUILT_IN_ISINFD64 = 472
BUILT_IN_ISINFF = 469
BUILT_IN_ISINFL = 470
BUILT_IN_ISINF_SIGN = 467
BUILT_IN_ISLESS = 483
BUILT_IN_ISLESSEQUAL = 484
BUILT_IN_ISLESSGREATER = 485
BUILT_IN_ISLOWER = 389
BUILT_IN_ISNAN = 474
BUILT_IN_ISNAND128 = 479
BUILT_IN_ISNAND32 = 477
BUILT_IN_ISNAND64 = 478
BUILT_IN_ISNANF = 475
BUILT_IN_ISNANL = 476
BUILT_IN_ISNORMAL = 480
BUILT_IN_ISPRINT = 390
BUILT_IN_ISPUNCT = 391
BUILT_IN_ISSPACE = 392
BUILT_IN_ISUNORDERED = 486
BUILT_IN_ISUPPER = 393
BUILT_IN_ISWALNUM = 398
BUILT_IN_ISWALPHA = 399
BUILT_IN_ISWBLANK = 400
BUILT_IN_ISWCNTRL = 401
BUILT_IN_ISWDIGIT = 402
BUILT_IN_ISWGRAPH = 403
BUILT_IN_ISWLOWER = 404
BUILT_IN_ISWPRINT = 405
BUILT_IN_ISWPUNCT = 406
BUILT_IN_ISWSPACE = 407
BUILT_IN_ISWUPPER = 408
BUILT_IN_ISWXDIGIT = 409
BUILT_IN_ISXDIGIT = 394
BUILT_IN_J0 = 102
BUILT_IN_J0F = 103
BUILT_IN_J0L = 104
BUILT_IN_J1 = 105
BUILT_IN_J1F = 106
BUILT_IN_J1L = 107
BUILT_IN_JN = 108
BUILT_IN_JNF = 109
BUILT_IN_JNL = 110
BUILT_IN_LABS = 487
BUILT_IN_LCEIL = 111
BUILT_IN_LCEILF = 112
BUILT_IN_LCEILL = 113
BUILT_IN_LDEXP = 114
BUILT_IN_LDEXPF = 115
BUILT_IN_LDEXPL = 116
BUILT_IN_LFLOOR = 117
BUILT_IN_LFLOORF = 118
BUILT_IN_LFLOORL = 119
BUILT_IN_LGAMMA = 120
BUILT_IN_LGAMMAF = 121
BUILT_IN_LGAMMAF_R = 124
BUILT_IN_LGAMMAL = 122
BUILT_IN_LGAMMAL_R = 125
BUILT_IN_LGAMMA_R = 123
BUILT_IN_LLABS = 488
BUILT_IN_LLCEIL = 126
BUILT_IN_LLCEILF = 127
BUILT_IN_LLCEILL = 128
BUILT_IN_LLFLOOR = 129
BUILT_IN_LLFLOORF = 130
BUILT_IN_LLFLOORL = 131
BUILT_IN_LLRINT = 132
BUILT_IN_LLRINTF = 133
BUILT_IN_LLRINTL = 134
BUILT_IN_LLROUND = 135
BUILT_IN_LLROUNDF = 136
BUILT_IN_LLROUNDL = 137
BUILT_IN_LOCK_RELEASE_1 = 645
BUILT_IN_LOCK_RELEASE_16 = 649
BUILT_IN_LOCK_RELEASE_2 = 646
BUILT_IN_LOCK_RELEASE_4 = 647
BUILT_IN_LOCK_RELEASE_8 = 648
BUILT_IN_LOCK_RELEASE_N = 644
BUILT_IN_LOCK_TEST_AND_SET_1 = 639
BUILT_IN_LOCK_TEST_AND_SET_16 = 643
BUILT_IN_LOCK_TEST_AND_SET_2 = 640
BUILT_IN_LOCK_TEST_AND_SET_4 = 641
BUILT_IN_LOCK_TEST_AND_SET_8 = 642
BUILT_IN_LOCK_TEST_AND_SET_N = 638
BUILT_IN_LOG = 138
BUILT_IN_LOG10 = 139
BUILT_IN_LOG10F = 140
BUILT_IN_LOG10L = 141
BUILT_IN_LOG1P = 142
BUILT_IN_LOG1PF = 143
BUILT_IN_LOG1PL = 144
BUILT_IN_LOG2 = 145
BUILT_IN_LOG2F = 146
BUILT_IN_LOG2L = 147
BUILT_IN_LOGB = 148
BUILT_IN_LOGBF = 149
BUILT_IN_LOGBL = 150
BUILT_IN_LOGF = 151
BUILT_IN_LOGL = 152
BUILT_IN_LONGJMP = 489
BUILT_IN_LRINT = 153
BUILT_IN_LRINTF = 154
BUILT_IN_LRINTL = 155
BUILT_IN_LROUND = 156
BUILT_IN_LROUNDF = 157
BUILT_IN_LROUNDL = 158
BUILT_IN_MALLOC = 490
BUILT_IN_MD = 2
BUILT_IN_MEMCHR = 328
BUILT_IN_MEMCMP = 329
BUILT_IN_MEMCPY = 330
BUILT_IN_MEMCPY_CHK = 528
BUILT_IN_MEMMOVE = 331
BUILT_IN_MEMMOVE_CHK = 529
BUILT_IN_MEMPCPY = 332
BUILT_IN_MEMPCPY_CHK = 530
BUILT_IN_MEMSET = 333
BUILT_IN_MEMSET_CHK = 531
BUILT_IN_MODF = 159
BUILT_IN_MODFF = 160
BUILT_IN_MODFL = 161
BUILT_IN_NAN = 162
BUILT_IN_NAND128 = 167
BUILT_IN_NAND32 = 165
BUILT_IN_NAND64 = 166
BUILT_IN_NAND_AND_FETCH_1 = 621
BUILT_IN_NAND_AND_FETCH_16 = 625
BUILT_IN_NAND_AND_FETCH_2 = 622
BUILT_IN_NAND_AND_FETCH_4 = 623
BUILT_IN_NAND_AND_FETCH_8 = 624
BUILT_IN_NAND_AND_FETCH_N = 620
BUILT_IN_NANF = 163
BUILT_IN_NANL = 164
BUILT_IN_NANS = 168
BUILT_IN_NANSF = 169
BUILT_IN_NANSL = 170
BUILT_IN_NEARBYINT = 171
BUILT_IN_NEARBYINTF = 172
BUILT_IN_NEARBYINTL = 173
BUILT_IN_NEXTAFTER = 174
BUILT_IN_NEXTAFTERF = 175
BUILT_IN_NEXTAFTERL = 176
BUILT_IN_NEXTTOWARD = 177
BUILT_IN_NEXTTOWARDF = 178
BUILT_IN_NEXTTOWARDL = 179
BUILT_IN_NEXT_ARG = 491
BUILT_IN_NONLOCAL_GOTO = 521
BUILT_IN_NORMAL = 3
BUILT_IN_OBJECT_SIZE = 527
BUILT_IN_OMP_GET_NUM_THREADS = 652
BUILT_IN_OMP_GET_THREAD_NUM = 651
BUILT_IN_OR_AND_FETCH_1 = 603
BUILT_IN_OR_AND_FETCH_16 = 607
BUILT_IN_OR_AND_FETCH_2 = 604
BUILT_IN_OR_AND_FETCH_4 = 605
BUILT_IN_OR_AND_FETCH_8 = 606
BUILT_IN_OR_AND_FETCH_N = 602
BUILT_IN_PARITY = 492
BUILT_IN_PARITYIMAX = 493
BUILT_IN_PARITYL = 494
BUILT_IN_PARITYLL = 495
BUILT_IN_POPCOUNT = 496
BUILT_IN_POPCOUNTIMAX = 497
BUILT_IN_POPCOUNTL = 498
BUILT_IN_POPCOUNTLL = 499
BUILT_IN_POW = 180
BUILT_IN_POW10 = 181
BUILT_IN_POW10F = 182
BUILT_IN_POW10L = 183
BUILT_IN_POWF = 184
BUILT_IN_POWI = 185
BUILT_IN_POWIF = 186
BUILT_IN_POWIL = 187
BUILT_IN_POWL = 188
BUILT_IN_PREFETCH = 500
BUILT_IN_PRINTF = 365
BUILT_IN_PRINTF_CHK = 542
BUILT_IN_PRINTF_UNLOCKED = 366
BUILT_IN_PROFILE_FUNC_ENTER = 545
BUILT_IN_PROFILE_FUNC_EXIT = 546
BUILT_IN_PUTC = 356
BUILT_IN_PUTCHAR = 367
BUILT_IN_PUTCHAR_UNLOCKED = 368
BUILT_IN_PUTC_UNLOCKED = 357
BUILT_IN_PUTS = 369
BUILT_IN_PUTS_UNLOCKED = 370
BUILT_IN_REALLOC = 501
BUILT_IN_REMAINDER = 189
BUILT_IN_REMAINDERF = 190
BUILT_IN_REMAINDERL = 191
BUILT_IN_REMQUO = 192
BUILT_IN_REMQUOF = 193
BUILT_IN_REMQUOL = 194
BUILT_IN_RETURN = 502
BUILT_IN_RETURN_ADDRESS = 503
BUILT_IN_RINDEX = 334
BUILT_IN_RINT = 195
BUILT_IN_RINTF = 196
BUILT_IN_RINTL = 197
BUILT_IN_ROUND = 198
BUILT_IN_ROUNDF = 199
BUILT_IN_ROUNDL = 200
BUILT_IN_SAVEREGS = 504
BUILT_IN_SCALB = 201
BUILT_IN_SCALBF = 202
BUILT_IN_SCALBL = 203
BUILT_IN_SCALBLN = 204
BUILT_IN_SCALBLNF = 205
BUILT_IN_SCALBLNL = 206
BUILT_IN_SCALBN = 207
BUILT_IN_SCALBNF = 208
BUILT_IN_SCALBNL = 209
BUILT_IN_SCANF = 371
BUILT_IN_SETJMP = 505
BUILT_IN_SETJMP_DISPATCHER = 523
BUILT_IN_SETJMP_RECEIVER = 524
BUILT_IN_SETJMP_SETUP = 522
BUILT_IN_SIGNBIT = 210
BUILT_IN_SIGNBITD128 = 215
BUILT_IN_SIGNBITD32 = 213
BUILT_IN_SIGNBITD64 = 214
BUILT_IN_SIGNBITF = 211
BUILT_IN_SIGNBITL = 212
BUILT_IN_SIGNIFICAND = 216
BUILT_IN_SIGNIFICANDF = 217
BUILT_IN_SIGNIFICANDL = 218
BUILT_IN_SIN = 219
BUILT_IN_SINCOS = 220
BUILT_IN_SINCOSF = 221
BUILT_IN_SINCOSL = 222
BUILT_IN_SINF = 223
BUILT_IN_SINH = 224
BUILT_IN_SINHF = 225
BUILT_IN_SINHL = 226
BUILT_IN_SINL = 227
BUILT_IN_SNPRINTF = 372
BUILT_IN_SNPRINTF_CHK = 537
BUILT_IN_SPRINTF = 373
BUILT_IN_SPRINTF_CHK = 538
BUILT_IN_SQRT = 228
BUILT_IN_SQRTF = 229
BUILT_IN_SQRTL = 230
BUILT_IN_SSCANF = 374
BUILT_IN_STACK_RESTORE = 526
BUILT_IN_STACK_SAVE = 525
BUILT_IN_STPCPY = 335
BUILT_IN_STPCPY_CHK = 532
BUILT_IN_STPNCPY = 336
BUILT_IN_STRCASECMP = 337
BUILT_IN_STRCAT = 338
BUILT_IN_STRCAT_CHK = 533
BUILT_IN_STRCHR = 339
BUILT_IN_STRCMP = 340
BUILT_IN_STRCPY = 341
BUILT_IN_STRCPY_CHK = 534
BUILT_IN_STRCSPN = 342
BUILT_IN_STRDUP = 343
BUILT_IN_STRFMON = 506
BUILT_IN_STRFTIME = 507
BUILT_IN_STRLEN = 345
BUILT_IN_STRNCASECMP = 346
BUILT_IN_STRNCAT = 347
BUILT_IN_STRNCAT_CHK = 535
BUILT_IN_STRNCMP = 348
BUILT_IN_STRNCPY = 349
BUILT_IN_STRNCPY_CHK = 536
BUILT_IN_STRNDUP = 344
BUILT_IN_STRPBRK = 350
BUILT_IN_STRRCHR = 351
BUILT_IN_STRSPN = 352
BUILT_IN_STRSTR = 353
BUILT_IN_SUB_AND_FETCH_1 = 597
BUILT_IN_SUB_AND_FETCH_16 = 601
BUILT_IN_SUB_AND_FETCH_2 = 598
BUILT_IN_SUB_AND_FETCH_4 = 599
BUILT_IN_SUB_AND_FETCH_8 = 600
BUILT_IN_SUB_AND_FETCH_N = 596
BUILT_IN_SYNCHRONIZE = 650
BUILT_IN_TAN = 231
BUILT_IN_TANF = 232
BUILT_IN_TANH = 233
BUILT_IN_TANHF = 234
BUILT_IN_TANHL = 235
BUILT_IN_TANL = 236
BUILT_IN_TGAMMA = 237
BUILT_IN_TGAMMAF = 238
BUILT_IN_TGAMMAL = 239
BUILT_IN_TOASCII = 395
BUILT_IN_TOLOWER = 396
BUILT_IN_TOUPPER = 397
BUILT_IN_TOWLOWER = 410
BUILT_IN_TOWUPPER = 411
BUILT_IN_TRAP = 508
BUILT_IN_TRUNC = 240
BUILT_IN_TRUNCF = 241
BUILT_IN_TRUNCL = 242
BUILT_IN_UNREACHABLE = 509
BUILT_IN_UNWIND_INIT = 510
BUILT_IN_UNWIND_RESUME = 549
BUILT_IN_UPDATE_SETJMP_BUF = 511
BUILT_IN_VAL_COMPARE_AND_SWAP_1 = 633
BUILT_IN_VAL_COMPARE_AND_SWAP_16 = 637
BUILT_IN_VAL_COMPARE_AND_SWAP_2 = 634
BUILT_IN_VAL_COMPARE_AND_SWAP_4 = 635
BUILT_IN_VAL_COMPARE_AND_SWAP_8 = 636
BUILT_IN_VAL_COMPARE_AND_SWAP_N = 632
BUILT_IN_VA_ARG_PACK = 515
BUILT_IN_VA_ARG_PACK_LEN = 516
BUILT_IN_VA_COPY = 512
BUILT_IN_VA_END = 513
BUILT_IN_VA_START = 514
BUILT_IN_VFPRINTF = 375
BUILT_IN_VFPRINTF_CHK = 543
BUILT_IN_VFSCANF = 376
BUILT_IN_VPRINTF = 377
BUILT_IN_VPRINTF_CHK = 544
BUILT_IN_VSCANF = 378
BUILT_IN_VSNPRINTF = 379
BUILT_IN_VSNPRINTF_CHK = 539
BUILT_IN_VSPRINTF = 380
BUILT_IN_VSPRINTF_CHK = 540
BUILT_IN_VSSCANF = 381
BUILT_IN_XOR_AND_FETCH_1 = 615
BUILT_IN_XOR_AND_FETCH_16 = 619
BUILT_IN_XOR_AND_FETCH_2 = 616
BUILT_IN_XOR_AND_FETCH_4 = 617
BUILT_IN_XOR_AND_FETCH_8 = 618
BUILT_IN_XOR_AND_FETCH_N = 614
BUILT_IN_Y0 = 243
BUILT_IN_Y0F = 244
BUILT_IN_Y0L = 245
BUILT_IN_Y1 = 246
BUILT_IN_Y1F = 247
BUILT_IN_Y1L = 248
BUILT_IN_YN = 249
BUILT_IN_YNF = 250
BUILT_IN_YNL = 251
BUILT_IN__EXIT = 517
BUILT_IN__EXIT2 = 518
BUS_ADRALN = 1
BUS_ADRERR = 2
BUS_OBJERR = 3
CALL_EXPR = 58
CASE_LABEL_EXPR = 138
CAST_EXPR = 232
CATCH_EXPR = 141
CATEGORY_IMPLEMENTATION_TYPE = 281
CATEGORY_INTERFACE_TYPE = 280
CCAmode = 6
CCCmode = 7
CCFPUmode = 12
CCFPmode = 11
CCGCmode = 3
CCGOCmode = 4
CCNOmode = 5
CCOmode = 8
CCSmode = 9
CCZmode = 10
CCmode = 2
CDI_DOMINATORS = 1
CDI_POST_DOMINATORS = 2
CDImode = 48
CEIL_DIV_EXPR = 67
CEIL_MOD_EXPR = 71
CGRAPH_STATE_CONSTRUCTION = 0
CGRAPH_STATE_EXPANSION = 3
CGRAPH_STATE_FINISHED = 4
CGRAPH_STATE_IPA = 1
CGRAPH_STATE_IPA_SSA = 2
CHImode = 46
CIF_BODY_NOT_AVAILABLE = 3
CIF_FUNCTION_NOT_CONSIDERED = 2
CIF_FUNCTION_NOT_INLINABLE = 5
CIF_FUNCTION_NOT_INLINE_CANDIDATE = 6
CIF_INDIRECT_UNKNOWN_CALL = 19
CIF_INLINE_UNIT_GROWTH_LIMIT = 11
CIF_LARGE_FUNCTION_GROWTH_LIMIT = 7
CIF_LARGE_STACK_FRAME_GROWTH_LIMIT = 8
CIF_MAX_INLINE_INSNS_AUTO_LIMIT = 10
CIF_MAX_INLINE_INSNS_SINGLE_LIMIT = 9
CIF_MISMATCHED_ARGUMENTS = 17
CIF_NOT_DECLARED_INLINED = 14
CIF_N_REASONS = 21
CIF_OK = 0
CIF_OPTIMIZING_FOR_SIZE = 15
CIF_ORIGINALLY_INDIRECT_CALL = 18
CIF_OVERWRITABLE = 20
CIF_RECURSIVE_INLINING = 12
CIF_REDEFINED_EXTERN_INLINE = 4
CIF_TARGET_OPTION_MISMATCH = 16
CIF_UNLIKELY_CALL = 13
CIF_UNSPECIFIED = 1
CLASS_IMPLEMENTATION_TYPE = 279
CLASS_INTERFACE_TYPE = 278
CLASS_METHOD_DECL = 285
CLASS_REFERENCE_EXPR = 288
CLD_CONTINUED = 6
CLD_DUMPED = 3
CLD_EXITED = 1
CLD_KILLED = 2
CLD_STOPPED = 5
CLD_TRAPPED = 4
CLEANUP_POINT_EXPR = 60
CLEANUP_STMT = 246
CLK_ASM = 11
CLK_CXX0X = 10
CLK_CXX98 = 8
CLK_GNUC1X = 2
CLK_GNUC89 = 0
CLK_GNUC99 = 1
CLK_GNUCXX = 7
CLK_GNUCXX0X = 9
CLK_STDC1X = 6
CLK_STDC89 = 3
CLK_STDC94 = 4
CLK_STDC99 = 5
CLOBBERED_REGS = 8
CM_32 = 0
CM_KERNEL = 2
CM_LARGE = 4
CM_LARGE_PIC = 7
CM_MEDIUM = 3
CM_MEDIUM_PIC = 6
CM_SMALL = 1
CM_SMALL_PIC = 5
COImode = 50
COMPARE_EXPR = 275
COMPARE_G_EXPR = 277
COMPARE_L_EXPR = 276
COMPLEX_CST = 27
COMPLEX_EXPR = 122
COMPLEX_TYPE = 14
COMPONENT_REF = 42
COMPOUND_EXPR = 51
COMPOUND_LITERAL_EXPR = 118
COND_EXPR = 55
CONJ_EXPR = 123
CONSTRUCTOR = 50
CONST_CAST_EXPR = 234
CONST_DECL = 34
CONTINUE_STMT = 253
CONVERT_EXPR = 112
CPLD_COPY = 1
CPLD_NONE = 0
CPLD_REFERENCE = 2
CPO_COMPARISON = 0
CPO_CONDITIONAL_EXPR = 2
CPO_CONVERSION = 1
CPP0X_AUTO = 4
CPP0X_DEFAULTED_DELETED = 6
CPP0X_EXPLICIT_CONVERSION = 1
CPP0X_INITIALIZER_LISTS = 0
CPP0X_INLINE_NAMESPACES = 7
CPP0X_LAMBDA_EXPR = 3
CPP0X_SCOPED_ENUMS = 5
CPP0X_VARIADIC_TEMPLATES = 2
CPP_AND = 9
CPP_AND_AND = 15
CPP_AND_EQ = 32
CPP_ATSIGN = 52
CPP_AT_NAME = 54
CPP_CHAR = 56
CPP_CHAR16 = 58
CPP_CHAR32 = 59
CPP_CLOSE_BRACE = 42
CPP_CLOSE_PAREN = 21
CPP_CLOSE_SQUARE = 40
CPP_COLON = 18
CPP_COMMA = 19
CPP_COMMENT = 68
CPP_COMPL = 14
CPP_DEREF = 47
CPP_DEREF_STAR = 50
CPP_DIV = 7
CPP_DIV_EQ = 30
CPP_DL_ERROR = 3
CPP_DL_FATAL = 6
CPP_DL_ICE = 4
CPP_DL_NOTE = 5
CPP_DL_PEDWARN = 2
CPP_DL_WARNING = 0
CPP_DL_WARNING_SYSHDR = 1
CPP_DOT = 48
CPP_DOT_STAR = 51
CPP_ELLIPSIS = 44
CPP_EOF = 22
CPP_EQ = 0
CPP_EQ_EQ = 23
CPP_FIRST_DIGRAPH = 37
CPP_GREATER = 2
CPP_GREATER_EQ = 25
CPP_HASH = 37
CPP_HEADER_NAME = 67
CPP_LAST_CPP_OP = 26
CPP_LAST_EQ = 13
CPP_LAST_PUNCTUATOR = 52
CPP_LESS = 3
CPP_LESS_EQ = 26
CPP_LSHIFT = 13
CPP_LSHIFT_EQ = 36
CPP_MACRO_ARG = 69
CPP_MINUS = 5
CPP_MINUS_EQ = 28
CPP_MINUS_MINUS = 46
CPP_MOD = 8
CPP_MOD_EQ = 31
CPP_MULT = 6
CPP_MULT_EQ = 29
CPP_NAME = 53
CPP_NOT = 1
CPP_NOT_EQ = 24
CPP_NUMBER = 55
CPP_OBJC_STRING = 66
CPP_OPEN_BRACE = 41
CPP_OPEN_PAREN = 20
CPP_OPEN_SQUARE = 39
CPP_OR = 10
CPP_OR_EQ = 33
CPP_OR_OR = 16
CPP_OTHER = 60
CPP_PADDING = 72
CPP_PASTE = 38
CPP_PLUS = 4
CPP_PLUS_EQ = 27
CPP_PLUS_PLUS = 45
CPP_PRAGMA = 70
CPP_PRAGMA_EOL = 71
CPP_QUERY = 17
CPP_RSHIFT = 12
CPP_RSHIFT_EQ = 35
CPP_SCOPE = 49
CPP_SEMICOLON = 43
CPP_STRING = 61
CPP_STRING16 = 63
CPP_STRING32 = 64
CPP_TOKEN_FLD_ARG_NO = 3
CPP_TOKEN_FLD_NODE = 0
CPP_TOKEN_FLD_NONE = 6
CPP_TOKEN_FLD_PRAGMA = 5
CPP_TOKEN_FLD_SOURCE = 1
CPP_TOKEN_FLD_STR = 2
CPP_TOKEN_FLD_TOKEN_NO = 4
CPP_UTF8STRING = 65
CPP_WCHAR = 57
CPP_WSTRING = 62
CPP_W_BUILTIN_MACRO_REDEFINED = 11
CPP_W_COMMENTS = 2
CPP_W_CXX_OPERATOR_NAMES = 15
CPP_W_DEPRECATED = 1
CPP_W_DOLLARS = 12
CPP_W_ENDIF_LABELS = 8
CPP_W_INVALID_PCH = 17
CPP_W_LONG_LONG = 7
CPP_W_MISSING_INCLUDE_DIRS = 3
CPP_W_MULTICHAR = 5
CPP_W_NONE = 0
CPP_W_NORMALIZE = 16
CPP_W_NUM_SIGN_CHANGE = 9
CPP_W_TRADITIONAL = 6
CPP_W_TRIGRAPHS = 4
CPP_W_UNDEF = 13
CPP_W_UNUSED_MACROS = 14
CPP_W_VARIADIC_MACROS = 10
CPP_W_WARNING_DIRECTIVE = 18
CPP_XOR = 11
CPP_XOR_EQ = 34
CPTI_ABI = 20
CPTI_ABORT_FNDECL = 23
CPTI_AGGR_TAG = 25
CPTI_ATEXIT = 51
CPTI_ATEXIT_FN_PTR_TYPE = 50
CPTI_BASE_CTOR_IDENTIFIER = 28
CPTI_BASE_DTOR_IDENTIFIER = 31
CPTI_CALL_UNEXPECTED = 49
CPTI_CLASS_TYPE = 14
CPTI_CLEANUP_TYPE = 12
CPTI_COMPLETE_CTOR_IDENTIFIER = 27
CPTI_COMPLETE_DTOR_IDENTIFIER = 30
CPTI_CONST_TYPE_INFO_TYPE = 21
CPTI_CTOR_IDENTIFIER = 26
CPTI_DCAST = 53
CPTI_DELETING_DTOR_IDENTIFIER = 32
CPTI_DELTA_IDENTIFIER = 33
CPTI_DELTA_TYPE = 10
CPTI_DSO_HANDLE = 52
CPTI_DTOR_IDENTIFIER = 29
CPTI_EMPTY_EXCEPT_SPEC = 44
CPTI_GLOBAL_DELETE_FNDECL = 24
CPTI_INIT_LIST_TYPE = 16
CPTI_IN_CHARGE_IDENTIFIER = 34
CPTI_JAVA_BOOLEAN_TYPE = 7
CPTI_JAVA_BYTE_TYPE = 0
CPTI_JAVA_CHAR_TYPE = 6
CPTI_JAVA_DOUBLE_TYPE = 5
CPTI_JAVA_FLOAT_TYPE = 4
CPTI_JAVA_INT_TYPE = 2
CPTI_JAVA_LONG_TYPE = 3
CPTI_JAVA_SHORT_TYPE = 1
CPTI_JCLASS = 47
CPTI_KEYED_CLASSES = 54
CPTI_LANG_NAME_C = 41
CPTI_LANG_NAME_CPLUSPLUS = 42
CPTI_LANG_NAME_JAVA = 43
CPTI_MAX = 57
CPTI_NELTS_IDENTIFIER = 36
CPTI_NOEXCEPT_FALSE_SPEC = 46
CPTI_NOEXCEPT_TRUE_SPEC = 45
CPTI_NULLPTR = 55
CPTI_NULLPTR_TYPE = 56
CPTI_PFN_IDENTIFIER = 38
CPTI_STD = 19
CPTI_STD_IDENTIFIER = 40
CPTI_TERMINATE = 48
CPTI_THIS_IDENTIFIER = 37
CPTI_TYPE_INFO_PTR_TYPE = 22
CPTI_UNKNOWN_TYPE = 15
CPTI_VPTR_IDENTIFIER = 39
CPTI_VTABLE_ENTRY_TYPE = 9
CPTI_VTABLE_INDEX_TYPE = 11
CPTI_VTBL_PTR_TYPE = 18
CPTI_VTBL_TYPE = 17
CPTI_VTT_PARM_IDENTIFIER = 35
CPTI_VTT_PARM_TYPE = 13
CPTI_WCHAR_DECL = 8
CPTK_HAS_NOTHROW_ASSIGN = 0
CPTK_HAS_NOTHROW_CONSTRUCTOR = 1
CPTK_HAS_NOTHROW_COPY = 2
CPTK_HAS_TRIVIAL_ASSIGN = 3
CPTK_HAS_TRIVIAL_CONSTRUCTOR = 4
CPTK_HAS_TRIVIAL_COPY = 5
CPTK_HAS_TRIVIAL_DESTRUCTOR = 6
CPTK_HAS_VIRTUAL_DESTRUCTOR = 7
CPTK_IS_ABSTRACT = 8
CPTK_IS_BASE_OF = 9
CPTK_IS_CLASS = 10
CPTK_IS_CONVERTIBLE_TO = 11
CPTK_IS_EMPTY = 12
CPTK_IS_ENUM = 13
CPTK_IS_LITERAL_TYPE = 18
CPTK_IS_POD = 14
CPTK_IS_POLYMORPHIC = 15
CPTK_IS_STD_LAYOUT = 16
CPTK_IS_TRIVIAL = 17
CPTK_IS_UNION = 19
CP_ID_KIND_NONE = 0
CP_ID_KIND_QUALIFIED = 4
CP_ID_KIND_TEMPLATE_ID = 3
CP_ID_KIND_UNQUALIFIED = 1
CP_ID_KIND_UNQUALIFIED_DEPENDENT = 2
CQImode = 45
CREG = 3
CSImode = 47
CTI_C99_FUNCTION_NAME_DECL = 51
CTI_CHAR16_ARRAY_TYPE = 39
CTI_CHAR16_TYPE = 0
CTI_CHAR32_ARRAY_TYPE = 40
CTI_CHAR32_TYPE = 1
CTI_CHAR_ARRAY_TYPE = 38
CTI_CONST_STRING_TYPE = 44
CTI_DEFAULT_FUNCTION_TYPE = 48
CTI_FUNCTION_NAME_DECL = 49
CTI_INT16_TYPE = 13
CTI_INT32_TYPE = 14
CTI_INT64_TYPE = 15
CTI_INT8_TYPE = 12
CTI_INTMAX_TYPE = 7
CTI_INTPTR_TYPE = 36
CTI_INT_ARRAY_TYPE = 42
CTI_INT_FAST16_TYPE = 29
CTI_INT_FAST32_TYPE = 30
CTI_INT_FAST64_TYPE = 31
CTI_INT_FAST8_TYPE = 28
CTI_INT_LEAST16_TYPE = 21
CTI_INT_LEAST32_TYPE = 22
CTI_INT_LEAST64_TYPE = 23
CTI_INT_LEAST8_TYPE = 20
CTI_MAX = 55
CTI_NULL = 54
CTI_PRETTY_FUNCTION_NAME_DECL = 50
CTI_SAVED_FUNCTION_NAME_DECLS = 52
CTI_SIGNED_SIZE_TYPE = 5
CTI_SIG_ATOMIC_TYPE = 11
CTI_STRING_TYPE = 43
CTI_TRUTHVALUE_FALSE = 47
CTI_TRUTHVALUE_TRUE = 46
CTI_TRUTHVALUE_TYPE = 45
CTI_UINT16_TYPE = 17
CTI_UINT32_TYPE = 18
CTI_UINT64_TYPE = 19
CTI_UINT8_TYPE = 16
CTI_UINTMAX_TYPE = 8
CTI_UINTPTR_TYPE = 37
CTI_UINT_FAST16_TYPE = 33
CTI_UINT_FAST32_TYPE = 34
CTI_UINT_FAST64_TYPE = 35
CTI_UINT_FAST8_TYPE = 32
CTI_UINT_LEAST16_TYPE = 25
CTI_UINT_LEAST32_TYPE = 26
CTI_UINT_LEAST64_TYPE = 27
CTI_UINT_LEAST8_TYPE = 24
CTI_UNDERLYING_WCHAR_TYPE = 3
CTI_UNSIGNED_PTRDIFF_TYPE = 6
CTI_VOID_ZERO = 53
CTI_WCHAR_ARRAY_TYPE = 41
CTI_WCHAR_TYPE = 2
CTI_WIDEST_INT_LIT_TYPE = 9
CTI_WIDEST_UINT_LIT_TYPE = 10
CTI_WINT_TYPE = 4
CTImode = 49
CTOR_INITIALIZER = 241
C_MAYBE_CONST_EXPR = 192
DAmode = 32
DBX_DEBUG = 1
DCmode = 52
DDmode = 43
DEBUG_EXPR_DECL = 38
DECLTYPE_TYPE = 272
DECL_EXPR = 131
DEDUCE_CALL = 0
DEDUCE_CONV = 1
DEDUCE_EXACT = 2
DEFAULT_ARG = 227
DELETE_EXPR = 207
DEPS_NONE = 0
DEPS_SYSTEM = 2
DEPS_USER = 1
DFmode = 39
DIAGNOSTICS_SHOW_PREFIX_EVERY_LINE = 2
DIAGNOSTICS_SHOW_PREFIX_NEVER = 1
DIAGNOSTICS_SHOW_PREFIX_ONCE = 0
DINFO_LEVEL_NONE = 0
DINFO_LEVEL_NORMAL = 2
DINFO_LEVEL_TERSE = 1
DINFO_LEVEL_VERBOSE = 3
DINFO_STRUCT_FILE_ANY = 3
DINFO_STRUCT_FILE_BASE = 1
DINFO_STRUCT_FILE_NONE = 0
DINFO_STRUCT_FILE_SYS = 2
DINFO_USAGE_DFN = 0
DINFO_USAGE_DIR_USE = 1
DINFO_USAGE_IND_USE = 2
DINFO_USAGE_NUM_ENUMS = 3
DIREG = 6
DImode = 17
DK_ANACHRONISM = 7
DK_DEBUG = 9
DK_ERROR = 4
DK_FATAL = 2
DK_ICE = 3
DK_IGNORED = 1
DK_LAST_DIAGNOSTIC_KIND = 12
DK_NOTE = 8
DK_PEDWARN = 10
DK_PERMERROR = 11
DK_POP = 13
DK_SORRY = 5
DK_UNSPECIFIED = 0
DK_WARNING = 6
DOM_NONE = 0
DOM_NO_FAST_QUERY = 1
DOM_OK = 2
DOTSTAR_EXPR = 237
DOT_PROD_EXPR = 167
DO_STMT = 251
DQmode = 23
DREG = 2
DTOR_FLAG = 1
DWARF2_DEBUG = 3
DYNAMIC_CAST_EXPR = 236
EH_FILTER_EXPR = 142
EH_SPEC_BLOCK = 243
ELK_FUNC_CAST = 2
ELK_INIT = 0
ELK_MEM_INIT = 1
EMPTY_CLASS_EXPR = 215
END_BUILTINS = 720
END_PREDICTORS = 28
ENUMERAL_TYPE = 6
EQ_EXPR = 100
ERROR_MARK = 0
EV_DIR_DECREASES = 1
EV_DIR_GROWS = 0
EV_DIR_UNKNOWN = 2
EXACT_DIV_EXPR = 75
EXCESS_PRECISION_DEFAULT = 0
EXCESS_PRECISION_EXPR = 193
EXCESS_PRECISION_FAST = 1
EXCESS_PRECISION_STANDARD = 2
EXIT_EXPR = 135
EXIT_STMT = 202
EXPR_PACK_EXPANSION = 268
EXPR_STMT = 255
FDESC_EXPR = 121
FIELD_DECL = 32
FIXED_CONVERT_EXPR = 114
FIXED_CST = 26
FIXED_POINT_TYPE = 13
FIX_TRUNC_EXPR = 76
FLOAT_EXPR = 77
FLOAT_INT_REGS = 23
FLOAT_INT_SSE_REGS = 25
FLOAT_REGS = 16
FLOAT_SSE_REGS = 22
FLOOR_DIV_EXPR = 68
FLOOR_MOD_EXPR = 72
FMA_EXPR = 172
FOR_STMT = 248
FPE_FLTDIV = 3
FPE_FLTINV = 7
FPE_FLTOVF = 4
FPE_FLTRES = 6
FPE_FLTSUB = 8
FPE_FLTUND = 5
FPE_INTDIV = 1
FPE_INTOVF = 2
FPMATH_387 = 1
FPMATH_SSE = 2
FP_CONTRACT_FAST = 2
FP_CONTRACT_OFF = 0
FP_CONTRACT_ON = 1
FP_SECOND_REG = 15
FP_SECOND_SSE_REGS = 21
FP_TOP_REG = 14
FP_TOP_SSE_REGS = 20
FULL_BUILTIN_STACK_CHECK = 3
FUNCTION_DECL = 30
FUNCTION_TYPE = 21
F_OWNER_GID = 2
F_OWNER_PGRP = 2
F_OWNER_PID = 1
F_OWNER_TID = 0
GENERAL_REGS = 13
GENERIC_STACK_CHECK = 1
GE_EXPR = 99
GF_ASM_INPUT = 1
GF_ASM_VOLATILE = 2
GF_CALL_CANNOT_INLINE = 1
GF_CALL_FROM_THUNK = 2
GF_CALL_INTERNAL = 64
GF_CALL_INTERNAL_FN = 65280
GF_CALL_NOTHROW = 32
GF_CALL_RETURN_SLOT_OPT = 4
GF_CALL_TAILCALL = 8
GF_CALL_VA_ARG_PACK = 16
GF_OMP_PARALLEL_COMBINED = 1
GF_OMP_RETURN_NOWAIT = 1
GF_OMP_SECTION_LAST = 1
GF_PLF_1 = 1
GF_PLF_2 = 2
GF_PREDICT_TAKEN = 32768
GIMPLE_ASM = 7
GIMPLE_ASSIGN = 6
GIMPLE_BINARY_RHS = 2
GIMPLE_BIND = 10
GIMPLE_CALL = 8
GIMPLE_CATCH = 11
GIMPLE_COND = 1
GIMPLE_DEBUG = 2
GIMPLE_DEBUG_BIND = 0
GIMPLE_EH_DISPATCH = 15
GIMPLE_EH_FILTER = 12
GIMPLE_EH_MUST_NOT_THROW = 13
GIMPLE_ERROR_MARK = 0
GIMPLE_GOTO = 3
GIMPLE_INVALID_RHS = 0
GIMPLE_LABEL = 4
GIMPLE_NOP = 18
GIMPLE_OMP_ATOMIC_LOAD = 19
GIMPLE_OMP_ATOMIC_STORE = 20
GIMPLE_OMP_CONTINUE = 21
GIMPLE_OMP_CRITICAL = 22
GIMPLE_OMP_FOR = 23
GIMPLE_OMP_MASTER = 24
GIMPLE_OMP_ORDERED = 25
GIMPLE_OMP_PARALLEL = 26
GIMPLE_OMP_RETURN = 28
GIMPLE_OMP_SECTION = 29
GIMPLE_OMP_SECTIONS = 30
GIMPLE_OMP_SECTIONS_SWITCH = 31
GIMPLE_OMP_SINGLE = 32
GIMPLE_OMP_TASK = 27
GIMPLE_PHI = 16
GIMPLE_PREDICT = 33
GIMPLE_RESX = 14
GIMPLE_RETURN = 9
GIMPLE_SINGLE_RHS = 4
GIMPLE_SWITCH = 5
GIMPLE_TERNARY_RHS = 1
GIMPLE_TRY = 17
GIMPLE_TRY_CATCH = 1
GIMPLE_TRY_CATCH_IS_CLEANUP = 4
GIMPLE_TRY_FINALLY = 2
GIMPLE_TRY_KIND = 3
GIMPLE_UNARY_RHS = 3
GIMPLE_WITH_CLEANUP_EXPR = 34
GMP_ERROR_DIVISION_BY_ZERO = 2
GMP_ERROR_INVALID_ARGUMENT = 8
GMP_ERROR_NONE = 0
GMP_ERROR_SQRT_OF_NEGATIVE = 4
GMP_ERROR_UNSUPPORTED_ARGUMENT = 1
GMP_RAND_ALG_DEFAULT = 0
GMP_RAND_ALG_LC = 0
GOTO_EXPR = 133
GSI_CONTINUE_LINKING = 2
GSI_NEW_STMT = 0
GSI_SAME_STMT = 1
GSS_ASM = 5
GSS_BASE = 0
GSS_BIND = 6
GSS_CALL = 4
GSS_CATCH = 9
GSS_EH_CTRL = 12
GSS_EH_FILTER = 10
GSS_EH_MNT = 11
GSS_OMP = 14
GSS_OMP_ATOMIC_LOAD = 22
GSS_OMP_ATOMIC_STORE = 23
GSS_OMP_CONTINUE = 21
GSS_OMP_CRITICAL = 15
GSS_OMP_FOR = 16
GSS_OMP_PARALLEL = 17
GSS_OMP_SECTIONS = 19
GSS_OMP_SINGLE = 20
GSS_OMP_TASK = 18
GSS_PHI = 7
GSS_TRY = 8
GSS_WCE = 13
GSS_WITH_MEM_OPS = 3
GSS_WITH_MEM_OPS_BASE = 2
GSS_WITH_OPS = 1
GS_ALL_DONE = 1
GS_ERROR = -2
GS_OK = 0
GS_UNHANDLED = -1
GTC_DIAG = 1
GTC_MERGE = 0
GT_EXPR = 98
HANDLER = 244
HAmode = 30
HImode = 15
HQmode = 21
HT_ALLOC = 1
HT_NO_INSERT = 0
I387_CEIL = 2
I387_FLOOR = 1
I387_MASK_PM = 3
I387_TRUNC = 0
ICR_ARGPASS = 3
ICR_ASSIGN = 5
ICR_CONVERTING = 1
ICR_DEFAULT_ARGUMENT = 0
ICR_INIT = 2
ICR_RETURN = 4
ICV_CAST = 0
ICV_LEFT_OF_COMMA = 4
ICV_RIGHT_OF_COMMA = 3
ICV_SECOND_OF_COND = 1
ICV_STATEMENT = 5
ICV_THIRD_IN_FOR = 6
ICV_THIRD_OF_COND = 2
IDENTIFIER_NODE = 1
IFN_LAST = 2
IFN_LOAD_LANES = 0
IFN_STORE_LANES = 1
IF_STMT = 247
ILL_BADSTK = 8
ILL_COPROC = 7
ILL_ILLADR = 3
ILL_ILLOPC = 1
ILL_ILLOPN = 2
ILL_ILLTRP = 4
ILL_PRVOPC = 5
ILL_PRVREG = 6
IMAGPART_EXPR = 45
IMPORTED_DECL = 40
INDEX_REGS = 11
INDIRECT_REF = 48
INIT_EXPR = 53
INSERT = 1
INSTANCE_METHOD_DECL = 284
INTEGER_CST = 24
INTEGER_TYPE = 8
INT_SSE_REGS = 24
IPA_REF_ADDR = 2
IPA_REF_CGRAPH = 0
IPA_REF_LOAD = 0
IPA_REF_STORE = 1
IPA_REF_VARPOOL = 1
IRA_ALGORITHM_CB = 0
IRA_ALGORITHM_PRIORITY = 1
IRA_REGION_ALL = 1
IRA_REGION_MIXED = 2
IRA_REGION_ONE = 0
IR_GIMPLE = 0
IR_RTL_CFGLAYOUT = 2
IR_RTL_CFGRTL = 1
ITIMER_PROF = 2
ITIMER_REAL = 0
ITIMER_VIRTUAL = 1
IX86_FPCMP_ARITH = 2
IX86_FPCMP_COMI = 1
IX86_FPCMP_SAHF = 0
KEYWORD_DECL = 283
LABEL_DECL = 31
LABEL_EXPR = 132
LAMBDA_EXPR = 271
LANG_TYPE = 23
LAST_AND_UNUSED_GIMPLE_CODE = 35
LAST_AND_UNUSED_TREE_CODE = 191
LAST_GSS_ENUM = 24
LAST_TS_CP_ENUM = 14
LAST_TS_ENUM = 35
LC_ENTER = 0
LC_LEAVE = 1
LC_RENAME = 2
LC_RENAME_VERBATIM = 3
LDPK_COMMON = 4
LDPK_DEF = 0
LDPK_UNDEF = 2
LDPK_WEAKDEF = 1
LDPK_WEAKUNDEF = 3
LDPL_ERROR = 2
LDPL_FATAL = 3
LDPL_INFO = 0
LDPL_WARNING = 1
LDPO_DYN = 2
LDPO_EXEC = 1
LDPO_REL = 0
LDPR_PREEMPTED_IR = 5
LDPR_PREEMPTED_REG = 4
LDPR_PREVAILING_DEF = 2
LDPR_PREVAILING_DEF_IRONLY = 3
LDPR_RESOLVED_DYN = 8
LDPR_RESOLVED_EXEC = 7
LDPR_RESOLVED_IR = 6
LDPR_UNDEF = 1
LDPR_UNKNOWN = 0
LDPS_BAD_HANDLE = 2
LDPS_ERR = 3
LDPS_NO_SYMS = 1
LDPS_OK = 0
LDPT_ADD_INPUT_FILE = 10
LDPT_ADD_INPUT_LIBRARY = 14
LDPT_ADD_SYMBOLS = 8
LDPT_API_VERSION = 1
LDPT_GET_INPUT_FILE = 12
LDPT_GET_SYMBOLS = 9
LDPT_GNU_LD_VERSION = 17
LDPT_GOLD_VERSION = 2
LDPT_LINKER_OUTPUT = 3
LDPT_MESSAGE = 11
LDPT_NULL = 0
LDPT_OPTION = 4
LDPT_OUTPUT_NAME = 15
LDPT_REGISTER_ALL_SYMBOLS_READ_HOOK = 6
LDPT_REGISTER_CLAIM_FILE_HOOK = 5
LDPT_REGISTER_CLEANUP_HOOK = 7
LDPT_RELEASE_INPUT_FILE = 13
LDPT_SET_EXTRA_LIBRARY_PATH = 16
LDPV_DEFAULT = 0
LDPV_HIDDEN = 3
LDPV_INTERNAL = 2
LDPV_PROTECTED = 1
LD_PLUGIN_API_VERSION = 1
LEGACY_REGS = 12
LE_EXPR = 97
LIM_REG_CLASSES = 27
LOOP_EXPR = 136
LOOP_STMT = 201
LROTATE_EXPR = 84
LSHIFT_EXPR = 82
LTGT_EXPR = 109
LT_EXPR = 96
MAX_386_ENTITIES = 4
MAX_386_STACK_LOCALS = 7
MAX_EXPR = 80
MAX_MACHINE_MODE = 87
MAX_MODE_ACCUM = 33
MAX_MODE_CC = 12
MAX_MODE_CLASS = 18
MAX_MODE_COMPLEX_FLOAT = 54
MAX_MODE_COMPLEX_INT = 50
MAX_MODE_DECIMAL_FLOAT = 44
MAX_MODE_FLOAT = 41
MAX_MODE_FRACT = 24
MAX_MODE_INT = 19
MAX_MODE_PARTIAL_INT = 0
MAX_MODE_RANDOM = 1
MAX_MODE_UACCUM = 37
MAX_MODE_UFRACT = 29
MAX_MODE_VECTOR_ACCUM = 0
MAX_MODE_VECTOR_FLOAT = 86
MAX_MODE_VECTOR_FRACT = 0
MAX_MODE_VECTOR_INT = 77
MAX_MODE_VECTOR_UACCUM = 0
MAX_MODE_VECTOR_UFRACT = 0
MAX_TREE_CODES = 290
MAX_VERBOSITY_LEVEL = 10
MEMBER_REF = 210
MEM_REF = 152
MESSAGE_SEND_EXPR = 287
METHOD_TYPE = 22
MINUS_EXPR = 63
MINUS_NOMOD_EXPR = 198
MIN_EXPR = 79
MIN_MODE_ACCUM = 30
MIN_MODE_CC = 2
MIN_MODE_COMPLEX_FLOAT = 51
MIN_MODE_COMPLEX_INT = 45
MIN_MODE_DECIMAL_FLOAT = 42
MIN_MODE_FLOAT = 38
MIN_MODE_FRACT = 20
MIN_MODE_INT = 14
MIN_MODE_PARTIAL_INT = 0
MIN_MODE_RANDOM = 0
MIN_MODE_UACCUM = 34
MIN_MODE_UFRACT = 25
MIN_MODE_VECTOR_ACCUM = 0
MIN_MODE_VECTOR_FLOAT = 78
MIN_MODE_VECTOR_FRACT = 0
MIN_MODE_VECTOR_INT = 55
MIN_MODE_VECTOR_UACCUM = 0
MIN_MODE_VECTOR_UFRACT = 0
MMX_REGS = 19
MODE_ACCUM = 6
MODE_CC = 1
MODE_COMPLEX_FLOAT = 11
MODE_COMPLEX_INT = 10
MODE_DECIMAL_FLOAT = 9
MODE_FLOAT = 8
MODE_FRACT = 4
MODE_INT = 2
MODE_PARTIAL_INT = 3
MODE_RANDOM = 0
MODE_UACCUM = 7
MODE_UFRACT = 5
MODE_VECTOR_ACCUM = 15
MODE_VECTOR_FLOAT = 17
MODE_VECTOR_FRACT = 13
MODE_VECTOR_INT = 12
MODE_VECTOR_UACCUM = 16
MODE_VECTOR_UFRACT = 14
MODIFY_EXPR = 52
MODOP_EXPR = 231
MOVE_IMPOSSIBLE = 0
MOVE_POSSIBLE = 2
MOVE_PRESERVE_EXECUTION = 1
MS_ABI = 1
MULT_EXPR = 64
MUST_NOT_THROW_EXPR = 245
NAMESPACE_DECL = 39
NEED_PHI_STATE_MAYBE = 2
NEED_PHI_STATE_NO = 1
NEED_PHI_STATE_UNKNOWN = 0
NEGATE_EXPR = 78
NEW_EXPR = 205
NE_EXPR = 101
NODE_FREQUENCY_EXECUTED_ONCE = 1
NODE_FREQUENCY_HOT = 3
NODE_FREQUENCY_NORMAL = 2
NODE_FREQUENCY_UNLIKELY_EXECUTED = 0
NOEXCEPT_EXPR = 239
NONTYPE_ARGUMENT_PACK = 266
NON_DEPENDENT_EXPR = 240
NON_LVALUE_EXPR = 116
NON_Q_REGS = 10
NOP_EXPR = 115
NOT_BUILT_IN = 0
NOT_TAKEN = 0
NO_DEBUG = 0
NO_INSERT = 0
NO_REGS = 0
NO_SPECIAL = 0
NO_STACK_CHECK = 0
NTV_ANSWER = 1
NTV_ARGUMENT = 3
NTV_BUILTIN = 2
NTV_MACRO = 0
NTV_NONE = 4
NT_ASSERTION = 2
NT_MACRO = 1
NT_VOID = 0
NULLPTR_TYPE = 12
NULL_EXPR = 196
NUM_MACHINE_MODES = 87
N_OPTS = 1129
N_TTYPES = 73
OBJ_TYPE_REF = 49
OEP_ONLY_CONST = 1
OEP_PURE_SAME = 2
OFFSETOF_EXPR = 257
OFFSET_REF = 203
OFFSET_TYPE = 5
OImode = 19
OMP_ATOMIC = 162
OMP_CLAUSE = 163
OMP_CLAUSE_COLLAPSE = 14
OMP_CLAUSE_COPYIN = 6
OMP_CLAUSE_COPYPRIVATE = 7
OMP_CLAUSE_DEFAULT = 13
OMP_CLAUSE_DEFAULT_FIRSTPRIVATE = 4
OMP_CLAUSE_DEFAULT_NONE = 2
OMP_CLAUSE_DEFAULT_PRIVATE = 3
OMP_CLAUSE_DEFAULT_SHARED = 1
OMP_CLAUSE_DEFAULT_UNSPECIFIED = 0
OMP_CLAUSE_ERROR = 0
OMP_CLAUSE_FIRSTPRIVATE = 3
OMP_CLAUSE_IF = 8
OMP_CLAUSE_LASTPRIVATE = 4
OMP_CLAUSE_NOWAIT = 11
OMP_CLAUSE_NUM_THREADS = 9
OMP_CLAUSE_ORDERED = 12
OMP_CLAUSE_PRIVATE = 1
OMP_CLAUSE_REDUCTION = 5
OMP_CLAUSE_SCHEDULE = 10
OMP_CLAUSE_SCHEDULE_AUTO = 3
OMP_CLAUSE_SCHEDULE_DYNAMIC = 1
OMP_CLAUSE_SCHEDULE_GUIDED = 2
OMP_CLAUSE_SCHEDULE_RUNTIME = 4
OMP_CLAUSE_SCHEDULE_STATIC = 0
OMP_CLAUSE_SHARED = 2
OMP_CLAUSE_UNTIED = 15
OMP_CRITICAL = 161
OMP_FOR = 155
OMP_MASTER = 159
OMP_ORDERED = 160
OMP_PARALLEL = 153
OMP_SECTION = 158
OMP_SECTIONS = 156
OMP_SINGLE = 157
OMP_TASK = 154
OPTIMIZATION_NODE = 189
OPT_A = 114
OPT_B = 115
OPT_C = 116
OPT_CC = 117
OPT_D = 119
OPT_E = 120
OPT_F = 121
OPT_H = 122
OPT_I = 123
OPT_J = 124
OPT_L = 125
OPT_M = 126
OPT_MD = 127
OPT_MD_ = 128
OPT_MF = 129
OPT_MG = 130
OPT_MM = 131
OPT_MMD = 132
OPT_MMD_ = 133
OPT_MP = 134
OPT_MQ = 135
OPT_MT = 136
OPT_N = 137
OPT_O = 138
OPT_Ofast = 139
OPT_Os = 140
OPT_P = 141
OPT_Q = 142
OPT_Qn = 143
OPT_Qy = 144
OPT_R = 145
OPT_S = 146
OPT_SPECIAL_ignore = 1131
OPT_SPECIAL_input_file = 1133
OPT_SPECIAL_program_name = 1132
OPT_SPECIAL_unknown = 1130
OPT_T = 147
OPT_Tbss = 148
OPT_Tbss_ = 149
OPT_Tdata = 150
OPT_Tdata_ = 151
OPT_Ttext = 152
OPT_Ttext_ = 153
OPT_U = 154
OPT_Wa_ = 156
OPT_Wabi = 157
OPT_Waddress = 158
OPT_Waggregate_return = 159
OPT_Waliasing = 160
OPT_Walign_commons = 161
OPT_Wall = 162
OPT_Wall_deprecation = 163
OPT_Wall_javadoc = 164
OPT_Wampersand = 165
OPT_Warray_bounds = 166
OPT_Warray_temporaries = 167
OPT_Wassert_identifier = 168
OPT_Wassign_intercept = 169
OPT_Wattributes = 170
OPT_Wbad_function_cast = 171
OPT_Wboxing = 172
OPT_Wbuiltin_macro_redefined = 173
OPT_Wc__0x_compat = 175
OPT_Wc___compat = 174
OPT_Wcast_align = 176
OPT_Wcast_qual = 177
OPT_Wchar_concat = 178
OPT_Wchar_subscripts = 179
OPT_Wcharacter_truncation = 180
OPT_Wclobbered = 181
OPT_Wcomment = 182
OPT_Wcondition_assign = 184
OPT_Wconstructor_name = 185
OPT_Wconversion = 186
OPT_Wconversion_extra = 187
OPT_Wconversion_null = 188
OPT_Wcoverage_mismatch = 189
OPT_Wcpp = 190
OPT_Wctor_dtor_privacy = 191
OPT_Wdeclaration_after_statement = 192
OPT_Wdep_ann = 193
OPT_Wdeprecated = 194
OPT_Wdeprecated_declarations = 195
OPT_Wdisabled_optimization = 196
OPT_Wdiscouraged = 197
OPT_Wdiv_by_zero = 198
OPT_Wdouble_promotion = 199
OPT_Weffc__ = 200
OPT_Wempty_block = 201
OPT_Wempty_body = 202
OPT_Wendif_labels = 203
OPT_Wenum_compare = 204
OPT_Wenum_identifier = 205
OPT_Wenum_switch = 206
OPT_Werror = 207
OPT_Werror_ = 209
OPT_Wextra = 210
OPT_Wextraneous_semicolon = 211
OPT_Wfallthrough = 212
OPT_Wfatal_errors = 213
OPT_Wfield_hiding = 214
OPT_Wfinal_bound = 215
OPT_Wfinally = 216
OPT_Wfloat_equal = 217
OPT_Wforbidden = 218
OPT_Wformat = 219
OPT_Wformat_ = 226
OPT_Wformat_contains_nul = 220
OPT_Wformat_extra_args = 221
OPT_Wformat_nonliteral = 222
OPT_Wformat_security = 223
OPT_Wformat_y2k = 224
OPT_Wformat_zero_length = 225
OPT_Wframe_larger_than_ = 227
OPT_Whiding = 228
OPT_Wignored_qualifiers = 229
OPT_Wimplicit = 230
OPT_Wimplicit_function_declaration = 231
OPT_Wimplicit_int = 232
OPT_Wimplicit_interface = 233
OPT_Wimplicit_procedure = 234
OPT_Windirect_static = 236
OPT_Winit_self = 237
OPT_Winline = 238
OPT_Wint_to_pointer_cast = 239
OPT_Wintf_annotation = 240
OPT_Wintf_non_inherited = 241
OPT_Wintrinsic_shadow = 242
OPT_Wintrinsics_std = 243
OPT_Winvalid_offsetof = 244
OPT_Winvalid_pch = 245
OPT_Wjavadoc = 246
OPT_Wjump_misses_init = 247
OPT_Wl_ = 248
OPT_Wlarger_than_ = 250
OPT_Wline_truncation = 251
OPT_Wlocal_hiding = 252
OPT_Wlogical_op = 253
OPT_Wlong_long = 254
OPT_Wmain = 255
OPT_Wmasked_catch_block = 256
OPT_Wmissing_braces = 257
OPT_Wmissing_declarations = 258
OPT_Wmissing_field_initializers = 259
OPT_Wmissing_format_attribute = 260
OPT_Wmissing_include_dirs = 261
OPT_Wmissing_noreturn = 262
OPT_Wmissing_parameter_type = 263
OPT_Wmissing_prototypes = 264
OPT_Wmudflap = 265
OPT_Wmultichar = 266
OPT_Wnested_externs = 267
OPT_Wnls = 268
OPT_Wno_effect_assign = 269
OPT_Wnoexcept = 270
OPT_Wnon_template_friend = 271
OPT_Wnon_virtual_dtor = 272
OPT_Wnonnull = 273
OPT_Wnormalized_ = 274
OPT_Wnull = 275
OPT_Wold_style_cast = 276
OPT_Wold_style_declaration = 277
OPT_Wold_style_definition = 278
OPT_Wout_of_date = 279
OPT_Wover_ann = 280
OPT_Woverflow = 281
OPT_Woverlength_strings = 282
OPT_Woverloaded_virtual = 283
OPT_Woverride_init = 284
OPT_Wp_ = 285
OPT_Wpacked = 286
OPT_Wpacked_bitfield_compat = 287
OPT_Wpadded = 288
OPT_Wparam_assign = 289
OPT_Wparentheses = 290
OPT_Wpkg_default_method = 291
OPT_Wpmf_conversions = 292
OPT_Wpointer_arith = 293
OPT_Wpointer_sign = 294
OPT_Wpointer_to_int_cast = 295
OPT_Wpragmas = 296
OPT_Wproperty_assign_default = 297
OPT_Wprotocol = 298
OPT_Wpsabi = 299
OPT_Wraw = 300
OPT_Wreal_q_constant = 301
OPT_Wredundant_decls = 302
OPT_Wredundant_modifiers = 303
OPT_Wreorder = 304
OPT_Wreturn_type = 305
OPT_Wselector = 306
OPT_Wsequence_point = 307
OPT_Wserial = 308
OPT_Wshadow = 309
OPT_Wsign_compare = 310
OPT_Wsign_conversion = 311
OPT_Wsign_promo = 312
OPT_Wspecial_param_hiding = 313
OPT_Wstack_protector = 314
OPT_Wstatic_access = 315
OPT_Wstatic_receiver = 316
OPT_Wstrict_aliasing = 317
OPT_Wstrict_aliasing_ = 318
OPT_Wstrict_null_sentinel = 319
OPT_Wstrict_overflow = 320
OPT_Wstrict_overflow_ = 321
OPT_Wstrict_prototypes = 322
OPT_Wstrict_selector_match = 323
OPT_Wsuggest_attribute_const = 324
OPT_Wsuggest_attribute_noreturn = 325
OPT_Wsuggest_attribute_pure = 326
OPT_Wsuppress = 327
OPT_Wsurprising = 328
OPT_Wswitch = 329
OPT_Wswitch_default = 330
OPT_Wswitch_enum = 331
OPT_Wsync_nand = 332
OPT_Wsynth = 333
OPT_Wsynthetic_access = 334
OPT_Wsystem_headers = 335
OPT_Wtabs = 336
OPT_Wtasks = 337
OPT_Wtraditional = 338
OPT_Wtraditional_conversion = 339
OPT_Wtrampolines = 340
OPT_Wtrigraphs = 341
OPT_Wtype_hiding = 342
OPT_Wtype_limits = 343
OPT_Wuncheck = 344
OPT_Wundeclared_selector = 345
OPT_Wundef = 346
OPT_Wunderflow = 347
OPT_Wuninitialized = 348
OPT_Wunknown_pragmas = 349
OPT_Wunnecessary_else = 350
OPT_Wunqualified_field = 351
OPT_Wunsafe_loop_optimizations = 353
OPT_Wunsuffixed_float_constants = 354
OPT_Wunused = 355
OPT_Wunused_argument = 356
OPT_Wunused_but_set_parameter = 357
OPT_Wunused_but_set_variable = 358
OPT_Wunused_dummy_argument = 359
OPT_Wunused_function = 360
OPT_Wunused_import = 361
OPT_Wunused_label = 362
OPT_Wunused_local = 363
OPT_Wunused_macros = 364
OPT_Wunused_parameter = 365
OPT_Wunused_private = 366
OPT_Wunused_result = 367
OPT_Wunused_thrown = 368
OPT_Wunused_value = 369
OPT_Wunused_variable = 370
OPT_Wuseless_type_check = 371
OPT_Wvarargs_cast = 372
OPT_Wvariadic_macros = 373
OPT_Wvla = 374
OPT_Wvolatile_register_var = 375
OPT_Wwarning_token = 376
OPT_Wwrite_strings = 377
OPT_Xassembler = 378
OPT_Xlinker = 379
OPT_Xpreprocessor = 380
OPT_Z = 381
OPT____ = 0
OPT__help = 32
OPT__help_ = 33
OPT__output_pch_ = 65
OPT__param = 67
OPT__sysroot_ = 100
OPT__target_help = 101
OPT__version = 111
OPT_ansi = 382
OPT_aux_info = 383
OPT_auxbase = 385
OPT_auxbase_strip = 386
OPT_c = 388
OPT_coverage = 390
OPT_cpp = 391
OPT_cpp_ = 392
OPT_d = 393
OPT_dumpbase = 394
OPT_dumpdir = 395
OPT_dumpmachine = 396
OPT_dumpspecs = 397
OPT_dumpversion = 398
OPT_e = 399
OPT_export_dynamic = 401
OPT_extdirs = 402
OPT_fPIC = 404
OPT_fPIE = 405
OPT_fRTS_ = 406
OPT_fabi_version_ = 407
OPT_faccess_control = 408
OPT_falign_commons = 409
OPT_falign_functions = 410
OPT_falign_functions_ = 411
OPT_falign_jumps = 412
OPT_falign_jumps_ = 413
OPT_falign_labels = 414
OPT_falign_labels_ = 415
OPT_falign_loops = 416
OPT_falign_loops_ = 417
OPT_fall_intrinsics = 418
OPT_fallow_leading_underscore = 420
OPT_fasm = 426
OPT_fassert = 427
OPT_fassociative_math = 428
OPT_fassume_compiled = 429
OPT_fassume_compiled_ = 430
OPT_fasynchronous_unwind_tables = 431
OPT_fauto_inc_dec = 432
OPT_fautomatic = 433
OPT_faux_classpath = 434
OPT_fbackslash = 435
OPT_fbacktrace = 436
OPT_fblas_matmul_limit_ = 437
OPT_fbootclasspath_ = 438
OPT_fbootstrap_classes = 439
OPT_fbounds_check = 440
OPT_fbranch_count_reg = 441
OPT_fbranch_probabilities = 442
OPT_fbranch_target_load_optimize = 443
OPT_fbranch_target_load_optimize2 = 444
OPT_fbtr_bb_exclusive = 445
OPT_fbuiltin = 446
OPT_fbuiltin_ = 447
OPT_fcall_saved_ = 448
OPT_fcall_used_ = 449
OPT_fcaller_saves = 450
OPT_fcheck_ = 455
OPT_fcheck_array_temporaries = 451
OPT_fcheck_data_deps = 452
OPT_fcheck_new = 453
OPT_fcheck_references = 454
OPT_fclasspath_ = 456
OPT_fcoarray_ = 457
OPT_fcombine_stack_adjustments = 458
OPT_fcommon = 459
OPT_fcompare_debug = 460
OPT_fcompare_debug_ = 462
OPT_fcompare_debug_second = 461
OPT_fcompare_elim = 463
OPT_fcompile_resource_ = 464
OPT_fcond_mismatch = 465
OPT_fconserve_space = 466
OPT_fconserve_stack = 467
OPT_fconstant_string_class_ = 468
OPT_fconstexpr_depth_ = 469
OPT_fconvert_big_endian = 470
OPT_fconvert_little_endian = 471
OPT_fconvert_native = 472
OPT_fconvert_swap = 473
OPT_fcprop_registers = 474
OPT_fcray_pointer = 475
OPT_fcrossjumping = 476
OPT_fcse_follow_jumps = 477
OPT_fcx_fortran_rules = 479
OPT_fcx_limited_range = 480
OPT_fd_lines_as_code = 481
OPT_fd_lines_as_comments = 482
OPT_fdata_sections = 483
OPT_fdbg_cnt_ = 485
OPT_fdbg_cnt_list = 484
OPT_fdce = 486
OPT_fdebug_prefix_map_ = 487
OPT_fdeduce_init_list = 488
OPT_fdefault_double_8 = 489
OPT_fdefault_integer_8 = 491
OPT_fdefault_real_8 = 492
OPT_fdefer_pop = 493
OPT_fdelayed_branch = 494
OPT_fdelete_null_pointer_checks = 495
OPT_fdevirtualize = 496
OPT_fdiagnostics_show_location_ = 497
OPT_fdiagnostics_show_option = 498
OPT_fdirectives_only = 499
OPT_fdisable_assertions = 500
OPT_fdisable_assertions_ = 501
OPT_fdollar_ok = 502
OPT_fdollars_in_identifiers = 503
OPT_fdse = 504
OPT_fdump_ = 505
OPT_fdump_core = 506
OPT_fdump_final_insns = 507
OPT_fdump_final_insns_ = 508
OPT_fdump_fortran_optimized = 509
OPT_fdump_fortran_original = 510
OPT_fdump_go_spec_ = 511
OPT_fdump_noaddr = 512
OPT_fdump_parse_tree = 513
OPT_fdump_unnumbered = 514
OPT_fdump_unnumbered_links = 515
OPT_fdwarf2_cfi_asm = 516
OPT_fearly_inlining = 517
OPT_felide_constructors = 518
OPT_feliminate_dwarf2_dups = 519
OPT_feliminate_unused_debug_symbols = 520
OPT_feliminate_unused_debug_types = 521
OPT_femit_class_debug_always = 522
OPT_femit_class_file = 523
OPT_femit_class_files = 524
OPT_femit_struct_debug_baseonly = 525
OPT_femit_struct_debug_detailed_ = 526
OPT_femit_struct_debug_reduced = 527
OPT_fenable_assertions = 528
OPT_fenable_assertions_ = 529
OPT_fenable_icf_debug = 530
OPT_fencoding_ = 531
OPT_fenforce_eh_specs = 532
OPT_fexceptions = 534
OPT_fexcess_precision_ = 535
OPT_fexec_charset_ = 536
OPT_fexpensive_optimizations = 537
OPT_fextdirs_ = 538
OPT_fextended_identifiers = 539
OPT_fexternal_blas = 540
OPT_ff2c = 542
OPT_ffast_math = 543
OPT_ffilelist_file = 544
OPT_ffinite_math_only = 545
OPT_ffixed_ = 546
OPT_ffixed_form = 547
OPT_ffixed_line_length_ = 548
OPT_ffixed_line_length_none = 549
OPT_ffloat_store = 550
OPT_ffor_scope = 551
OPT_fforce_classes_archive_check = 553
OPT_fforward_propagate = 554
OPT_ffp_contract_ = 555
OPT_ffpe_trap_ = 556
OPT_ffree_form = 557
OPT_ffree_line_length_ = 558
OPT_ffree_line_length_none = 559
OPT_ffreestanding = 560
OPT_ffriend_injection = 561
OPT_ffunction_cse = 562
OPT_ffunction_sections = 563
OPT_fgcse = 564
OPT_fgcse_after_reload = 565
OPT_fgcse_las = 566
OPT_fgcse_lm = 567
OPT_fgcse_sm = 568
OPT_fgnu89_inline = 571
OPT_fgnu_keywords = 569
OPT_fgnu_runtime = 570
OPT_fgo_dump_ = 572
OPT_fgo_prefix_ = 573
OPT_fgraphite = 574
OPT_fgraphite_identity = 575
OPT_fguess_branch_probability = 576
OPT_fhash_synchronization = 579
OPT_fhosted = 583
OPT_fident = 585
OPT_fif_conversion = 586
OPT_fif_conversion2 = 587
OPT_fimplement_inlines = 588
OPT_fimplicit_inline_templates = 589
OPT_fimplicit_none = 590
OPT_fimplicit_templates = 591
OPT_findirect_classes = 592
OPT_findirect_dispatch = 593
OPT_findirect_inlining = 594
OPT_finhibit_size_directive = 595
OPT_finit_character_ = 596
OPT_finit_integer_ = 597
OPT_finit_local_zero = 598
OPT_finit_logical_ = 599
OPT_finit_real_ = 600
OPT_finline = 601
OPT_finline_functions = 602
OPT_finline_functions_called_once = 603
OPT_finline_limit_ = 605
OPT_finline_small_functions = 606
OPT_finput_charset_ = 607
OPT_finstrument_functions = 608
OPT_finstrument_functions_exclude_file_list_ = 609
OPT_finstrument_functions_exclude_function_list_ = 610
OPT_fintrinsic_modules_path = 611
OPT_fipa_cp = 612
OPT_fipa_cp_clone = 613
OPT_fipa_matrix_reorg = 614
OPT_fipa_profile = 615
OPT_fipa_pta = 616
OPT_fipa_pure_const = 617
OPT_fipa_reference = 618
OPT_fipa_sra = 619
OPT_fipa_struct_reorg = 620
OPT_fira_algorithm_ = 621
OPT_fira_loop_pressure = 622
OPT_fira_region_ = 623
OPT_fira_share_save_slots = 624
OPT_fira_share_spill_slots = 625
OPT_fira_verbose_ = 626
OPT_fivopts = 627
OPT_fjni = 628
OPT_fjump_tables = 629
OPT_fkeep_inline_dllexport = 630
OPT_fkeep_inline_functions = 631
OPT_fkeep_static_consts = 632
OPT_flax_vector_conversions = 634
OPT_fleading_underscore = 635
OPT_floop_block = 636
OPT_floop_flatten = 637
OPT_floop_interchange = 638
OPT_floop_parallelize_all = 640
OPT_floop_strip_mine = 641
OPT_flto = 642
OPT_flto_ = 648
OPT_flto_compression_level_ = 643
OPT_flto_partition_1to1 = 644
OPT_flto_partition_balanced = 645
OPT_flto_partition_none = 646
OPT_flto_report = 647
OPT_fltrans = 649
OPT_fltrans_output_list_ = 650
OPT_fmain_ = 651
OPT_fmath_errno = 652
OPT_fmax_array_constructor_ = 653
OPT_fmax_errors_ = 654
OPT_fmax_identifier_length_ = 655
OPT_fmax_stack_var_size_ = 656
OPT_fmax_subrecord_length_ = 657
OPT_fmem_report = 658
OPT_fmerge_all_constants = 659
OPT_fmerge_constants = 660
OPT_fmerge_debug_strings = 661
OPT_fmessage_length_ = 662
OPT_fmodule_private = 663
OPT_fmodulo_sched = 664
OPT_fmodulo_sched_allow_regmoves = 665
OPT_fmove_loop_invariants = 666
OPT_fms_extensions = 667
OPT_fmudflap = 668
OPT_fmudflapir = 669
OPT_fmudflapth = 670
OPT_fnext_runtime = 673
OPT_fnil_receivers = 674
OPT_fnon_call_exceptions = 675
OPT_fnonansi_builtins = 676
OPT_fnothrow_opt = 678
OPT_fobjc_abi_version_ = 679
OPT_fobjc_call_cxx_cdtors = 680
OPT_fobjc_direct_dispatch = 681
OPT_fobjc_exceptions = 682
OPT_fobjc_gc = 683
OPT_fobjc_nilcheck = 684
OPT_fobjc_sjlj_exceptions = 685
OPT_fobjc_std_objc1 = 686
OPT_fomit_frame_pointer = 687
OPT_fopenmp = 688
OPT_foperator_names = 689
OPT_foptimize_register_move = 690
OPT_foptimize_sibling_calls = 691
OPT_foptimize_static_class_initialization = 692
OPT_foutput_class_dir_ = 694
OPT_fpack_derived = 695
OPT_fpack_struct = 696
OPT_fpack_struct_ = 697
OPT_fpartial_inlining = 698
OPT_fpcc_struct_return = 699
OPT_fpch_deps = 700
OPT_fpch_preprocess = 701
OPT_fpeel_loops = 702
OPT_fpeephole = 703
OPT_fpeephole2 = 704
OPT_fpermissive = 705
OPT_fpic = 706
OPT_fpie = 707
OPT_fplan9_extensions = 708
OPT_fplugin_ = 710
OPT_fplugin_arg_ = 709
OPT_fpost_ipa_mem_report = 711
OPT_fpre_ipa_mem_report = 712
OPT_fpredictive_commoning = 713
OPT_fprefetch_loop_arrays = 714
OPT_fpreprocessed = 715
OPT_fpretty_templates = 716
OPT_fprofile = 717
OPT_fprofile_arcs = 718
OPT_fprofile_correction = 719
OPT_fprofile_dir_ = 720
OPT_fprofile_generate = 721
OPT_fprofile_generate_ = 722
OPT_fprofile_use = 723
OPT_fprofile_use_ = 724
OPT_fprofile_values = 725
OPT_fprotect_parens = 726
OPT_frandom_seed = 727
OPT_frandom_seed_ = 728
OPT_frange_check = 729
OPT_frealloc_lhs = 730
OPT_freciprocal_math = 731
OPT_frecord_gcc_switches = 732
OPT_frecord_marker_4 = 733
OPT_frecord_marker_8 = 734
OPT_frecursive = 735
OPT_freduced_reflection = 736
OPT_freg_struct_return = 737
OPT_fregmove = 738
OPT_frename_registers = 739
OPT_freorder_blocks = 740
OPT_freorder_blocks_and_partition = 741
OPT_freorder_functions = 742
OPT_frepack_arrays = 743
OPT_freplace_objc_classes = 744
OPT_frepo = 745
OPT_frequire_return_statement = 746
OPT_frerun_cse_after_loop = 747
OPT_freschedule_modulo_scheduled_loops = 749
OPT_fresolution_ = 750
OPT_frounding_math = 751
OPT_frtti = 752
OPT_fsaw_java_file = 753
OPT_fsched2_use_superblocks = 770
OPT_fsched_critical_path_heuristic = 754
OPT_fsched_dep_count_heuristic = 755
OPT_fsched_group_heuristic = 756
OPT_fsched_interblock = 757
OPT_fsched_last_insn_heuristic = 758
OPT_fsched_pressure = 759
OPT_fsched_rank_heuristic = 760
OPT_fsched_spec = 761
OPT_fsched_spec_insn_heuristic = 762
OPT_fsched_spec_load = 763
OPT_fsched_spec_load_dangerous = 764
OPT_fsched_stalled_insns = 765
OPT_fsched_stalled_insns_ = 768
OPT_fsched_stalled_insns_dep = 766
OPT_fsched_stalled_insns_dep_ = 767
OPT_fsched_verbose_ = 769
OPT_fschedule_insns = 772
OPT_fschedule_insns2 = 773
OPT_fsecond_underscore = 774
OPT_fsection_anchors = 775
OPT_fsel_sched_pipelining = 777
OPT_fsel_sched_pipelining_outer_loops = 778
OPT_fsel_sched_reschedule_pipelined = 779
OPT_fselective_scheduling = 780
OPT_fselective_scheduling2 = 781
OPT_fshort_double = 782
OPT_fshort_enums = 783
OPT_fshort_wchar = 784
OPT_fshow_column = 785
OPT_fsign_zero = 786
OPT_fsignaling_nans = 787
OPT_fsigned_bitfields = 788
OPT_fsigned_char = 789
OPT_fsigned_zeros = 790
OPT_fsingle_precision_constant = 791
OPT_fsource_ = 793
OPT_fsource_filename_ = 792
OPT_fsplit_ivs_in_unroller = 794
OPT_fsplit_stack = 795
OPT_fsplit_wide_types = 796
OPT_fstack_check_ = 799
OPT_fstack_limit = 800
OPT_fstack_limit_register_ = 801
OPT_fstack_limit_symbol_ = 802
OPT_fstack_protector = 803
OPT_fstack_protector_all = 804
OPT_fstack_usage = 805
OPT_fstats = 806
OPT_fstore_check = 807
OPT_fstrict_aliasing = 809
OPT_fstrict_enums = 810
OPT_fstrict_overflow = 811
OPT_fstrict_volatile_bitfields = 813
OPT_fsyntax_only = 814
OPT_ftabstop_ = 815
OPT_ftarget_ = 817
OPT_ftemplate_depth_ = 819
OPT_ftest_coverage = 820
OPT_fthread_jumps = 822
OPT_fthreadsafe_statics = 823
OPT_ftime_report = 824
OPT_ftls_model_ = 825
OPT_ftoplevel_reorder = 826
OPT_ftracer = 827
OPT_ftrapping_math = 828
OPT_ftrapv = 829
OPT_ftree_bit_ccp = 830
OPT_ftree_builtin_call_dce = 831
OPT_ftree_ccp = 832
OPT_ftree_ch = 833
OPT_ftree_copy_prop = 834
OPT_ftree_copyrename = 835
OPT_ftree_cselim = 836
OPT_ftree_dce = 837
OPT_ftree_dominator_opts = 838
OPT_ftree_dse = 839
OPT_ftree_forwprop = 840
OPT_ftree_fre = 841
OPT_ftree_loop_distribute_patterns = 842
OPT_ftree_loop_distribution = 843
OPT_ftree_loop_if_convert = 844
OPT_ftree_loop_if_convert_stores = 845
OPT_ftree_loop_im = 846
OPT_ftree_loop_ivcanon = 847
OPT_ftree_loop_optimize = 849
OPT_ftree_lrs = 850
OPT_ftree_parallelize_loops_ = 851
OPT_ftree_phiprop = 852
OPT_ftree_pre = 853
OPT_ftree_pta = 854
OPT_ftree_reassoc = 855
OPT_ftree_scev_cprop = 857
OPT_ftree_sink = 858
OPT_ftree_slp_vectorize = 859
OPT_ftree_sra = 860
OPT_ftree_switch_conversion = 863
OPT_ftree_ter = 864
OPT_ftree_vect_loop_version = 865
OPT_ftree_vectorize = 866
OPT_ftree_vectorizer_verbose_ = 867
OPT_ftree_vrp = 868
OPT_funderscoring = 869
OPT_funit_at_a_time = 870
OPT_funroll_all_loops = 871
OPT_funroll_loops = 872
OPT_funsafe_loop_optimizations = 873
OPT_funsafe_math_optimizations = 874
OPT_funsigned_bitfields = 875
OPT_funsigned_char = 876
OPT_funswitch_loops = 877
OPT_funwind_tables = 878
OPT_fuse_atomic_builtins = 879
OPT_fuse_boehm_gc = 880
OPT_fuse_cxa_atexit = 881
OPT_fuse_cxa_get_exception_ptr = 882
OPT_fuse_divide_subroutine = 883
OPT_fuse_linker_plugin = 884
OPT_fvar_tracking = 885
OPT_fvar_tracking_assignments = 886
OPT_fvar_tracking_assignments_toggle = 887
OPT_fvar_tracking_uninit = 888
OPT_fvariable_expansion_in_unroller = 889
OPT_fvect_cost_model = 890
OPT_fverbose_asm = 891
OPT_fvisibility_ = 895
OPT_fvisibility_inlines_hidden = 893
OPT_fvisibility_ms_compat = 894
OPT_fvpt = 896
OPT_fweak = 899
OPT_fweb = 900
OPT_fwhole_file = 901
OPT_fwhole_program = 902
OPT_fwide_exec_charset_ = 903
OPT_fworking_directory = 904
OPT_fwpa = 905
OPT_fwrapv = 906
OPT_fzee = 908
OPT_fzero_initialized_in_bss = 909
OPT_fzero_link = 910
OPT_g = 911
OPT_gant = 912
OPT_gcoff = 913
OPT_gdwarf_ = 914
OPT_gen_decls = 915
OPT_ggdb = 916
OPT_gnat = 917
OPT_gnatO = 918
OPT_gno_strict_dwarf = 919
OPT_gstabs = 920
OPT_gstabs_ = 921
OPT_gstrict_dwarf = 922
OPT_gtoggle = 923
OPT_gvms = 924
OPT_gxcoff = 925
OPT_gxcoff_ = 926
OPT_h = 927
OPT_idirafter = 928
OPT_imacros = 929
OPT_imultiarch = 930
OPT_imultilib = 931
OPT_include = 932
OPT_iplugindir_ = 933
OPT_iprefix = 934
OPT_iquote = 935
OPT_isysroot = 936
OPT_isystem = 937
OPT_iwithprefix = 938
OPT_iwithprefixbefore = 939
OPT_k8 = 940
OPT_l = 941
OPT_lang_asm = 942
OPT_m128bit_long_double = 943
OPT_m32 = 944
OPT_m3dnow = 945
OPT_m3dnowa = 946
OPT_m64 = 947
OPT_m80387 = 948
OPT_m8bit_idiv = 949
OPT_m96bit_long_double = 950
OPT_mabi_ = 951
OPT_mabm = 952
OPT_maccumulate_outgoing_args = 953
OPT_maes = 954
OPT_malign_double = 955
OPT_malign_functions_ = 956
OPT_malign_jumps_ = 957
OPT_malign_loops_ = 958
OPT_malign_stringops = 959
OPT_mandroid = 960
OPT_march_ = 961
OPT_masm_ = 962
OPT_mavx = 963
OPT_mavx256_split_unaligned_load = 964
OPT_mavx256_split_unaligned_store = 965
OPT_mbionic = 966
OPT_mbmi = 967
OPT_mbranch_cost_ = 968
OPT_mcld = 969
OPT_mcmodel_ = 970
OPT_mcrc32 = 972
OPT_mcx16 = 973
OPT_mdispatch_scheduler = 974
OPT_mf16c = 975
OPT_mfancy_math_387 = 976
OPT_mfentry = 977
OPT_mfma = 978
OPT_mfma4 = 979
OPT_mforce_drap = 980
OPT_mfp_ret_in_387 = 981
OPT_mfpmath_ = 982
OPT_mfsgsbase = 983
OPT_mglibc = 985
OPT_mhard_float = 986
OPT_mieee_fp = 987
OPT_mincoming_stack_boundary_ = 988
OPT_minline_all_stringops = 989
OPT_minline_stringops_dynamically = 990
OPT_mlarge_data_threshold_ = 992
OPT_mlwp = 993
OPT_mmmx = 994
OPT_mmovbe = 995
OPT_mms_bitfields = 996
OPT_mno_align_stringops = 997
OPT_mno_fancy_math_387 = 998
OPT_mno_push_args = 999
OPT_mno_red_zone = 1000
OPT_mno_sse4 = 1001
OPT_momit_leaf_frame_pointer = 1002
OPT_mpc = 1003
OPT_mpclmul = 1004
OPT_mpopcnt = 1005
OPT_mprefer_avx128 = 1006
OPT_mpreferred_stack_boundary_ = 1007
OPT_mpush_args = 1008
OPT_mrdrnd = 1009
OPT_mrecip = 1010
OPT_mred_zone = 1011
OPT_mregparm_ = 1012
OPT_mrtd = 1013
OPT_msahf = 1014
OPT_msoft_float = 1015
OPT_msse = 1016
OPT_msse2 = 1017
OPT_msse2avx = 1018
OPT_msse3 = 1019
OPT_msse4 = 1020
OPT_msse4_1 = 1021
OPT_msse4_2 = 1022
OPT_msse4a = 1023
OPT_msseregparm = 1025
OPT_mssse3 = 1026
OPT_mstack_arg_probe = 1027
OPT_mstackrealign = 1028
OPT_mstringop_strategy_ = 1029
OPT_mtbm = 1030
OPT_mtls_dialect_ = 1031
OPT_mtls_direct_seg_refs = 1032
OPT_mtune_ = 1033
OPT_muclibc = 1034
OPT_mveclibabi_ = 1035
OPT_mvect8_ret_in_mem = 1036
OPT_mvzeroupper = 1037
OPT_mxop = 1038
OPT_n = 1039
OPT_no_canonical_prefixes = 1040
OPT_no_integrated_cpp = 1041
OPT_nocpp = 1042
OPT_nodefaultlibs = 1043
OPT_nostartfiles = 1044
OPT_nostdinc = 1045
OPT_nostdinc__ = 1046
OPT_nostdlib = 1047
OPT_o = 1048
OPT_p = 1049
OPT_pass_exit_codes = 1050
OPT_pedantic = 1051
OPT_pedantic_errors = 1052
OPT_pg = 1053
OPT_pie = 1054
OPT_pipe = 1055
OPT_posix = 1056
OPT_print_file_name_ = 1057
OPT_print_libgcc_file_name = 1058
OPT_print_multi_directory = 1059
OPT_print_multi_lib = 1060
OPT_print_multi_os_directory = 1061
OPT_print_multiarch = 1062
OPT_print_objc_runtime_info = 1063
OPT_print_prog_name_ = 1064
OPT_print_search_dirs = 1065
OPT_print_sysroot = 1066
OPT_print_sysroot_headers_suffix = 1067
OPT_profile = 1068
OPT_pthread = 1069
OPT_quiet = 1070
OPT_r = 1071
OPT_rdynamic = 1072
OPT_remap = 1073
OPT_s = 1074
OPT_s_bc_abi = 1075
OPT_save_temps = 1076
OPT_save_temps_ = 1077
OPT_shared = 1078
OPT_shared_libgcc = 1079
OPT_specs_ = 1081
OPT_static = 1082
OPT_static_libgcc = 1083
OPT_static_libgcj = 1084
OPT_static_libgfortran = 1085
OPT_static_libgo = 1086
OPT_static_libstdc__ = 1087
OPT_std_c1x = 1091
OPT_std_c90 = 1093
OPT_std_c99 = 1094
OPT_std_c__0x = 1089
OPT_std_c__98 = 1090
OPT_std_f2003 = 1096
OPT_std_f2008 = 1097
OPT_std_f95 = 1098
OPT_std_gnu = 1099
OPT_std_gnu1x = 1102
OPT_std_gnu90 = 1104
OPT_std_gnu99 = 1105
OPT_std_gnu__0x = 1100
OPT_std_gnu__98 = 1101
OPT_std_iso9899_199409 = 1108
OPT_std_legacy = 1111
OPT_symbolic = 1112
OPT_t = 1113
OPT_time = 1114
OPT_time_ = 1115
OPT_tno_android_cc = 1116
OPT_tno_android_ld = 1117
OPT_traditional = 1118
OPT_traditional_cpp = 1119
OPT_trigraphs = 1120
OPT_u = 1121
OPT_undef = 1122
OPT_v = 1123
OPT_version = 1124
OPT_w = 1125
OPT_wrapper = 1126
OPT_x = 1127
OPT_z = 1128
ORDERED_EXPR = 103
OVERLOAD = 229
PAREN_EXPR = 111
PARM_DECL = 35
PLACEHOLDER_EXPR = 61
PLUGIN_ALL_IPA_PASSES_END = 17
PLUGIN_ALL_IPA_PASSES_START = 16
PLUGIN_ALL_PASSES_END = 15
PLUGIN_ALL_PASSES_START = 14
PLUGIN_ATTRIBUTES = 11
PLUGIN_EARLY_GIMPLE_PASSES_END = 21
PLUGIN_EARLY_GIMPLE_PASSES_START = 20
PLUGIN_EVENT_FIRST_DYNAMIC = 23
PLUGIN_FINISH = 4
PLUGIN_FINISH_TYPE = 1
PLUGIN_FINISH_UNIT = 2
PLUGIN_GGC_END = 8
PLUGIN_GGC_MARKING = 7
PLUGIN_GGC_START = 6
PLUGIN_INFO = 5
PLUGIN_NEW_PASS = 22
PLUGIN_OVERRIDE_GATE = 18
PLUGIN_PASS_EXECUTION = 19
PLUGIN_PASS_MANAGER_SETUP = 0
PLUGIN_PRAGMAS = 13
PLUGIN_PRE_GENERICIZE = 3
PLUGIN_REGISTER_GGC_CACHES = 10
PLUGIN_REGISTER_GGC_ROOTS = 9
PLUGIN_START_UNIT = 12
PLUS_EXPR = 62
PLUS_NOMOD_EXPR = 197
POINTER_PLUS_EXPR = 65
POINTER_TYPE = 10
POLL_ERR = 4
POLL_HUP = 6
POLL_IN = 1
POLL_MSG = 3
POLL_OUT = 2
POLL_PRI = 5
POLYNOMIAL_CHREC = 145
POSTDECREMENT_EXPR = 126
POSTINCREMENT_EXPR = 127
PREDECREMENT_EXPR = 124
PREDICT_EXPR = 188
PRED_BUILTIN_EXPECT = 6
PRED_CALL = 21
PRED_COLD_FUNCTION = 10
PRED_COMBINED = 0
PRED_CONST_RETURN = 24
PRED_CONTINUE = 8
PRED_DS_THEORY = 1
PRED_FIRST_MATCH = 2
PRED_FPOPCODE = 17
PRED_GOTO = 23
PRED_LOOP_BRANCH = 11
PRED_LOOP_EXIT = 12
PRED_LOOP_ITERATIONS = 5
PRED_LOOP_ITERATIONS_GUESSED = 7
PRED_MUDFLAP = 27
PRED_NEGATIVE_RETURN = 25
PRED_NORETURN = 9
PRED_NO_PREDICTION = 3
PRED_NULL_RETURN = 26
PRED_OPCODE_NONEQUAL = 16
PRED_OPCODE_POSITIVE = 15
PRED_POINTER = 13
PRED_TREE_EARLY_RETURN = 22
PRED_TREE_FPOPCODE = 20
PRED_TREE_OPCODE_NONEQUAL = 19
PRED_TREE_OPCODE_POSITIVE = 18
PRED_TREE_POINTER = 14
PRED_UNCONDITIONAL = 4
PREINCREMENT_EXPR = 125
PRIO_PGRP = 1
PRIO_PROCESS = 0
PRIO_USER = 2
PROCESSOR_AMDFAM10 = 16
PROCESSOR_ATHLON = 6
PROCESSOR_ATOM = 19
PROCESSOR_BDVER1 = 17
PROCESSOR_BTVER1 = 18
PROCESSOR_CORE2_32 = 10
PROCESSOR_CORE2_64 = 11
PROCESSOR_COREI7_32 = 12
PROCESSOR_COREI7_64 = 13
PROCESSOR_GENERIC32 = 14
PROCESSOR_GENERIC64 = 15
PROCESSOR_GEODE = 4
PROCESSOR_I386 = 0
PROCESSOR_I486 = 1
PROCESSOR_K6 = 5
PROCESSOR_K8 = 8
PROCESSOR_NOCONA = 9
PROCESSOR_PENTIUM = 2
PROCESSOR_PENTIUM4 = 7
PROCESSOR_PENTIUMPRO = 3
PROCESSOR_max = 20
PROFILE_ABSENT = 0
PROFILE_GUESSED = 1
PROFILE_READ = 2
PROPERTY_DECL = 286
PROPERTY_REF = 289
PROTOCOL_INTERFACE_TYPE = 282
PSEUDO_DTOR_EXPR = 230
PTRMEM_CST = 204
P_ALL = 0
P_PGID = 2
P_PID = 1
QImode = 14
QQmode = 20
QUAL_UNION_TYPE = 19
Q_REGS = 9
RANGE_EXPR = 110
RANGE_FOR_STMT = 249
RDIV_EXPR = 74
REALIGN_LOAD_EXPR = 150
REALPART_EXPR = 44
REAL_CST = 25
REAL_TYPE = 9
RECORD_TYPE = 17
REDUC_MAX_EXPR = 164
REDUC_MIN_EXPR = 165
REDUC_PLUS_EXPR = 166
REFERENCE_TYPE = 11
REG_CS = 15
REG_DS = 3
REG_EAX = 11
REG_EBP = 6
REG_EBX = 8
REG_ECX = 10
REG_EDI = 4
REG_EDX = 9
REG_EFL = 16
REG_EIP = 14
REG_ERR = 13
REG_ES = 2
REG_ESI = 5
REG_ESP = 7
REG_FS = 1
REG_GS = 0
REG_SS = 18
REG_TRAPNO = 12
REG_UESP = 17
REINTERPRET_CAST_EXPR = 233
REPORT_ALIGNMENT = 4
REPORT_BAD_FORM_LOOPS = 6
REPORT_COST = 3
REPORT_DETAILS = 9
REPORT_DR_DETAILS = 5
REPORT_NONE = 0
REPORT_OUTER_LOOPS = 7
REPORT_SLP = 8
REPORT_UNVECTORIZED_LOCATIONS = 2
REPORT_VECTORIZED_LOCATIONS = 1
RESULT_DECL = 37
RETURN_EXPR = 134
RID_ACCUM = 73
RID_ADDR_SPACE_0 = 154
RID_ADDR_SPACE_1 = 155
RID_ADDR_SPACE_10 = 164
RID_ADDR_SPACE_11 = 165
RID_ADDR_SPACE_12 = 166
RID_ADDR_SPACE_13 = 167
RID_ADDR_SPACE_14 = 168
RID_ADDR_SPACE_15 = 169
RID_ADDR_SPACE_2 = 156
RID_ADDR_SPACE_3 = 157
RID_ADDR_SPACE_4 = 158
RID_ADDR_SPACE_5 = 159
RID_ADDR_SPACE_6 = 160
RID_ADDR_SPACE_7 = 161
RID_ADDR_SPACE_8 = 162
RID_ADDR_SPACE_9 = 163
RID_ALIGNOF = 60
RID_ASM = 58
RID_ASSIGN = 31
RID_ATTRIBUTE = 61
RID_AT_ALIAS = 134
RID_AT_CATCH = 144
RID_AT_CLASS = 133
RID_AT_DEFS = 135
RID_AT_DYNAMIC = 151
RID_AT_ENCODE = 131
RID_AT_END = 132
RID_AT_FINALLY = 145
RID_AT_IMPLEMENTATION = 153
RID_AT_INTERFACE = 152
RID_AT_OPTIONAL = 147
RID_AT_PACKAGE = 139
RID_AT_PRIVATE = 136
RID_AT_PROPERTY = 149
RID_AT_PROTECTED = 137
RID_AT_PROTOCOL = 140
RID_AT_PUBLIC = 138
RID_AT_REQUIRED = 148
RID_AT_SELECTOR = 141
RID_AT_SYNCHRONIZED = 146
RID_AT_SYNTHESIZE = 150
RID_AT_THROW = 142
RID_AT_TRY = 143
RID_AUTO = 11
RID_BOOL = 78
RID_BREAK = 53
RID_BYCOPY = 24
RID_BYREF = 25
RID_C99_FUNCTION_NAME = 77
RID_CASE = 51
RID_CATCH = 86
RID_CHAR = 37
RID_CHAR16 = 100
RID_CHAR32 = 101
RID_CHOOSE_EXPR = 67
RID_CLASS = 80
RID_COMPLEX = 13
RID_CONST = 3
RID_CONSTCAST = 102
RID_CONSTEXPR = 126
RID_CONTINUE = 54
RID_COPY = 33
RID_CXX_COMPAT_WARN = 74
RID_DECLTYPE = 127
RID_DEFAULT = 52
RID_DELETE = 87
RID_DFLOAT128 = 71
RID_DFLOAT32 = 69
RID_DFLOAT64 = 70
RID_DO = 48
RID_DOUBLE = 39
RID_DYNCAST = 103
RID_ELSE = 46
RID_ENUM = 42
RID_EXPLICIT = 18
RID_EXPORT = 19
RID_EXTENSION = 63
RID_EXTERN = 4
RID_FALSE = 88
RID_FIRST_ADDR_SPACE = 154
RID_FIRST_AT = 131
RID_FIRST_CXX0X = 126
RID_FIRST_MODIFIER = 0
RID_FIRST_PATTR = 27
RID_FIRST_PQ = 21
RID_FLOAT = 38
RID_FOR = 49
RID_FRACT = 72
RID_FRIEND = 16
RID_FUNCTION_NAME = 75
RID_GETTER = 27
RID_GOTO = 56
RID_HAS_NOTHROW_ASSIGN = 106
RID_HAS_NOTHROW_CONSTRUCTOR = 107
RID_HAS_NOTHROW_COPY = 108
RID_HAS_TRIVIAL_ASSIGN = 109
RID_HAS_TRIVIAL_CONSTRUCTOR = 110
RID_HAS_TRIVIAL_COPY = 111
RID_HAS_TRIVIAL_DESTRUCTOR = 112
RID_HAS_VIRTUAL_DESTRUCTOR = 113
RID_IF = 45
RID_IMAGINARY = 35
RID_IMAGPART = 64
RID_IN = 21
RID_INLINE = 8
RID_INOUT = 23
RID_INT = 36
RID_INT128 = 41
RID_IS_ABSTRACT = 114
RID_IS_BASE_OF = 115
RID_IS_CLASS = 117
RID_IS_CONVERTIBLE_TO = 116
RID_IS_EMPTY = 118
RID_IS_ENUM = 119
RID_IS_LITERAL_TYPE = 125
RID_IS_POD = 120
RID_IS_POLYMORPHIC = 121
RID_IS_STD_LAYOUT = 122
RID_IS_TRIVIAL = 123
RID_IS_UNION = 124
RID_LABEL = 66
RID_LAST_ADDR_SPACE = 169
RID_LAST_AT = 153
RID_LAST_CXX0X = 130
RID_LAST_MODIFIER = 26
RID_LAST_PATTR = 34
RID_LAST_PQ = 26
RID_LONG = 2
RID_MAX = 170
RID_MUTABLE = 20
RID_NAMESPACE = 89
RID_NEW = 90
RID_NOEXCEPT = 128
RID_NONATOMIC = 34
RID_NULL = 85
RID_NULLPTR = 129
RID_OFFSETOF = 91
RID_ONEWAY = 26
RID_OPERATOR = 92
RID_OUT = 22
RID_PRETTY_FUNCTION_NAME = 76
RID_PRIVATE = 82
RID_PROTECTED = 83
RID_PUBLIC = 81
RID_READONLY = 29
RID_READWRITE = 30
RID_REALPART = 65
RID_REGISTER = 5
RID_REINTCAST = 104
RID_RESTRICT = 12
RID_RETAIN = 32
RID_RETURN = 55
RID_SAT = 15
RID_SETTER = 28
RID_SHORT = 7
RID_SIGNED = 10
RID_SIZEOF = 57
RID_STATCAST = 105
RID_STATIC = 0
RID_STATIC_ASSERT = 130
RID_STRUCT = 43
RID_SWITCH = 50
RID_TEMPLATE = 84
RID_THIS = 93
RID_THREAD = 14
RID_THROW = 94
RID_TRUE = 95
RID_TRY = 96
RID_TYPEDEF = 6
RID_TYPEID = 98
RID_TYPENAME = 97
RID_TYPEOF = 59
RID_TYPES_COMPATIBLE_P = 68
RID_UNION = 44
RID_UNSIGNED = 1
RID_USING = 99
RID_VA_ARG = 62
RID_VIRTUAL = 17
RID_VOID = 40
RID_VOLATILE = 9
RID_WCHAR = 79
RID_WHILE = 47
RLIMIT_AS = 9
RLIMIT_CORE = 4
RLIMIT_CPU = 0
RLIMIT_DATA = 2
RLIMIT_FSIZE = 1
RLIMIT_NOFILE = 7
RLIMIT_STACK = 3
ROUND_DIV_EXPR = 69
ROUND_MOD_EXPR = 73
RO_ARRAY_INDEXING = 1
RO_ARROW = 3
RO_IMPLICIT_CONVERSION = 4
RO_NULL = 0
RO_UNARY_STAR = 2
RROTATE_EXPR = 85
RSHIFT_EXPR = 83
RTLD_DI_CONFIGADDR = 3
RTLD_DI_LINKMAP = 2
RTLD_DI_LMID = 1
RTLD_DI_MAX = 10
RTLD_DI_ORIGIN = 6
RTLD_DI_PROFILENAME = 7
RTLD_DI_PROFILEOUT = 8
RTLD_DI_SERINFO = 4
RTLD_DI_SERINFOSIZE = 5
RTLD_DI_TLS_DATA = 10
RTLD_DI_TLS_MODID = 9
RTLD_DL_LINKMAP = 2
RTLD_DL_SYMENT = 1
RUSAGE_CHILDREN = -1
RUSAGE_SELF = 0
RUSAGE_THREAD = 1
SAVE_EXPR = 119
SAmode = 31
SBITSIZETYPE = 3
SCEV_KNOWN = 143
SCEV_NOT_KNOWN = 144
SCOPE_REF = 209
SCmode = 51
SDB_DEBUG = 2
SDmode = 42
SEGV_ACCERR = 2
SEGV_MAPERR = 1
SFmode = 38
SIGEV_NONE = 1
SIGEV_SIGNAL = 0
SIGEV_THREAD = 2
SIGEV_THREAD_ID = 4
SIREG = 5
SIZEOF_EXPR = 258
SIZETYPE = 0
SI_ASYNCIO = -4
SI_ASYNCNL = -60
SI_KERNEL = 128
SI_MESGQ = -3
SI_QUEUE = -1
SI_SIGIO = -5
SI_TIMER = -2
SI_TKILL = -6
SI_USER = 0
SImode = 16
SLOT_CW_CEIL = 5
SLOT_CW_FLOOR = 4
SLOT_CW_MASK_PM = 6
SLOT_CW_STORED = 2
SLOT_CW_TRUNC = 3
SLOT_TEMP = 1
SLOT_VIRTUAL = 0
SQmode = 22
SSA_NAME = 140
SSE_FIRST_REG = 17
SSE_REGS = 18
SSIZETYPE = 1
SS_DISABLE = 2
SS_ONSTACK = 1
STATEMENT_LIST = 146
STATIC_ASSERT = 264
STATIC_BUILTIN_STACK_CHECK = 2
STATIC_CAST_EXPR = 235
STMT_EXPR = 262
STMT_STMT = 200
STRING = c_char_p
STRING_CST = 29
SWITCH_EXPR = 137
SWITCH_STMT = 254
SYSV_ABI = 0
TAG_DEFN = 256
TAKEN = 1
TARGET_CPU_DEFAULT_amdfam10 = 22
TARGET_CPU_DEFAULT_athlon = 19
TARGET_CPU_DEFAULT_athlon_sse = 20
TARGET_CPU_DEFAULT_atom = 14
TARGET_CPU_DEFAULT_bdver1 = 23
TARGET_CPU_DEFAULT_btver1 = 24
TARGET_CPU_DEFAULT_core2 = 12
TARGET_CPU_DEFAULT_corei7 = 13
TARGET_CPU_DEFAULT_generic = 0
TARGET_CPU_DEFAULT_geode = 15
TARGET_CPU_DEFAULT_i386 = 1
TARGET_CPU_DEFAULT_i486 = 2
TARGET_CPU_DEFAULT_k6 = 16
TARGET_CPU_DEFAULT_k6_2 = 17
TARGET_CPU_DEFAULT_k6_3 = 18
TARGET_CPU_DEFAULT_k8 = 21
TARGET_CPU_DEFAULT_max = 25
TARGET_CPU_DEFAULT_nocona = 11
TARGET_CPU_DEFAULT_pentium = 3
TARGET_CPU_DEFAULT_pentium2 = 6
TARGET_CPU_DEFAULT_pentium3 = 7
TARGET_CPU_DEFAULT_pentium4 = 8
TARGET_CPU_DEFAULT_pentium_m = 9
TARGET_CPU_DEFAULT_pentium_mmx = 4
TARGET_CPU_DEFAULT_pentiumpro = 5
TARGET_CPU_DEFAULT_prescott = 10
TARGET_EXPR = 54
TARGET_MEM_REF = 151
TARGET_OPTION_NODE = 190
TAmode = 33
TCmode = 54
TDmode = 44
TEMPLATE_DECL = 217
TEMPLATE_ID_EXPR = 228
TEMPLATE_INFO = 273
TEMPLATE_PARM_INDEX = 218
TEMPLATE_TEMPLATE_PARM = 219
TEMPLATE_TYPE_PARM = 220
TFmode = 41
THROW_EXPR = 214
TI_ACCUM_TYPE = 83
TI_BITSIZE_ONE = 21
TI_BITSIZE_UNIT = 22
TI_BITSIZE_ZERO = 20
TI_BOOLEAN_FALSE = 26
TI_BOOLEAN_TRUE = 27
TI_BOOLEAN_TYPE = 48
TI_COMPLEX_DOUBLE_TYPE = 30
TI_COMPLEX_FLOAT_TYPE = 29
TI_COMPLEX_INTEGER_TYPE = 28
TI_COMPLEX_LONG_DOUBLE_TYPE = 31
TI_CONST_PTR_TYPE = 41
TI_CURRENT_OPTIMIZE_PRAGMA = 131
TI_CURRENT_TARGET_PRAGMA = 130
TI_DA_TYPE = 112
TI_DFLOAT128_PTR_TYPE = 55
TI_DFLOAT128_TYPE = 52
TI_DFLOAT32_PTR_TYPE = 53
TI_DFLOAT32_TYPE = 50
TI_DFLOAT64_PTR_TYPE = 54
TI_DFLOAT64_TYPE = 51
TI_DOUBLE_PTR_TYPE = 36
TI_DOUBLE_TYPE = 33
TI_DQ_TYPE = 93
TI_ERROR_MARK = 0
TI_FILEPTR_TYPE = 49
TI_FLOAT_PTR_TYPE = 35
TI_FLOAT_TYPE = 32
TI_FRACT_TYPE = 67
TI_HA_TYPE = 110
TI_HQ_TYPE = 91
TI_INTDI_TYPE = 4
TI_INTEGER_MINUS_ONE = 16
TI_INTEGER_ONE = 14
TI_INTEGER_PTR_TYPE = 38
TI_INTEGER_THREE = 15
TI_INTEGER_ZERO = 13
TI_INTHI_TYPE = 2
TI_INTQI_TYPE = 1
TI_INTSI_TYPE = 3
TI_INTTI_TYPE = 5
TI_LACCUM_TYPE = 84
TI_LFRACT_TYPE = 68
TI_LLACCUM_TYPE = 85
TI_LLFRACT_TYPE = 69
TI_LONG_DOUBLE_PTR_TYPE = 37
TI_LONG_DOUBLE_TYPE = 34
TI_MAIN_IDENTIFIER = 57
TI_MAX = 132
TI_NULL_POINTER = 17
TI_OPTIMIZATION_CURRENT = 127
TI_OPTIMIZATION_DEFAULT = 126
TI_PID_TYPE = 43
TI_PRIVATE = 25
TI_PROTECTED = 24
TI_PTRDIFF_TYPE = 44
TI_PTR_TYPE = 40
TI_PUBLIC = 23
TI_QQ_TYPE = 90
TI_SACCUM_TYPE = 82
TI_SAT_ACCUM_TYPE = 75
TI_SAT_DA_TYPE = 120
TI_SAT_DQ_TYPE = 103
TI_SAT_FRACT_TYPE = 59
TI_SAT_HA_TYPE = 118
TI_SAT_HQ_TYPE = 101
TI_SAT_LACCUM_TYPE = 76
TI_SAT_LFRACT_TYPE = 60
TI_SAT_LLACCUM_TYPE = 77
TI_SAT_LLFRACT_TYPE = 61
TI_SAT_QQ_TYPE = 100
TI_SAT_SACCUM_TYPE = 74
TI_SAT_SA_TYPE = 119
TI_SAT_SFRACT_TYPE = 58
TI_SAT_SQ_TYPE = 102
TI_SAT_TA_TYPE = 121
TI_SAT_TQ_TYPE = 104
TI_SAT_UACCUM_TYPE = 79
TI_SAT_UDA_TYPE = 124
TI_SAT_UDQ_TYPE = 108
TI_SAT_UFRACT_TYPE = 63
TI_SAT_UHA_TYPE = 122
TI_SAT_UHQ_TYPE = 106
TI_SAT_ULACCUM_TYPE = 80
TI_SAT_ULFRACT_TYPE = 64
TI_SAT_ULLACCUM_TYPE = 81
TI_SAT_ULLFRACT_TYPE = 65
TI_SAT_UQQ_TYPE = 105
TI_SAT_USACCUM_TYPE = 78
TI_SAT_USA_TYPE = 123
TI_SAT_USFRACT_TYPE = 62
TI_SAT_USQ_TYPE = 107
TI_SAT_UTA_TYPE = 125
TI_SAT_UTQ_TYPE = 109
TI_SA_TYPE = 111
TI_SFRACT_TYPE = 66
TI_SIZE_ONE = 19
TI_SIZE_TYPE = 42
TI_SIZE_ZERO = 18
TI_SQ_TYPE = 92
TI_TARGET_OPTION_CURRENT = 129
TI_TARGET_OPTION_DEFAULT = 128
TI_TA_TYPE = 113
TI_TQ_TYPE = 94
TI_UACCUM_TYPE = 87
TI_UDA_TYPE = 116
TI_UDQ_TYPE = 98
TI_UFRACT_TYPE = 71
TI_UHA_TYPE = 114
TI_UHQ_TYPE = 96
TI_UINT32_TYPE = 11
TI_UINT64_TYPE = 12
TI_UINTDI_TYPE = 9
TI_UINTHI_TYPE = 7
TI_UINTQI_TYPE = 6
TI_UINTSI_TYPE = 8
TI_UINTTI_TYPE = 10
TI_ULACCUM_TYPE = 88
TI_ULFRACT_TYPE = 72
TI_ULLACCUM_TYPE = 89
TI_ULLFRACT_TYPE = 73
TI_UQQ_TYPE = 95
TI_USACCUM_TYPE = 86
TI_USA_TYPE = 115
TI_USFRACT_TYPE = 70
TI_USQ_TYPE = 97
TI_UTA_TYPE = 117
TI_UTQ_TYPE = 99
TI_VA_LIST_FPR_COUNTER_FIELD = 47
TI_VA_LIST_GPR_COUNTER_FIELD = 46
TI_VA_LIST_TYPE = 45
TI_VOID_LIST_NODE = 56
TI_VOID_TYPE = 39
TImode = 18
TLS_DIALECT_GNU = 0
TLS_DIALECT_GNU2 = 1
TLS_DIALECT_SUN = 2
TLS_MODEL_EMULATED = 1
TLS_MODEL_GLOBAL_DYNAMIC = 2
TLS_MODEL_INITIAL_EXEC = 4
TLS_MODEL_LOCAL_DYNAMIC = 3
TLS_MODEL_LOCAL_EXEC = 5
TLS_MODEL_NONE = 0
TLS_MODEL_REAL = 2
TQmode = 24
TRAIT_EXPR = 270
TRANSLATION_UNIT_DECL = 41
TRAP_BRKPT = 1
TRAP_TRACE = 2
TREE_BINFO = 148
TREE_LIST = 2
TREE_VEC = 3
TRUNC_DIV_EXPR = 66
TRUNC_MOD_EXPR = 70
TRUTH_ANDIF_EXPR = 90
TRUTH_AND_EXPR = 92
TRUTH_NOT_EXPR = 95
TRUTH_ORIF_EXPR = 91
TRUTH_OR_EXPR = 93
TRUTH_XOR_EXPR = 94
TRY_BLOCK = 242
TRY_CATCH_EXPR = 129
TRY_FINALLY_EXPR = 130
TS_BASE = 0
TS_BINFO = 29
TS_BLOCK = 28
TS_COMMON = 1
TS_COMPLEX = 7
TS_CONSTRUCTOR = 31
TS_CONST_DECL = 19
TS_CP_ARGUMENT_PACK_SELECT = 10
TS_CP_BASELINK = 6
TS_CP_BINDING = 4
TS_CP_DEFAULT_ARG = 8
TS_CP_GENERIC = 0
TS_CP_IDENTIFIER = 1
TS_CP_LAMBDA_EXPR = 12
TS_CP_OVERLOAD = 5
TS_CP_PTRMEM = 3
TS_CP_STATIC_ASSERT = 9
TS_CP_TEMPLATE_INFO = 13
TS_CP_TPI = 2
TS_CP_TRAIT_EXPR = 11
TS_CP_WRAPPER = 7
TS_DECL_COMMON = 10
TS_DECL_MINIMAL = 9
TS_DECL_NON_COMMON = 12
TS_DECL_WITH_VIS = 13
TS_DECL_WRTL = 11
TS_EXP = 26
TS_FIELD_DECL = 14
TS_FIXED_CST = 4
TS_FUNCTION_DECL = 21
TS_IDENTIFIER = 8
TS_INT_CST = 2
TS_LABEL_DECL = 17
TS_LIST = 24
TS_OMP_CLAUSE = 32
TS_OPTIMIZATION = 33
TS_PARM_DECL = 16
TS_REAL_CST = 3
TS_RESULT_DECL = 18
TS_SSA_NAME = 27
TS_STATEMENT_LIST = 30
TS_STRING = 6
TS_TARGET_OPTION = 34
TS_TRANSLATION_UNIT_DECL = 22
TS_TYPE = 23
TS_TYPE_DECL = 20
TS_VAR_DECL = 15
TS_VEC = 25
TS_VECTOR = 5
TYPEID_EXPR = 238
TYPENAME_FLAG = 2
TYPENAME_TYPE = 221
TYPEOF_TYPE = 222
TYPE_ARGUMENT_PACK = 265
TYPE_DECL = 36
TYPE_EXPR = 211
TYPE_KIND_LAST = 4
TYPE_PACK_EXPANSION = 267
UDAmode = 36
UDQmode = 28
UHAmode = 34
UHQmode = 26
UI_DWARF2 = 2
UI_NONE = 0
UI_SJLJ = 1
UI_TARGET = 3
UNARY_PLUS_EXPR = 263
UNBOUND_CLASS_TEMPLATE = 224
UNCONSTRAINED_ARRAY_REF = 195
UNCONSTRAINED_ARRAY_TYPE = 194
UNEQ_EXPR = 108
UNGE_EXPR = 107
UNGT_EXPR = 106
UNION_TYPE = 18
UNLE_EXPR = 105
UNLT_EXPR = 104
UNORDERED_EXPR = 102
UNSPECV_ALIGN = 8
UNSPECV_BLOCKAGE = 0
UNSPECV_CLD = 15
UNSPECV_CLFLUSH = 7
UNSPECV_CMPXCHG = 11
UNSPECV_EMMS = 3
UNSPECV_FEMMS = 6
UNSPECV_LDMXCSR = 4
UNSPECV_LLWP_INTRINSIC = 22
UNSPECV_LOCK = 13
UNSPECV_LWPINS_INTRINSIC = 25
UNSPECV_LWPVAL_INTRINSIC = 24
UNSPECV_MONITOR = 9
UNSPECV_MWAIT = 10
UNSPECV_NOPS = 16
UNSPECV_PROBE_STACK_RANGE = 2
UNSPECV_PROLOGUE_USE = 14
UNSPECV_RDFSBASE = 26
UNSPECV_RDGSBASE = 27
UNSPECV_RDPMC = 21
UNSPECV_RDTSC = 19
UNSPECV_RDTSCP = 20
UNSPECV_SLWP_INTRINSIC = 23
UNSPECV_SPLIT_STACK_RETURN = 30
UNSPECV_STACK_PROBE = 1
UNSPECV_STMXCSR = 5
UNSPECV_VZEROALL = 17
UNSPECV_VZEROUPPER = 18
UNSPECV_WRFSBASE = 28
UNSPECV_WRGSBASE = 29
UNSPECV_XCHG = 12
UNSPEC_ADD_CARRY = 30
UNSPEC_AESDEC = 115
UNSPEC_AESDECLAST = 116
UNSPEC_AESENC = 113
UNSPEC_AESENCLAST = 114
UNSPEC_AESIMC = 117
UNSPEC_AESKEYGENASSIST = 118
UNSPEC_BEXTR = 130
UNSPEC_BLENDV = 97
UNSPEC_C2_FLAG = 84
UNSPEC_CALL_NEEDS_VZEROUPPER = 36
UNSPEC_CAST = 126
UNSPEC_COPYSIGN = 55
UNSPEC_COS = 59
UNSPEC_CRC32 = 105
UNSPEC_DEF_CFA = 15
UNSPEC_DIV_ALREADY_SPLIT = 35
UNSPEC_DP = 99
UNSPEC_DTPOFF = 6
UNSPEC_EXTRQ = 94
UNSPEC_EXTRQI = 93
UNSPEC_F2XM1 = 65
UNSPEC_FIST = 64
UNSPEC_FIST_CEIL = 73
UNSPEC_FIST_FLOOR = 72
UNSPEC_FIX_NOTRUNC = 37
UNSPEC_FLDCW = 31
UNSPEC_FMADDSUB = 108
UNSPEC_FNSTSW = 26
UNSPEC_FPATAN = 60
UNSPEC_FPREM1_F = 82
UNSPEC_FPREM1_U = 83
UNSPEC_FPREM_F = 80
UNSPEC_FPREM_U = 81
UNSPEC_FRCZ = 112
UNSPEC_FRNDINT = 63
UNSPEC_FRNDINT_CEIL = 69
UNSPEC_FRNDINT_FLOOR = 68
UNSPEC_FRNDINT_MASK_PM = 71
UNSPEC_FRNDINT_TRUNC = 70
UNSPEC_FSCALE_EXP = 79
UNSPEC_FSCALE_FRACT = 78
UNSPEC_FSTCW = 29
UNSPEC_FXAM = 67
UNSPEC_FXAM_MEM = 85
UNSPEC_FYL2X = 61
UNSPEC_FYL2XP1 = 62
UNSPEC_GOT = 0
UNSPEC_GOTNTPOFF = 7
UNSPEC_GOTOFF = 1
UNSPEC_GOTPCREL = 2
UNSPEC_GOTTPOFF = 3
UNSPEC_IEEE_MAX = 57
UNSPEC_IEEE_MIN = 56
UNSPEC_INDNTPOFF = 8
UNSPEC_INSERTPS = 98
UNSPEC_INSERTQ = 96
UNSPEC_INSERTQI = 95
UNSPEC_LDDQU = 53
UNSPEC_LD_MPIC = 33
UNSPEC_LFENCE = 51
UNSPEC_MACHOPIC_OFFSET = 10
UNSPEC_MASKLOAD = 124
UNSPEC_MASKMOV = 38
UNSPEC_MASKSTORE = 125
UNSPEC_MEMORY_BLOCKAGE = 18
UNSPEC_MFENCE = 50
UNSPEC_MOVMSK = 39
UNSPEC_MOVNT = 40
UNSPEC_MOVNTDQA = 100
UNSPEC_MOVU = 41
UNSPEC_MPSADBW = 101
UNSPEC_MS_TO_SYSV_CALL = 54
UNSPEC_NTPOFF = 5
UNSPEC_PALIGNR = 92
UNSPEC_PARITY = 28
UNSPEC_PCLMUL = 119
UNSPEC_PCMP = 120
UNSPEC_PCMPESTR = 106
UNSPEC_PCMPISTR = 107
UNSPEC_PCREL = 11
UNSPEC_PFRCP = 45
UNSPEC_PFRCPIT1 = 46
UNSPEC_PFRCPIT2 = 47
UNSPEC_PFRSQIT1 = 49
UNSPEC_PFRSQRT = 48
UNSPEC_PHMINPOSUW = 102
UNSPEC_PLTOFF = 9
UNSPEC_PSADBW = 52
UNSPEC_PSHUFB = 90
UNSPEC_PSIGN = 91
UNSPEC_PTEST = 103
UNSPEC_RCP = 42
UNSPEC_RDRAND = 131
UNSPEC_REG_SAVE = 14
UNSPEC_REP = 32
UNSPEC_ROUND = 104
UNSPEC_RSQRT = 43
UNSPEC_SAHF = 27
UNSPEC_SCAS = 25
UNSPEC_SET_GOT = 13
UNSPEC_SET_GOT_OFFSET = 17
UNSPEC_SET_RIP = 16
UNSPEC_SFENCE = 44
UNSPEC_SIN = 58
UNSPEC_SINCOS_COS = 74
UNSPEC_SINCOS_SIN = 75
UNSPEC_SP_SET = 86
UNSPEC_SP_TEST = 87
UNSPEC_SP_TLS_SET = 88
UNSPEC_SP_TLS_TEST = 89
UNSPEC_STACK_ALLOC = 12
UNSPEC_STACK_CHECK = 19
UNSPEC_TAN = 66
UNSPEC_TLSDESC = 23
UNSPEC_TLS_GD = 21
UNSPEC_TLS_IE_SUN = 24
UNSPEC_TLS_LD_BASE = 22
UNSPEC_TP = 20
UNSPEC_TPOFF = 4
UNSPEC_TRUNC_NOOP = 34
UNSPEC_VCVTPH2PS = 128
UNSPEC_VCVTPS2PH = 129
UNSPEC_VPERMIL = 121
UNSPEC_VPERMIL2 = 122
UNSPEC_VPERMIL2F128 = 123
UNSPEC_VTESTP = 127
UNSPEC_XOP_PERMUTE = 111
UNSPEC_XOP_TRUEFALSE = 110
UNSPEC_XOP_UNSIGNED_CMP = 109
UNSPEC_XTRACT_EXP = 77
UNSPEC_XTRACT_FRACT = 76
UQQmode = 25
URSHIFT_EXPR = 274
USAmode = 35
USING_DECL = 225
USING_STMT = 226
USQmode = 27
UTAmode = 37
UTQmode = 29
V16HImode = 69
V16QImode = 63
V16SFmode = 84
V16SImode = 75
V1DImode = 62
V1SImode = 58
V1TImode = 67
V2DFmode = 80
V2DImode = 66
V2HImode = 57
V2QImode = 55
V2SFmode = 78
V2SImode = 61
V2TFmode = 83
V2TImode = 72
V32HImode = 74
V32QImode = 68
V4DFmode = 82
V4DImode = 71
V4HImode = 60
V4QImode = 56
V4SFmode = 79
V4SImode = 65
V4TFmode = 86
V4TImode = 77
V64QImode = 73
V8DFmode = 85
V8DImode = 76
V8HImode = 64
V8QImode = 59
V8SFmode = 81
V8SImode = 70
VAR_DECL = 33
VA_ARG_EXPR = 128
VECTOR_CST = 28
VECTOR_TYPE = 15
VEC_COND_EXPR = 56
VEC_DELETE_EXPR = 208
VEC_EXTRACT_EVEN_EXPR = 184
VEC_EXTRACT_ODD_EXPR = 185
VEC_INIT_EXPR = 213
VEC_INTERLEAVE_HIGH_EXPR = 186
VEC_INTERLEAVE_LOW_EXPR = 187
VEC_LSHIFT_EXPR = 173
VEC_NEW_EXPR = 206
VEC_PACK_FIX_TRUNC_EXPR = 183
VEC_PACK_SAT_EXPR = 182
VEC_PACK_TRUNC_EXPR = 181
VEC_RSHIFT_EXPR = 174
VEC_UNPACK_FLOAT_HI_EXPR = 179
VEC_UNPACK_FLOAT_LO_EXPR = 180
VEC_UNPACK_HI_EXPR = 177
VEC_UNPACK_LO_EXPR = 178
VEC_WIDEN_MULT_HI_EXPR = 175
VEC_WIDEN_MULT_LO_EXPR = 176
VIEW_CONVERT_EXPR = 117
VISIBILITY_DEFAULT = 0
VISIBILITY_HIDDEN = 2
VISIBILITY_INTERNAL = 3
VISIBILITY_PROTECTED = 1
VMS_AND_DWARF2_DEBUG = 6
VMS_DEBUG = 5
VOID_TYPE = 20
VOIDmode = 0
WARN_STRICT_OVERFLOW_ALL = 1
WARN_STRICT_OVERFLOW_COMPARISON = 3
WARN_STRICT_OVERFLOW_CONDITIONAL = 2
WARN_STRICT_OVERFLOW_MAGNITUDE = 5
WARN_STRICT_OVERFLOW_MISC = 4
WHILE_STMT = 250
WIDEN_MULT_EXPR = 169
WIDEN_MULT_MINUS_EXPR = 171
WIDEN_MULT_PLUS_EXPR = 170
WIDEN_SUM_EXPR = 168
WITH_CLEANUP_EXPR = 59
WITH_SIZE_EXPR = 149
X86_ARCH_BSWAP = 4
X86_ARCH_CMOVE = 0
X86_ARCH_CMPXCHG = 1
X86_ARCH_CMPXCHG8B = 2
X86_ARCH_LAST = 5
X86_ARCH_XADD = 3
X86_TUNE_AVOID_VECTOR_DECODE = 54
X86_TUNE_AVX128_OPTIMAL = 66
X86_TUNE_BRANCH_PREDICTION_HINTS = 5
X86_TUNE_DEEP_BRANCH_PREDICTION = 4
X86_TUNE_DOUBLE_POP = 27
X86_TUNE_DOUBLE_PUSH = 29
X86_TUNE_DOUBLE_WITH_ADD = 6
X86_TUNE_EPILOGUE_USING_MOVE = 41
X86_TUNE_EXT_80387_CONSTANTS = 52
X86_TUNE_FAST_PREFIX = 20
X86_TUNE_FOUR_JUMP_LIMIT = 46
X86_TUNE_FUSE_CMP_AND_BRANCH = 63
X86_TUNE_HIMODE_MATH = 23
X86_TUNE_INTEGER_DFMODE_MOVES = 30
X86_TUNE_INTER_UNIT_CONVERSIONS = 45
X86_TUNE_INTER_UNIT_MOVES = 44
X86_TUNE_LAST = 67
X86_TUNE_MEMORY_MISMATCH_STALL = 39
X86_TUNE_MOVE_M1_VIA_OR = 58
X86_TUNE_MOVX = 8
X86_TUNE_NOT_UNPAIRABLE = 59
X86_TUNE_NOT_VECTORMODE = 60
X86_TUNE_OPT_AGU = 64
X86_TUNE_PAD_RETURNS = 50
X86_TUNE_PAD_SHORT_FUNCTION = 51
X86_TUNE_PARTIAL_FLAG_REG_STALL = 10
X86_TUNE_PARTIAL_REG_DEPENDENCY = 31
X86_TUNE_PARTIAL_REG_STALL = 9
X86_TUNE_PROLOGUE_USING_MOVE = 40
X86_TUNE_PROMOTE_HIMODE_IMUL = 55
X86_TUNE_PROMOTE_HI_REGS = 25
X86_TUNE_PROMOTE_QIMODE = 19
X86_TUNE_PROMOTE_QI_REGS = 24
X86_TUNE_PUSH_MEMORY = 1
X86_TUNE_QIMODE_MATH = 22
X86_TUNE_READ_MODIFY = 18
X86_TUNE_READ_MODIFY_WRITE = 17
X86_TUNE_SCHEDULE = 47
X86_TUNE_SHIFT1 = 42
X86_TUNE_SHORTEN_X87_SSE = 53
X86_TUNE_SINGLE_POP = 26
X86_TUNE_SINGLE_PUSH = 28
X86_TUNE_SINGLE_STRINGOP = 21
X86_TUNE_SLOW_IMUL_IMM32_MEM = 56
X86_TUNE_SLOW_IMUL_IMM8 = 57
X86_TUNE_SPLIT_LONG_MOVES = 16
X86_TUNE_SSE_LOAD0_BY_PXOR = 38
X86_TUNE_SSE_PACKED_SINGLE_INSN_OPTIMAL = 35
X86_TUNE_SSE_PARTIAL_REG_DEPENDENCY = 32
X86_TUNE_SSE_SPLIT_REGS = 36
X86_TUNE_SSE_TYPELESS_STORES = 37
X86_TUNE_SSE_UNALIGNED_LOAD_OPTIMAL = 33
X86_TUNE_SSE_UNALIGNED_STORE_OPTIMAL = 34
X86_TUNE_UNROLL_STRLEN = 3
X86_TUNE_USE_BT = 48
X86_TUNE_USE_CLTD = 14
X86_TUNE_USE_FFREEP = 43
X86_TUNE_USE_HIMODE_FIOP = 11
X86_TUNE_USE_INCDEC = 49
X86_TUNE_USE_LEAVE = 0
X86_TUNE_USE_MOV0 = 13
X86_TUNE_USE_SAHF = 7
X86_TUNE_USE_SIMODE_FIOP = 12
X86_TUNE_USE_VECTOR_CONVERTS = 62
X86_TUNE_USE_VECTOR_FP_CONVERTS = 61
X86_TUNE_USE_XCHGB = 15
X86_TUNE_VECTORIZE_DOUBLE = 65
X86_TUNE_ZERO_EXTEND_WITH_AND = 2
XCOFF_DEBUG = 4
XCmode = 53
XFmode = 40
_CS_GNU_LIBC_VERSION = 2
_CS_GNU_LIBPTHREAD_VERSION = 3
_CS_LFS64_CFLAGS = 1004
_CS_LFS64_LDFLAGS = 1005
_CS_LFS64_LIBS = 1006
_CS_LFS64_LINTFLAGS = 1007
_CS_LFS_CFLAGS = 1000
_CS_LFS_LDFLAGS = 1001
_CS_LFS_LIBS = 1002
_CS_LFS_LINTFLAGS = 1003
_CS_PATH = 0
_CS_POSIX_V6_ILP32_OFF32_CFLAGS = 1116
_CS_POSIX_V6_ILP32_OFF32_LDFLAGS = 1117
_CS_POSIX_V6_ILP32_OFF32_LIBS = 1118
_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS = 1119
_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS = 1120
_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS = 1121
_CS_POSIX_V6_ILP32_OFFBIG_LIBS = 1122
_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS = 1123
_CS_POSIX_V6_LP64_OFF64_CFLAGS = 1124
_CS_POSIX_V6_LP64_OFF64_LDFLAGS = 1125
_CS_POSIX_V6_LP64_OFF64_LIBS = 1126
_CS_POSIX_V6_LP64_OFF64_LINTFLAGS = 1127
_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS = 1128
_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS = 1129
_CS_POSIX_V6_LPBIG_OFFBIG_LIBS = 1130
_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS = 1131
_CS_POSIX_V7_ILP32_OFF32_CFLAGS = 1132
_CS_POSIX_V7_ILP32_OFF32_LDFLAGS = 1133
_CS_POSIX_V7_ILP32_OFF32_LIBS = 1134
_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS = 1135
_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS = 1136
_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS = 1137
_CS_POSIX_V7_ILP32_OFFBIG_LIBS = 1138
_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS = 1139
_CS_POSIX_V7_LP64_OFF64_CFLAGS = 1140
_CS_POSIX_V7_LP64_OFF64_LDFLAGS = 1141
_CS_POSIX_V7_LP64_OFF64_LIBS = 1142
_CS_POSIX_V7_LP64_OFF64_LINTFLAGS = 1143
_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS = 1144
_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS = 1145
_CS_POSIX_V7_LPBIG_OFFBIG_LIBS = 1146
_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS = 1147
_CS_V5_WIDTH_RESTRICTED_ENVS = 4
_CS_V6_ENV = 1148
_CS_V6_WIDTH_RESTRICTED_ENVS = 1
_CS_V7_ENV = 1149
_CS_V7_WIDTH_RESTRICTED_ENVS = 5
_CS_XBS5_ILP32_OFF32_CFLAGS = 1100
_CS_XBS5_ILP32_OFF32_LDFLAGS = 1101
_CS_XBS5_ILP32_OFF32_LIBS = 1102
_CS_XBS5_ILP32_OFF32_LINTFLAGS = 1103
_CS_XBS5_ILP32_OFFBIG_CFLAGS = 1104
_CS_XBS5_ILP32_OFFBIG_LDFLAGS = 1105
_CS_XBS5_ILP32_OFFBIG_LIBS = 1106
_CS_XBS5_ILP32_OFFBIG_LINTFLAGS = 1107
_CS_XBS5_LP64_OFF64_CFLAGS = 1108
_CS_XBS5_LP64_OFF64_LDFLAGS = 1109
_CS_XBS5_LP64_OFF64_LIBS = 1110
_CS_XBS5_LP64_OFF64_LINTFLAGS = 1111
_CS_XBS5_LPBIG_OFFBIG_CFLAGS = 1112
_CS_XBS5_LPBIG_OFFBIG_LDFLAGS = 1113
_CS_XBS5_LPBIG_OFFBIG_LIBS = 1114
_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS = 1115
_ISalnum = 8
_ISalpha = 1024
_ISblank = 1
_IScntrl = 2
_ISdigit = 2048
_ISgraph = 32768
_ISlower = 512
_ISprint = 16384
_ISpunct = 4
_ISspace = 8192
_ISupper = 256
_ISxdigit = 4096
_PC_2_SYMLINKS = 20
_PC_ALLOC_SIZE_MIN = 18
_PC_ASYNC_IO = 10
_PC_CHOWN_RESTRICTED = 6
_PC_FILESIZEBITS = 13
_PC_LINK_MAX = 0
_PC_MAX_CANON = 1
_PC_MAX_INPUT = 2
_PC_NAME_MAX = 3
_PC_NO_TRUNC = 7
_PC_PATH_MAX = 4
_PC_PIPE_BUF = 5
_PC_PRIO_IO = 11
_PC_REC_INCR_XFER_SIZE = 14
_PC_REC_MAX_XFER_SIZE = 15
_PC_REC_MIN_XFER_SIZE = 16
_PC_REC_XFER_ALIGN = 17
_PC_SOCK_MAXBUF = 12
_PC_SYMLINK_MAX = 19
_PC_SYNC_IO = 9
_PC_VDISABLE = 8
_SC_2_CHAR_TERM = 95
_SC_2_C_BIND = 47
_SC_2_C_DEV = 48
_SC_2_C_VERSION = 96
_SC_2_FORT_DEV = 49
_SC_2_FORT_RUN = 50
_SC_2_LOCALEDEF = 52
_SC_2_PBS = 168
_SC_2_PBS_ACCOUNTING = 169
_SC_2_PBS_CHECKPOINT = 175
_SC_2_PBS_LOCATE = 170
_SC_2_PBS_MESSAGE = 171
_SC_2_PBS_TRACK = 172
_SC_2_SW_DEV = 51
_SC_2_UPE = 97
_SC_2_VERSION = 46
_SC_ADVISORY_INFO = 132
_SC_AIO_LISTIO_MAX = 23
_SC_AIO_MAX = 24
_SC_AIO_PRIO_DELTA_MAX = 25
_SC_ARG_MAX = 0
_SC_ASYNCHRONOUS_IO = 12
_SC_ATEXIT_MAX = 87
_SC_AVPHYS_PAGES = 86
_SC_BARRIERS = 133
_SC_BASE = 134
_SC_BC_BASE_MAX = 36
_SC_BC_DIM_MAX = 37
_SC_BC_SCALE_MAX = 38
_SC_BC_STRING_MAX = 39
_SC_CHARCLASS_NAME_MAX = 45
_SC_CHAR_BIT = 101
_SC_CHAR_MAX = 102
_SC_CHAR_MIN = 103
_SC_CHILD_MAX = 1
_SC_CLK_TCK = 2
_SC_CLOCK_SELECTION = 137
_SC_COLL_WEIGHTS_MAX = 40
_SC_CPUTIME = 138
_SC_C_LANG_SUPPORT = 135
_SC_C_LANG_SUPPORT_R = 136
_SC_DELAYTIMER_MAX = 26
_SC_DEVICE_IO = 140
_SC_DEVICE_SPECIFIC = 141
_SC_DEVICE_SPECIFIC_R = 142
_SC_EQUIV_CLASS_MAX = 41
_SC_EXPR_NEST_MAX = 42
_SC_FD_MGMT = 143
_SC_FIFO = 144
_SC_FILE_ATTRIBUTES = 146
_SC_FILE_LOCKING = 147
_SC_FILE_SYSTEM = 148
_SC_FSYNC = 15
_SC_GETGR_R_SIZE_MAX = 69
_SC_GETPW_R_SIZE_MAX = 70
_SC_HOST_NAME_MAX = 180
_SC_INT_MAX = 104
_SC_INT_MIN = 105
_SC_IOV_MAX = 60
_SC_IPV6 = 235
_SC_JOB_CONTROL = 7
_SC_LEVEL1_DCACHE_ASSOC = 189
_SC_LEVEL1_DCACHE_LINESIZE = 190
_SC_LEVEL1_DCACHE_SIZE = 188
_SC_LEVEL1_ICACHE_ASSOC = 186
_SC_LEVEL1_ICACHE_LINESIZE = 187
_SC_LEVEL1_ICACHE_SIZE = 185
_SC_LEVEL2_CACHE_ASSOC = 192
_SC_LEVEL2_CACHE_LINESIZE = 193
_SC_LEVEL2_CACHE_SIZE = 191
_SC_LEVEL3_CACHE_ASSOC = 195
_SC_LEVEL3_CACHE_LINESIZE = 196
_SC_LEVEL3_CACHE_SIZE = 194
_SC_LEVEL4_CACHE_ASSOC = 198
_SC_LEVEL4_CACHE_LINESIZE = 199
_SC_LEVEL4_CACHE_SIZE = 197
_SC_LINE_MAX = 43
_SC_LOGIN_NAME_MAX = 71
_SC_LONG_BIT = 106
_SC_MAPPED_FILES = 16
_SC_MB_LEN_MAX = 108
_SC_MEMLOCK = 17
_SC_MEMLOCK_RANGE = 18
_SC_MEMORY_PROTECTION = 19
_SC_MESSAGE_PASSING = 20
_SC_MONOTONIC_CLOCK = 149
_SC_MQ_OPEN_MAX = 27
_SC_MQ_PRIO_MAX = 28
_SC_MULTI_PROCESS = 150
_SC_NETWORKING = 152
_SC_NGROUPS_MAX = 3
_SC_NL_ARGMAX = 119
_SC_NL_LANGMAX = 120
_SC_NL_MSGMAX = 121
_SC_NL_NMAX = 122
_SC_NL_SETMAX = 123
_SC_NL_TEXTMAX = 124
_SC_NPROCESSORS_CONF = 83
_SC_NPROCESSORS_ONLN = 84
_SC_NZERO = 109
_SC_OPEN_MAX = 4
_SC_PAGESIZE = 30
_SC_PASS_MAX = 88
_SC_PHYS_PAGES = 85
_SC_PII = 53
_SC_PII_INTERNET = 56
_SC_PII_INTERNET_DGRAM = 62
_SC_PII_INTERNET_STREAM = 61
_SC_PII_OSI = 57
_SC_PII_OSI_CLTS = 64
_SC_PII_OSI_COTS = 63
_SC_PII_OSI_M = 65
_SC_PII_SOCKET = 55
_SC_PII_XTI = 54
_SC_PIPE = 145
_SC_POLL = 58
_SC_PRIORITIZED_IO = 13
_SC_PRIORITY_SCHEDULING = 10
_SC_RAW_SOCKETS = 236
_SC_READER_WRITER_LOCKS = 153
_SC_REALTIME_SIGNALS = 9
_SC_REGEXP = 155
_SC_REGEX_VERSION = 156
_SC_RE_DUP_MAX = 44
_SC_RTSIG_MAX = 31
_SC_SAVED_IDS = 8
_SC_SCHAR_MAX = 111
_SC_SCHAR_MIN = 112
_SC_SELECT = 59
_SC_SEMAPHORES = 21
_SC_SEM_NSEMS_MAX = 32
_SC_SEM_VALUE_MAX = 33
_SC_SHARED_MEMORY_OBJECTS = 22
_SC_SHELL = 157
_SC_SHRT_MAX = 113
_SC_SHRT_MIN = 114
_SC_SIGNALS = 158
_SC_SIGQUEUE_MAX = 34
_SC_SINGLE_PROCESS = 151
_SC_SPAWN = 159
_SC_SPIN_LOCKS = 154
_SC_SPORADIC_SERVER = 160
_SC_SSIZE_MAX = 110
_SC_SS_REPL_MAX = 241
_SC_STREAMS = 174
_SC_STREAM_MAX = 5
_SC_SYMLOOP_MAX = 173
_SC_SYNCHRONIZED_IO = 14
_SC_SYSTEM_DATABASE = 162
_SC_SYSTEM_DATABASE_R = 163
_SC_THREADS = 67
_SC_THREAD_ATTR_STACKADDR = 77
_SC_THREAD_ATTR_STACKSIZE = 78
_SC_THREAD_CPUTIME = 139
_SC_THREAD_DESTRUCTOR_ITERATIONS = 73
_SC_THREAD_KEYS_MAX = 74
_SC_THREAD_PRIORITY_SCHEDULING = 79
_SC_THREAD_PRIO_INHERIT = 80
_SC_THREAD_PRIO_PROTECT = 81
_SC_THREAD_PROCESS_SHARED = 82
_SC_THREAD_ROBUST_PRIO_INHERIT = 247
_SC_THREAD_ROBUST_PRIO_PROTECT = 248
_SC_THREAD_SAFE_FUNCTIONS = 68
_SC_THREAD_SPORADIC_SERVER = 161
_SC_THREAD_STACK_MIN = 75
_SC_THREAD_THREADS_MAX = 76
_SC_TIMEOUTS = 164
_SC_TIMERS = 11
_SC_TIMER_MAX = 35
_SC_TRACE = 181
_SC_TRACE_EVENT_FILTER = 182
_SC_TRACE_EVENT_NAME_MAX = 242
_SC_TRACE_INHERIT = 183
_SC_TRACE_LOG = 184
_SC_TRACE_NAME_MAX = 243
_SC_TRACE_SYS_MAX = 244
_SC_TRACE_USER_EVENT_MAX = 245
_SC_TTY_NAME_MAX = 72
_SC_TYPED_MEMORY_OBJECTS = 165
_SC_TZNAME_MAX = 6
_SC_T_IOV_MAX = 66
_SC_UCHAR_MAX = 115
_SC_UINT_MAX = 116
_SC_UIO_MAXIOV = 60
_SC_ULONG_MAX = 117
_SC_USER_GROUPS = 166
_SC_USER_GROUPS_R = 167
_SC_USHRT_MAX = 118
_SC_V6_ILP32_OFF32 = 176
_SC_V6_ILP32_OFFBIG = 177
_SC_V6_LP64_OFF64 = 178
_SC_V6_LPBIG_OFFBIG = 179
_SC_V7_ILP32_OFF32 = 237
_SC_V7_ILP32_OFFBIG = 238
_SC_V7_LP64_OFF64 = 239
_SC_V7_LPBIG_OFFBIG = 240
_SC_VERSION = 29
_SC_WORD_BIT = 107
_SC_XBS5_ILP32_OFF32 = 125
_SC_XBS5_ILP32_OFFBIG = 126
_SC_XBS5_LP64_OFF64 = 127
_SC_XBS5_LPBIG_OFFBIG = 128
_SC_XOPEN_CRYPT = 92
_SC_XOPEN_ENH_I18N = 93
_SC_XOPEN_LEGACY = 129
_SC_XOPEN_REALTIME = 130
_SC_XOPEN_REALTIME_THREADS = 131
_SC_XOPEN_SHM = 94
_SC_XOPEN_STREAMS = 246
_SC_XOPEN_UNIX = 91
_SC_XOPEN_VERSION = 89
_SC_XOPEN_XCU_VERSION = 90
_SC_XOPEN_XPG2 = 98
_SC_XOPEN_XPG3 = 99
_SC_XOPEN_XPG4 = 100
__RLIMIT_LOCKS = 10
__RLIMIT_MEMLOCK = 8
__RLIMIT_MSGQUEUE = 12
__RLIMIT_NICE = 13
__RLIMIT_NLIMITS = 16
__RLIMIT_NPROC = 6
__RLIMIT_OFILE = 7
__RLIMIT_RSS = 5
__RLIMIT_RTPRIO = 14
__RLIMIT_RTTIME = 15
__RLIMIT_SIGPENDING = 11
__RLIM_NLIMITS = 16
__codecvt_error = 2
__codecvt_noconv = 3
__codecvt_ok = 0
__codecvt_partial = 1
_sch_isalnum = 140
_sch_isalpha = 136
_sch_isbasic = 3088
_sch_isblank = 1
_sch_iscntrl = 2
_sch_iscppsp = 3072
_sch_isdigit = 4
_sch_isgraph = 172
_sch_isidnum = 516
_sch_isidst = 512
_sch_islower = 8
_sch_isnvsp = 2048
_sch_isprint = 16
_sch_ispunct = 32
_sch_isspace = 64
_sch_isupper = 128
_sch_isvsp = 1024
_sch_isxdigit = 256
ak_none = 0
ak_private = 3
ak_protected = 2
ak_public = 1
all_kinds = 16
b_kind = 2
ba_any = 0
ba_check = 3
ba_check_bit = 2
ba_ignore_scope = 4
ba_quiet = 8
ba_unique = 1
binfo_kind = 9
bk_ambig = -2
bk_inaccessible = -3
bk_not_base = -1
bk_proper_base = 1
bk_same_type = 0
bk_via_virtual = 2
c_kind = 6
cdk_array = 2
cdk_error = 6
cdk_function = 1
cdk_id = 0
cdk_pointer = 3
cdk_ptrmem = 5
cdk_reference = 4
ce_derived = 0
ce_exact = 2
ce_normal = 1
class_type = 2
clk_bitfield = 8
clk_c = 0
clk_class = 4
clk_cxx = 2
clk_none = 0
clk_objc = 1
clk_objcxx = 3
clk_ordinary = 1
clk_packed = 16
clk_rvalueref = 2
constr_kind = 11
cxx0x = 1
cxx98 = 0
d_kind = 0
dk_auto = 2
dk_deferred = 1
dk_dynamic = 3
dk_no_check = 2
dk_no_deferred = 0
dk_static = 0
dk_thread = 1
ds_complex = 13
ds_const = 4
ds_constexpr = 12
ds_explicit = 9
ds_first = 0
ds_friend = 10
ds_inline = 7
ds_last = 15
ds_long = 3
ds_restrict = 6
ds_short = 2
ds_signed = 0
ds_thread = 14
ds_typedef = 11
ds_unsigned = 1
ds_virtual = 8
ds_volatile = 5
e_kind = 5
enum_type = 4
fb_either = 3
fb_lvalue = 2
fb_mayfail = 4
fb_none = 0
fb_rvalue = 1
gt_e_II12splay_tree_s = 635
gt_e_II17splay_tree_node_s = 593
gt_e_P10die_struct4htab = 631
gt_e_P10spec_entry4htab = 604
gt_e_P10vcall_insn4htab = 628
gt_e_P11cgraph_edge4htab = 638
gt_e_P11cgraph_node4htab = 634
gt_e_P11heapvar_map4htab = 609
gt_e_P12object_block4htab = 617
gt_e_P12tree_int_map4htab = 614
gt_e_P12varpool_node4htab = 612
gt_e_P13libfunc_entry4htab = 642
gt_e_P13scev_info_str4htab = 613
gt_e_P13tree_decl_map4htab = 620
gt_e_P14constexpr_call4htab = 602
gt_e_P14type_assertion4htab = 598
gt_e_P15dwarf_file_data4htab = 632
gt_e_P15interface_tuple4htab = 596
gt_e_P15throw_stmt_node4htab = 623
gt_e_P16constexpr_fundef4htab = 603
gt_e_P16cxx_int_tree_map4htab = 605
gt_e_P16var_loc_list_def4htab = 630
gt_e_P17lto_in_decl_state4htab = 607
gt_e_P17module_htab_entry4htab = 600
gt_e_P17named_label_entry4htab = 606
gt_e_P17string_descriptor4htab = 597
gt_e_P17tree_priority_map4htab = 619
gt_e_P18treetreehash_entry4htab = 599
gt_e_P20indirect_string_node4htab = 633
gt_e_P20lto_symtab_entry_def4htab = 608
gt_e_P21pending_abstract_type4htab = 601
gt_e_P22cached_dw_loc_list_def4htab = 629
gt_e_P23constant_descriptor_rtx4htab = 615
gt_e_P23temp_slot_address_entry4htab = 622
gt_e_P24constant_descriptor_tree4htab = 616
gt_e_P24types_used_by_vars_entry4htab = 640
gt_e_P27cgraph_node_set_element_def4htab = 637
gt_e_P28varpool_node_set_element_def4htab = 636
gt_e_P7rtx_def4htab = 626
gt_e_P7section4htab = 618
gt_e_P8tree_map4htab = 610
gt_e_P9loop_exit4htab = 639
gt_e_P9mem_attrs4htab = 625
gt_e_P9reg_attrs4htab = 624
gt_e_P9tree_node4htab = 641
gt_e_P9tree_nodeP9tree_node12splay_tree_s = 611
gt_e_P9tree_nodeP9tree_node17splay_tree_node_s = 595
gt_e_P9type_hash4htab = 621
gt_e_SP9tree_node12splay_tree_s = 627
gt_e_SP9tree_node17splay_tree_node_s = 594
gt_ggc_e_10VEC_rtx_gc = 560
gt_ggc_e_10alias_pair = 397
gt_ggc_e_10cpp_string = 589
gt_ggc_e_10die_struct = 371
gt_ggc_e_10eh_catch_d = 213
gt_ggc_e_10ptrmem_cst = 124
gt_ggc_e_10real_value = 547
gt_ggc_e_10rtx_def_eq = 460
gt_ggc_e_10rtx_def_ge = 459
gt_ggc_e_10rtx_def_gt = 458
gt_ggc_e_10rtx_def_le = 457
gt_ggc_e_10rtx_def_lt = 456
gt_ggc_e_10rtx_def_ne = 461
gt_ggc_e_10rtx_def_pc = 506
gt_ggc_e_10spec_entry = 82
gt_ggc_e_10stmt_group = 150
gt_ggc_e_10target_rtl = 398
gt_ggc_e_10tree_binfo = 367
gt_ggc_e_10tree_block = 372
gt_ggc_e_10tree_check = 76
gt_ggc_e_10vcall_insn = 216
gt_ggc_e_11VEC_edge_gc = 302
gt_ggc_e_11VEC_tree_gc = 564
gt_ggc_e_11align_stack = 56
gt_ggc_e_11cgraph_edge = 279
gt_ggc_e_11cgraph_node = 296
gt_ggc_e_11cpool_entry = 33
gt_ggc_e_11cpp_macro_u = 579
gt_ggc_e_11cpp_token_u = 582
gt_ggc_e_11cxx_binding = 140
gt_ggc_e_11eh_region_d = 215
gt_ggc_e_11eh_region_u = 209
gt_ggc_e_11eh_status_u = 203
gt_ggc_e_11emit_status = 337
gt_ggc_e_11expr_status = 336
gt_ggc_e_11fixed_value = 546
gt_ggc_e_11frame_space = 323
gt_ggc_e_11heapvar_map = 163
gt_ggc_e_11lang_decl_u = 92
gt_ggc_e_11lang_type_u = 101
gt_ggc_e_11parm_attr_d = 153
gt_ggc_e_11pt_solution = 192
gt_ggc_e_11rtl_bb_info = 301
gt_ggc_e_11rtx_def_abs = 430
gt_ggc_e_11rtx_def_and = 480
gt_ggc_e_11rtx_def_cc0 = 495
gt_ggc_e_11rtx_def_clz = 426
gt_ggc_e_11rtx_def_ctz = 425
gt_ggc_e_11rtx_def_div = 486
gt_ggc_e_11rtx_def_ffs = 427
gt_ggc_e_11rtx_def_fix = 437
gt_ggc_e_11rtx_def_fma = 403
gt_ggc_e_11rtx_def_geu = 455
gt_ggc_e_11rtx_def_gtu = 454
gt_ggc_e_11rtx_def_ior = 479
gt_ggc_e_11rtx_def_leu = 453
gt_ggc_e_11rtx_def_ltu = 452
gt_ggc_e_11rtx_def_mem = 499
gt_ggc_e_11rtx_def_mod = 483
gt_ggc_e_11rtx_def_neg = 490
gt_ggc_e_11rtx_def_not = 477
gt_ggc_e_11rtx_def_reg = 505
gt_ggc_e_11rtx_def_set = 519
gt_ggc_e_11rtx_def_use = 518
gt_ggc_e_11rtx_def_xor = 478
gt_ggc_e_11saved_scope = 128
gt_ggc_e_11stack_usage = 320
gt_ggc_e_11stmt_tree_s = 111
gt_ggc_e_11tinst_level = 143
gt_ggc_e_11tree_common = 393
gt_ggc_e_11tree_pair_s = 108
gt_ggc_e_11tree_string = 389
gt_ggc_e_11tree_vector = 387
gt_ggc_e_12VEC_rtx_base = 561
gt_ggc_e_12VEC_uchar_gc = 567
gt_ggc_e_12block_symbol = 548
gt_ggc_e_12c_label_vars = 7
gt_ggc_e_12cpp_hashnode = 588
gt_ggc_e_12dcall_struct = 222
gt_ggc_e_12fake_union_1 = 497
gt_ggc_e_12gimple_seq_d = 571
gt_ggc_e_12hashed_entry = 27
gt_ggc_e_12ipa_ref_list = 290
gt_ggc_e_12lang_decl_fn = 95
gt_ggc_e_12lang_decl_ns = 94
gt_ggc_e_12lang_decl_u2 = 99
gt_ggc_e_12lang_decl_u3 = 96
gt_ggc_e_12lang_decl_u5 = 97
gt_ggc_e_12lpt_decision = 310
gt_ggc_e_12msgref_entry = 19
gt_ggc_e_12object_block = 549
gt_ggc_e_12ptr_info_def = 377
gt_ggc_e_12rtx_def_call = 516
gt_ggc_e_12rtx_def_high = 420
gt_ggc_e_12rtx_def_insn = 534
gt_ggc_e_12rtx_def_ltgt = 444
gt_ggc_e_12rtx_def_mult = 489
gt_ggc_e_12rtx_def_note = 529
gt_ggc_e_12rtx_def_plus = 492
gt_ggc_e_12rtx_def_smax = 470
gt_ggc_e_12rtx_def_smin = 471
gt_ggc_e_12rtx_def_sqrt = 429
gt_ggc_e_12rtx_def_udiv = 482
gt_ggc_e_12rtx_def_umax = 468
gt_ggc_e_12rtx_def_umin = 469
gt_ggc_e_12rtx_def_umod = 481
gt_ggc_e_12rtx_def_uneq = 449
gt_ggc_e_12rtx_def_unge = 448
gt_ggc_e_12rtx_def_ungt = 447
gt_ggc_e_12rtx_def_unle = 446
gt_ggc_e_12rtx_def_unlt = 445
gt_ggc_e_12splay_tree_s = 554
gt_ggc_e_12ssa_operands = 169
gt_ggc_e_12tree_complex = 388
gt_ggc_e_12tree_int_cst = 392
gt_ggc_e_12tree_int_map = 342
gt_ggc_e_12var_loc_node = 225
gt_ggc_e_12varpool_node = 295
gt_ggc_e_12vcall_struct = 219
gt_ggc_e_13VEC_edge_base = 303
gt_ggc_e_13VEC_gimple_gc = 562
gt_ggc_e_13VEC_loop_p_gc = 305
gt_ggc_e_13VEC_tree_base = 566
gt_ggc_e_13VEC_tree_none = 565
gt_ggc_e_13binding_level = 48
gt_ggc_e_13cpp_macro_arg = 585
gt_ggc_e_13dw_cfi_struct = 261
gt_ggc_e_13dw_fde_struct = 260
gt_ggc_e_13dw_val_struct = 253
gt_ggc_e_13dw_vec_struct = 248
gt_ggc_e_13ht_identifier = 580
gt_ggc_e_13incoming_args = 325
gt_ggc_e_13ipa_edge_args = 263
gt_ggc_e_13ipa_jump_func = 264
gt_ggc_e_13ipa_ref_ptr_u = 294
gt_ggc_e_13ivarref_entry = 13
gt_ggc_e_13lang_decl_min = 98
gt_ggc_e_13lang_decl_var = 37
gt_ggc_e_13libfunc_entry = 340
gt_ggc_e_13named_section = 313
gt_ggc_e_13nb_iter_bound = 309
gt_ggc_e_13rtx_def_bswap = 428
gt_ggc_e_13rtx_def_const = 507
gt_ggc_e_13rtx_def_float = 438
gt_ggc_e_13rtx_def_minus = 491
gt_ggc_e_13rtx_def_value = 541
gt_ggc_e_13scev_info_str = 165
gt_ggc_e_13tree_baselink = 122
gt_ggc_e_13tree_decl_map = 343
gt_ggc_e_13tree_map_base = 345
gt_ggc_e_13tree_overload = 123
gt_ggc_e_13tree_real_cst = 391
gt_ggc_e_13tree_ssa_name = 375
gt_ggc_e_13tree_var_decl = 355
gt_ggc_e_13varasm_status = 326
gt_ggc_e_14VEC_tinfo_s_gc = 145
gt_ggc_e_14VEC_uchar_base = 568
gt_ggc_e_14bitmap_obstack = 552
gt_ggc_e_14builtin_record = 31
gt_ggc_e_14constexpr_call = 77
gt_ggc_e_14cp_token_cache = 121
gt_ggc_e_14cp_token_value = 75
gt_ggc_e_14cpp_identifier = 583
gt_ggc_e_14dw_attr_struct = 244
gt_ggc_e_14edge_def_insns = 304
gt_ggc_e_14gimple_bb_info = 300
gt_ggc_e_14inline_summary = 288
gt_ggc_e_14lang_decl_base = 100
gt_ggc_e_14lang_decl_func = 39
gt_ggc_e_14lang_decl_parm = 93
gt_ggc_e_14lang_tree_node = 346
gt_ggc_e_14macinfo_struct = 232
gt_ggc_e_14method_entry_d = 36
gt_ggc_e_14pending_weak_d = 55
gt_ggc_e_14pubname_struct = 241
gt_ggc_e_14rtx_def_ashift = 476
gt_ggc_e_14rtx_def_concat = 501
gt_ggc_e_14rtx_def_lo_sum = 419
gt_ggc_e_14rtx_def_parity = 423
gt_ggc_e_14rtx_def_return = 515
gt_ggc_e_14rtx_def_rotate = 475
gt_ggc_e_14rtx_def_ss_abs = 409
gt_ggc_e_14rtx_def_ss_div = 485
gt_ggc_e_14rtx_def_ss_neg = 411
gt_ggc_e_14rtx_def_subreg = 503
gt_ggc_e_14rtx_def_unspec = 524
gt_ggc_e_14rtx_def_us_div = 484
gt_ggc_e_14rtx_def_us_neg = 410
gt_ggc_e_14section_common = 314
gt_ggc_e_14sequence_stack = 338
gt_ggc_e_14string_or_tree = 32
gt_ggc_e_14tree_fixed_cst = 390
gt_ggc_e_14tree_parm_decl = 357
gt_ggc_e_14tree_type_decl = 351
gt_ggc_e_14type_assertion = 38
gt_ggc_e_15VEC_gimple_base = 563
gt_ggc_e_15VEC_loop_p_base = 306
gt_ggc_e_15VEC_tree_int_gc = 62
gt_ggc_e_15basic_block_def = 569
gt_ggc_e_15binding_entry_s = 141
gt_ggc_e_15binding_table_s = 142
gt_ggc_e_15bitmap_head_def = 578
gt_ggc_e_15c_goto_bindings = 4
gt_ggc_e_15c_inline_static = 1
gt_ggc_e_15c_spot_bindings = 8
gt_ggc_e_15cgraph_asm_node = 269
gt_ggc_e_15cgraph_rtl_info = 284
gt_ggc_e_15cl_optimization = 572
gt_ggc_e_15deferred_access = 81
gt_ggc_e_15dwarf_file_data = 254
gt_ggc_e_15eh_region_u_try = 212
gt_ggc_e_15interface_tuple = 23
gt_ggc_e_15ipa_replace_map = 283
gt_ggc_e_15jump_func_value = 158
gt_ggc_e_15lang_identifier = 126
gt_ggc_e_15lang_type_class = 103
gt_ggc_e_15prot_list_entry = 16
gt_ggc_e_15queued_reg_save = 256
gt_ggc_e_15rtx_def_UnKnown = 542
gt_ggc_e_15rtx_def_address = 536
gt_ggc_e_15rtx_def_barrier = 531
gt_ggc_e_15rtx_def_clobber = 517
gt_ggc_e_15rtx_def_compare = 493
gt_ggc_e_15rtx_def_concatn = 500
gt_ggc_e_15rtx_def_ordered = 450
gt_ggc_e_15rtx_def_pre_dec = 467
gt_ggc_e_15rtx_def_pre_inc = 466
gt_ggc_e_15rtx_def_scratch = 504
gt_ggc_e_15rtx_def_ss_mult = 488
gt_ggc_e_15rtx_def_ss_plus = 414
gt_ggc_e_15rtx_def_trap_if = 513
gt_ggc_e_15rtx_def_us_mult = 487
gt_ggc_e_15rtx_def_us_plus = 413
gt_ggc_e_15target_libfuncs = 339
gt_ggc_e_15throw_stmt_node = 204
gt_ggc_e_15tree_const_decl = 358
gt_ggc_e_15tree_field_decl = 362
gt_ggc_e_15tree_identifier = 386
gt_ggc_e_15tree_label_decl = 361
gt_ggc_e_15tree_omp_clause = 373
gt_ggc_e_15tree_trait_expr = 117
gt_ggc_e_15unnamed_section = 312
gt_ggc_e_16VEC_eh_region_gc = 207
gt_ggc_e_16VEC_ipa_ref_t_gc = 291
gt_ggc_e_16VEC_parm_attr_gc = 151
gt_ggc_e_16VEC_tinfo_s_base = 146
gt_ggc_e_16cl_target_option = 573
gt_ggc_e_16constexpr_fundef = 78
gt_ggc_e_16cp_binding_level = 139
gt_ggc_e_16cp_class_binding = 135
gt_ggc_e_16cp_label_binding = 132
gt_ggc_e_16cxx_int_tree_map = 129
gt_ggc_e_16dw_ranges_struct = 240
gt_ggc_e_16dw_val_die_union = 247
gt_ggc_e_16eh_landing_pad_d = 214
gt_ggc_e_16gfc_powdecl_list = 43
gt_ggc_e_16gfc_st_parameter = 44
gt_ggc_e_16hashed_attribute = 26
gt_ggc_e_16ident_data_tuple = 22
gt_ggc_e_16incomplete_var_d = 86
gt_ggc_e_16lang_type_header = 105
gt_ggc_e_16lang_type_ptrmem = 102
gt_ggc_e_16limbo_die_struct = 229
gt_ggc_e_16machine_function = 557
gt_ggc_e_16noswitch_section = 311
gt_ggc_e_16pending_template = 83
gt_ggc_e_16rtx_def_addr_vec = 522
gt_ggc_e_16rtx_def_ashiftrt = 474
gt_ggc_e_16rtx_def_lshiftrt = 473
gt_ggc_e_16rtx_def_parallel = 527
gt_ggc_e_16rtx_def_popcount = 424
gt_ggc_e_16rtx_def_post_dec = 465
gt_ggc_e_16rtx_def_post_inc = 464
gt_ggc_e_16rtx_def_prefetch = 520
gt_ggc_e_16rtx_def_rotatert = 472
gt_ggc_e_16rtx_def_sequence = 537
gt_ggc_e_16rtx_def_ss_minus = 412
gt_ggc_e_16rtx_def_subunion = 400
gt_ggc_e_16rtx_def_truncate = 441
gt_ggc_e_16rtx_def_us_minus = 406
gt_ggc_e_16string_pool_data = 200
gt_ggc_e_16tree_constructor = 380
gt_ggc_e_16tree_decl_common = 364
gt_ggc_e_16tree_default_arg = 120
gt_ggc_e_16tree_lambda_expr = 116
gt_ggc_e_16tree_result_decl = 359
gt_ggc_e_16tree_type_symtab = 370
gt_ggc_e_16var_loc_list_def = 224
gt_ggc_e_17VEC_alias_pair_gc = 395
gt_ggc_e_17VEC_tree_int_base = 63
gt_ggc_e_17alias_set_entry_d = 267
gt_ggc_e_17cgraph_clone_info = 280
gt_ggc_e_17cgraph_local_info = 286
gt_ggc_e_17cgraph_thunk_info = 287
gt_ggc_e_17constructor_elt_d = 383
gt_ggc_e_17cp_parser_context = 72
gt_ggc_e_17cxx_saved_binding = 138
gt_ggc_e_17gimple_seq_node_d = 198
gt_ggc_e_17language_function = 316
gt_ggc_e_17lto_in_decl_state = 155
gt_ggc_e_17mem_addr_template = 168
gt_ggc_e_17module_htab_entry = 47
gt_ggc_e_17named_label_entry = 109
gt_ggc_e_17reg_saved_in_data = 255
gt_ggc_e_17rtx_constant_pool = 327
gt_ggc_e_17rtx_def_asm_input = 526
gt_ggc_e_17rtx_def_call_insn = 532
gt_ggc_e_17rtx_def_cond_exec = 528
gt_ggc_e_17rtx_def_const_int = 512
gt_ggc_e_17rtx_def_eh_return = 514
gt_ggc_e_17rtx_def_expr_list = 539
gt_ggc_e_17rtx_def_insn_list = 538
gt_ggc_e_17rtx_def_jump_insn = 533
gt_ggc_e_17rtx_def_label_ref = 498
gt_ggc_e_17rtx_def_sat_fract = 432
gt_ggc_e_17rtx_def_ss_ashift = 408
gt_ggc_e_17rtx_def_unordered = 451
gt_ggc_e_17rtx_def_us_ashift = 407
gt_ggc_e_17rtx_def_vec_merge = 418
gt_ggc_e_17splay_tree_node_s = 555
gt_ggc_e_17ssa_use_operand_d = 376
gt_ggc_e_17stack_local_entry = 558
gt_ggc_e_17string_descriptor = 24
gt_ggc_e_17tree_decl_minimal = 366
gt_ggc_e_17tree_exp_subunion = 379
gt_ggc_e_17tree_priority_map = 341
gt_ggc_e_18VEC_basic_block_gc = 297
gt_ggc_e_18VEC_dcall_entry_gc = 220
gt_ggc_e_18VEC_eh_region_base = 208
gt_ggc_e_18VEC_ipa_ref_t_base = 292
gt_ggc_e_18VEC_parm_attr_base = 152
gt_ggc_e_18VEC_temp_slot_p_gc = 328
gt_ggc_e_18VEC_tree_gc_vec_gc = 57
gt_ggc_e_18VEC_tree_pair_s_gc = 106
gt_ggc_e_18VEC_vcall_entry_gc = 217
gt_ggc_e_18bitmap_element_def = 553
gt_ggc_e_18call_site_record_d = 335
gt_ggc_e_18cgraph_global_info = 285
gt_ggc_e_18comdat_type_struct = 238
gt_ggc_e_18control_flow_graph = 318
gt_ggc_e_18dw_loc_list_struct = 252
gt_ggc_e_18gimple_statement_d = 575
gt_ggc_e_18gnat_binding_level = 148
gt_ggc_e_18initial_value_pair = 201
gt_ggc_e_18ipa_member_ptr_cst = 159
gt_ggc_e_18lto_file_decl_data = 289
gt_ggc_e_18lto_tree_ref_table = 154
gt_ggc_e_18rtx_def_code_label = 530
gt_ggc_e_18rtx_def_debug_expr = 540
gt_ggc_e_18rtx_def_debug_insn = 535
gt_ggc_e_18rtx_def_pre_modify = 463
gt_ggc_e_18rtx_def_symbol_ref = 496
gt_ggc_e_18rtx_def_vec_concat = 416
gt_ggc_e_18rtx_def_vec_select = 417
gt_ggc_e_18sorted_fields_type = 104
gt_ggc_e_18tree_decl_with_rtl = 363
gt_ggc_e_18tree_decl_with_vis = 356
gt_ggc_e_18tree_function_decl = 353
gt_ggc_e_18tree_static_assert = 119
gt_ggc_e_18tree_target_option = 347
gt_ggc_e_18tree_template_info = 112
gt_ggc_e_18treetreehash_entry = 40
gt_ggc_e_19VEC_alias_pair_base = 396
gt_ggc_e_19VEC_const_char_p_gc = 59
gt_ggc_e_19VEC_dw_attr_node_gc = 236
gt_ggc_e_19VEC_method_entry_gc = 34
gt_ggc_e_19VEC_msgref_entry_gc = 17
gt_ggc_e_19VEC_pending_weak_gc = 53
gt_ggc_e_19_cpp_hashnode_value = 581
gt_ggc_e_19c_common_identifier = 127
gt_ggc_e_19c_language_function = 110
gt_ggc_e_19cgraph_node_set_def = 275
gt_ggc_e_19dw_cfi_oprnd_struct = 259
gt_ggc_e_19dw_line_info_struct = 243
gt_ggc_e_19dw_loc_descr_struct = 258
gt_ggc_e_19dw_val_struct_union = 245
gt_ggc_e_19eh_region_u_allowed = 211
gt_ggc_e_19gfc_intrinsic_map_t = 46
gt_ggc_e_19gimple_omp_for_iter = 179
gt_ggc_e_19machine_frame_state = 559
gt_ggc_e_19rtx_def_const_fixed = 511
gt_ggc_e_19rtx_def_post_modify = 462
gt_ggc_e_19rtx_def_sign_extend = 443
gt_ggc_e_19rtx_def_ss_truncate = 405
gt_ggc_e_19rtx_def_us_truncate = 404
gt_ggc_e_19rtx_def_zero_extend = 442
gt_ggc_e_19tree_statement_list = 349
gt_ggc_e_20VEC_basic_block_base = 298
gt_ggc_e_20VEC_dcall_entry_base = 221
gt_ggc_e_20VEC_die_arg_entry_gc = 226
gt_ggc_e_20VEC_ivarref_entry_gc = 11
gt_ggc_e_20VEC_macinfo_entry_gc = 230
gt_ggc_e_20VEC_pubname_entry_gc = 233
gt_ggc_e_20VEC_temp_slot_p_base = 329
gt_ggc_e_20VEC_tree_gc_vec_base = 58
gt_ggc_e_20VEC_tree_pair_s_base = 107
gt_ggc_e_20VEC_vcall_entry_base = 218
gt_ggc_e_20die_arg_entry_struct = 228
gt_ggc_e_20function_subsections = 324
gt_ggc_e_20gimple_statement_asm = 181
gt_ggc_e_20gimple_statement_omp = 190
gt_ggc_e_20gimple_statement_phi = 185
gt_ggc_e_20gimple_statement_try = 183
gt_ggc_e_20gimple_statement_wce = 182
gt_ggc_e_20indirect_string_node = 257
gt_ggc_e_20initial_value_struct = 322
gt_ggc_e_20ipa_ancestor_jf_data = 160
gt_ggc_e_20lto_symtab_entry_def = 162
gt_ggc_e_20ltrans_partition_def = 30
gt_ggc_e_20operator_name_info_t = 91
gt_ggc_e_20rtx_def_asm_operands = 525
gt_ggc_e_20rtx_def_const_double = 510
gt_ggc_e_20rtx_def_const_string = 508
gt_ggc_e_20rtx_def_const_vector = 509
gt_ggc_e_20rtx_def_float_extend = 440
gt_ggc_e_20rtx_def_if_then_else = 494
gt_ggc_e_20rtx_def_sign_extract = 422
gt_ggc_e_20rtx_def_unsigned_fix = 435
gt_ggc_e_20rtx_def_var_location = 402
gt_ggc_e_20rtx_def_zero_extract = 421
gt_ggc_e_20ssa_operand_memory_d = 164
gt_ggc_e_20tree_decl_non_common = 354
gt_ggc_e_20varpool_node_set_def = 271
gt_ggc_e_21VEC_const_char_p_base = 60
gt_ggc_e_21VEC_dw_attr_node_base = 237
gt_ggc_e_21VEC_eh_landing_pad_gc = 205
gt_ggc_e_21VEC_incomplete_var_gc = 84
gt_ggc_e_21VEC_method_entry_base = 35
gt_ggc_e_21VEC_msgref_entry_base = 18
gt_ggc_e_21VEC_pending_weak_base = 54
gt_ggc_e_21deferred_access_check = 90
gt_ggc_e_21gimple_statement_base = 197
gt_ggc_e_21gimple_statement_bind = 189
gt_ggc_e_21gimple_statement_call = 191
gt_ggc_e_21ipa_pass_through_data = 161
gt_ggc_e_21named_label_use_entry = 87
gt_ggc_e_21pending_abstract_type = 61
gt_ggc_e_21rtx_def_addr_diff_vec = 521
gt_ggc_e_21rtx_def_fract_convert = 434
gt_ggc_e_21rtx_def_note_subunion = 544
gt_ggc_e_21rtx_def_vec_duplicate = 415
gt_ggc_e_21template_parm_index_s = 125
gt_ggc_e_22VEC_alias_set_entry_gc = 265
gt_ggc_e_22VEC_cgraph_node_ptr_gc = 277
gt_ggc_e_22VEC_constructor_elt_gc = 381
gt_ggc_e_22VEC_deferred_access_gc = 79
gt_ggc_e_22VEC_die_arg_entry_base = 227
gt_ggc_e_22VEC_ipa_edge_args_t_gc = 156
gt_ggc_e_22VEC_ivarref_entry_base = 12
gt_ggc_e_22VEC_macinfo_entry_base = 231
gt_ggc_e_22VEC_prot_list_entry_gc = 14
gt_ggc_e_22VEC_pubname_entry_base = 234
gt_ggc_e_22cached_dw_loc_list_def = 223
gt_ggc_e_22cp_default_arg_entry_d = 71
gt_ggc_e_22dw_val_vms_delta_union = 246
gt_ggc_e_22gfc_st_parameter_field = 45
gt_ggc_e_22gimple_statement_catch = 188
gt_ggc_e_22pending_redefinition_d = 52
gt_ggc_e_22rtx_def_float_truncate = 439
gt_ggc_e_22rtx_def_unsigned_float = 436
gt_ggc_e_23VEC_call_site_record_gc = 333
gt_ggc_e_23VEC_cp_class_binding_gc = 133
gt_ggc_e_23VEC_cp_label_binding_gc = 130
gt_ggc_e_23VEC_eh_landing_pad_base = 206
gt_ggc_e_23VEC_ident_data_tuple_gc = 20
gt_ggc_e_23VEC_incomplete_var_base = 85
gt_ggc_e_23VEC_ltrans_partition_gc = 28
gt_ggc_e_23VEC_varpool_node_ptr_gc = 273
gt_ggc_e_23constant_descriptor_rtx = 545
gt_ggc_e_23die_symbol_or_type_node = 235
gt_ggc_e_23gimple_statement_eh_mnt = 186
gt_ggc_e_23rtx_def_strict_low_part = 502
gt_ggc_e_23rtx_def_symbol_subunion = 543
gt_ggc_e_23rtx_def_unspec_volatile = 523
gt_ggc_e_23temp_slot_address_entry = 202
gt_ggc_e_24VEC_alias_set_entry_base = 266
gt_ggc_e_24VEC_c_goto_bindings_p_gc = 2
gt_ggc_e_24VEC_cgraph_node_ptr_base = 278
gt_ggc_e_24VEC_constructor_elt_base = 382
gt_ggc_e_24VEC_cxx_saved_binding_gc = 136
gt_ggc_e_24VEC_deferred_access_base = 80
gt_ggc_e_24VEC_ipa_edge_args_t_base = 157
gt_ggc_e_24VEC_ipa_replace_map_p_gc = 281
gt_ggc_e_24VEC_mem_addr_template_gc = 166
gt_ggc_e_24VEC_prot_list_entry_base = 15
gt_ggc_e_24basic_block_il_dependent = 299
gt_ggc_e_24constant_descriptor_tree = 268
gt_ggc_e_24gimple_statement_eh_ctrl = 184
gt_ggc_e_24gimple_statement_omp_for = 178
gt_ggc_e_24lazy_hex_fp_value_struct = 0
gt_ggc_e_24tree_optimization_option = 348
gt_ggc_e_24tree_statement_list_node = 350
gt_ggc_e_24types_used_by_vars_entry = 315
gt_ggc_e_25VEC_call_site_record_base = 334
gt_ggc_e_25VEC_cp_class_binding_base = 134
gt_ggc_e_25VEC_cp_label_binding_base = 131
gt_ggc_e_25VEC_deferred_locations_gc = 249
gt_ggc_e_25VEC_ident_data_tuple_base = 21
gt_ggc_e_25VEC_ltrans_partition_base = 29
gt_ggc_e_25VEC_varpool_node_ptr_base = 274
gt_ggc_e_25cgraph_indirect_call_info = 270
gt_ggc_e_25deferred_locations_struct = 251
gt_ggc_e_25dw_ranges_by_label_struct = 239
gt_ggc_e_25gimple_statement_omp_task = 176
gt_ggc_e_25gimple_statement_with_ops = 195
gt_ggc_e_25qualified_typedef_usage_s = 115
gt_ggc_e_25tree_argument_pack_select = 118
gt_ggc_e_26VEC_c_goto_bindings_p_base = 3
gt_ggc_e_26VEC_cxx_saved_binding_base = 137
gt_ggc_e_26VEC_ipa_replace_map_p_base = 282
gt_ggc_e_26VEC_mem_addr_template_base = 167
gt_ggc_e_26eh_region_u_must_not_throw = 210
gt_ggc_e_26gimple_statement_eh_filter = 187
gt_ggc_e_26gimple_type_leader_entry_s = 170
gt_ggc_e_26rtx_def_debug_implicit_ptr = 401
gt_ggc_e_26rtx_def_unsigned_sat_fract = 431
gt_ggc_e_26tree_translation_unit_decl = 352
gt_ggc_e_27VEC_cp_default_arg_entry_gc = 69
gt_ggc_e_27VEC_deferred_locations_base = 250
gt_ggc_e_27VEC_pending_redefinition_gc = 50
gt_ggc_e_27cgraph_node_set_element_def = 276
gt_ggc_e_27gimple_statement_omp_single = 173
gt_ggc_e_28VEC_deferred_access_check_gc = 88
gt_ggc_e_28dw_separate_line_info_struct = 242
gt_ggc_e_28varpool_node_set_element_def = 272
gt_ggc_e_29VEC_cp_default_arg_entry_base = 70
gt_ggc_e_29VEC_pending_redefinition_base = 51
gt_ggc_e_29cp_unparsed_functions_entry_d = 68
gt_ggc_e_29gimple_statement_omp_continue = 174
gt_ggc_e_29gimple_statement_omp_critical = 180
gt_ggc_e_29gimple_statement_omp_parallel = 177
gt_ggc_e_29gimple_statement_omp_sections = 175
gt_ggc_e_30VEC_deferred_access_check_base = 89
gt_ggc_e_30gimple_statement_with_ops_base = 196
gt_ggc_e_30rtx_def_unsigned_fract_convert = 433
gt_ggc_e_32VEC_qualified_typedef_usage_t_gc = 113
gt_ggc_e_32gimple_statement_omp_atomic_load = 172
gt_ggc_e_32gimple_statement_with_memory_ops = 193
gt_ggc_e_33gimple_statement_omp_atomic_store = 171
gt_ggc_e_34VEC_cp_unparsed_functions_entry_gc = 66
gt_ggc_e_34VEC_qualified_typedef_usage_t_base = 114
gt_ggc_e_36VEC_cp_unparsed_functions_entry_base = 67
gt_ggc_e_37gimple_statement_with_memory_ops_base = 194
gt_ggc_e_3JCF = 42
gt_ggc_e_4htab = 556
gt_ggc_e_4loop = 307
gt_ggc_e_5CPool = 41
gt_ggc_e_5loops = 317
gt_ggc_e_6answer = 586
gt_ggc_e_6rtl_eh = 332
gt_ggc_e_7c_scope = 5
gt_ggc_e_7c_token = 10
gt_ggc_e_7globals = 144
gt_ggc_e_7ipa_ref = 293
gt_ggc_e_7rtx_def = 577
gt_ggc_e_7section = 574
gt_ggc_e_7tinfo_s = 147
gt_ggc_e_8c_parser = 9
gt_ggc_e_8cp_lexer = 73
gt_ggc_e_8cp_token = 74
gt_ggc_e_8edge_def = 570
gt_ggc_e_8function = 399
gt_ggc_e_8line_map = 592
gt_ggc_e_8rtl_data = 321
gt_ggc_e_8tree_exp = 378
gt_ggc_e_8tree_int = 64
gt_ggc_e_8tree_map = 344
gt_ggc_e_8tree_vec = 384
gt_ggc_e_8typeinfo = 262
gt_ggc_e_9c_binding = 6
gt_ggc_e_9cp_parser = 65
gt_ggc_e_9cpp_macro = 587
gt_ggc_e_9cpp_token = 590
gt_ggc_e_9eh_status = 319
gt_ggc_e_9elab_info = 149
gt_ggc_e_9gimple_df = 331
gt_ggc_e_9imp_entry = 25
gt_ggc_e_9lang_decl = 365
gt_ggc_e_9lang_type = 369
gt_ggc_e_9line_maps = 591
gt_ggc_e_9loop_exit = 308
gt_ggc_e_9mem_attrs = 551
gt_ggc_e_9opt_stack = 49
gt_ggc_e_9phi_arg_d = 374
gt_ggc_e_9reg_attrs = 550
gt_ggc_e_9rtvec_def = 576
gt_ggc_e_9temp_slot = 330
gt_ggc_e_9tree_base = 394
gt_ggc_e_9tree_list = 385
gt_ggc_e_9tree_node = 584
gt_ggc_e_9tree_type = 368
gt_ggc_e_9type_hash = 199
gt_ggc_e_9var_ann_d = 360
gt_types_enum_last = 643
id_kind = 7
itk_char = 0
itk_int = 5
itk_int128 = 11
itk_long = 7
itk_long_long = 9
itk_none = 13
itk_short = 3
itk_signed_char = 1
itk_unsigned_char = 2
itk_unsigned_int = 6
itk_unsigned_int128 = 12
itk_unsigned_long = 8
itk_unsigned_long_long = 10
itk_unsigned_short = 4
lang_c = 0
lang_cplusplus = 1
lang_decl = 13
lang_java = 2
lang_type = 14
libcall = 1
lk_external = 2
lk_internal = 1
lk_none = 0
loop = 6
loop_1_byte = 5
lv_addressof = 3
lv_asm = 4
lv_assign = 0
lv_decrement = 2
lv_increment = 1
no_graph = 0
no_stringop = 0
none_type = 0
normalized_C = 1
normalized_KC = 0
normalized_identifier_C = 2
normalized_none = 3
omp_clause_kind = 15
pp_after = 2
pp_before = 1
pp_none = 0
ptrmemfunc_vbit_in_delta = 1
ptrmemfunc_vbit_in_pfn = 0
r_kind = 4
record_type = 1
rep_prefix_1_byte = 2
rep_prefix_4_byte = 3
rep_prefix_8_byte = 4
rvc_inf = 2
rvc_nan = 3
rvc_normal = 1
rvc_zero = 0
s_kind = 3
sc_auto = 1
sc_extern = 4
sc_mutable = 5
sc_none = 0
sc_register = 2
sc_static = 3
sfk_base_destructor = 8
sfk_complete_destructor = 7
sfk_constructor = 1
sfk_conversion = 10
sfk_copy_assignment = 4
sfk_copy_constructor = 2
sfk_deleting_destructor = 9
sfk_destructor = 6
sfk_move_assignment = 5
sfk_move_constructor = 3
sfk_none = 0
sk_block = 0
sk_catch = 3
sk_class = 6
sk_cleanup = 1
sk_for = 4
sk_function_parms = 5
sk_namespace = 8
sk_omp = 11
sk_scoped_enum = 7
sk_template_parms = 9
sk_template_spec = 10
sk_try = 2
ssa_name_kind = 10
ssa_op_iter_def = 3
ssa_op_iter_none = 0
ssa_op_iter_tree = 1
ssa_op_iter_use = 2
t_kind = 1
tcc_binary = 7
tcc_comparison = 5
tcc_constant = 1
tcc_declaration = 3
tcc_exceptional = 0
tcc_expression = 10
tcc_reference = 4
tcc_statement = 8
tcc_type = 2
tcc_unary = 6
tcc_vl_exp = 9
tf_conv = 64
tf_error = 1
tf_ignore_bad_quals = 4
tf_keep_type_decl = 8
tf_no_access_control = 128
tf_none = 0
tf_ptrmem_ok = 16
tf_user = 32
tf_warning = 2
tf_warning_or_error = 3
ts_current = 0
ts_global = 1
ts_within_enclosing_non_class = 2
tsk_excessive_parms = 3
tsk_expl_inst = 7
tsk_expl_spec = 6
tsk_insufficient_parms = 4
tsk_invalid_expl_inst = 2
tsk_invalid_member_spec = 1
tsk_none = 0
tsk_template = 5
typename_type = 5
union_type = 3
unrolled_loop = 7
vcg = 1
vec_kind = 8
x_kind = 12

class _G_fpos_t(Structure):
    pass
__off_t = c_long
class __mbstate_t(Structure):
    pass
class N11__mbstate_t3DOT_2E(Union):
    pass
N11__mbstate_t3DOT_2E._fields_ = [
    ('__wch', c_uint),
    ('__wchb', c_char * 4),
]
__mbstate_t._fields_ = [
    ('__count', c_int),
    ('__value', N11__mbstate_t3DOT_2E),
]
_G_fpos_t._fields_ = [
    ('__pos', __off_t),
    ('__state', __mbstate_t),
]
class _G_fpos64_t(Structure):
    pass
__quad_t = c_longlong
__off64_t = __quad_t
_G_fpos64_t._pack_ = 4
_G_fpos64_t._fields_ = [
    ('__pos', __off64_t),
    ('__state', __mbstate_t),
]
_G_int16_t = c_short
_G_int32_t = c_int
_G_uint16_t = c_ushort
_G_uint32_t = c_uint
__s8 = c_byte
__u8 = c_ubyte
__s16 = c_short
__u16 = c_ushort
__s32 = c_int
__u32 = c_uint
__s64 = c_longlong
__u64 = c_ulonglong
umode_t = c_ushort
streamoff = c_long
ptrdiff_t = c_int
streamsize = ptrdiff_t
# class allocator<wchar_t>(Structure):
#     pass
# allocator<wchar_t>._fields_ = [
# ]
# class allocator<char>(Structure):
#     pass
# allocator<char>._fields_ = [
# ]
# class char_traits<char>(Structure):
#     pass
# char_traits<char>._fields_ = [
# ]
# class char_traits<wchar_t>(Structure):
#     pass
# char_traits<wchar_t>._fields_ = [
# ]
# class basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >(Structure):
#     pass
# basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >._fields_ = [
# ]
# class basic_string<char,std::char_traits<char>,std::allocator<char> >(Structure):
#     pass
# basic_string<char,std::char_traits<char>,std::allocator<char> >._fields_ = [
# ]
# string = basic_string<char,std::char_traits<char>,std::allocator<char> >
# wstring = basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
# class ios_base(Structure):
#     pass
# ios_base._fields_ = [
# ]
# class basic_ios<wchar_t,std::char_traits<wchar_t> >(Structure):
#     pass
# basic_ios<wchar_t,std::char_traits<wchar_t> >._fields_ = [
# ]
# class basic_ios<char,std::char_traits<char> >(Structure):
#     pass
# basic_ios<char,std::char_traits<char> >._fields_ = [
# ]
# class basic_streambuf<char,std::char_traits<char> >(Structure):
#     pass
# basic_streambuf<char,std::char_traits<char> >._fields_ = [
# ]
# class basic_streambuf<wchar_t,std::char_traits<wchar_t> >(Structure):
#     pass
# basic_streambuf<wchar_t,std::char_traits<wchar_t> >._fields_ = [
# ]
# class basic_istream<wchar_t,std::char_traits<wchar_t> >(Structure):
#     pass
# basic_istream<wchar_t,std::char_traits<wchar_t> >._fields_ = [
# ]
# class basic_istream<char,std::char_traits<char> >(Structure):
#     pass
# basic_istream<char,std::char_traits<char> >._fields_ = [
# ]
# class basic_ostream<wchar_t,std::char_traits<wchar_t> >(Structure):
#     pass
# basic_ostream<wchar_t,std::char_traits<wchar_t> >._fields_ = [
# ]
# class basic_ostream<char,std::char_traits<char> >(Structure):
#     pass
# basic_ostream<char,std::char_traits<char> >._fields_ = [
# ]
# class basic_iostream<char,std::char_traits<char> >(Structure):
#     pass
# basic_iostream<char,std::char_traits<char> >._fields_ = [
# ]
# class basic_iostream<wchar_t,std::char_traits<wchar_t> >(Structure):
#     pass
# basic_iostream<wchar_t,std::char_traits<wchar_t> >._fields_ = [
# ]
# class basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >(Structure):
#     pass
# basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >._fields_ = [
# ]
# class basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >(Structure):
#     pass
# basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >._fields_ = [
# ]
# class basic_istringstream<char,std::char_traits<char>,std::allocator<char> >(Structure):
#     pass
# basic_istringstream<char,std::char_traits<char>,std::allocator<char> >._fields_ = [
# ]
# class basic_istringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >(Structure):
#     pass
# basic_istringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >._fields_ = [
# ]
# class basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >(Structure):
#     pass
# basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >._fields_ = [
# ]
# class basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >(Structure):
#     pass
# basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >._fields_ = [
# ]
# class basic_stringstream<char,std::char_traits<char>,std::allocator<char> >(Structure):
#     pass
# basic_stringstream<char,std::char_traits<char>,std::allocator<char> >._fields_ = [
# ]
# class basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >(Structure):
#     pass
# basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >._fields_ = [
# ]
# class basic_filebuf<char,std::char_traits<char> >(Structure):
#     pass
# basic_filebuf<char,std::char_traits<char> >._fields_ = [
# ]
# class basic_filebuf<wchar_t,std::char_traits<wchar_t> >(Structure):
#     pass
# basic_filebuf<wchar_t,std::char_traits<wchar_t> >._fields_ = [
# ]
# class basic_ifstream<char,std::char_traits<char> >(Structure):
#     pass
# basic_ifstream<char,std::char_traits<char> >._fields_ = [
# ]
# class basic_ifstream<wchar_t,std::char_traits<wchar_t> >(Structure):
#     pass
# basic_ifstream<wchar_t,std::char_traits<wchar_t> >._fields_ = [
# ]
# class basic_ofstream<wchar_t,std::char_traits<wchar_t> >(Structure):
#     pass
# basic_ofstream<wchar_t,std::char_traits<wchar_t> >._fields_ = [
# ]
# class basic_ofstream<char,std::char_traits<char> >(Structure):
#     pass
# basic_ofstream<char,std::char_traits<char> >._fields_ = [
# ]
# class basic_fstream<char,std::char_traits<char> >(Structure):
#     pass
# basic_fstream<char,std::char_traits<char> >._fields_ = [
# ]
# class basic_fstream<wchar_t,std::char_traits<wchar_t> >(Structure):
#     pass
# basic_fstream<wchar_t,std::char_traits<wchar_t> >._fields_ = [
# ]
# ios = basic_ios<char,std::char_traits<char> >
# streambuf = basic_streambuf<char,std::char_traits<char> >
# istream = basic_istream<char,std::char_traits<char> >
# ostream = basic_ostream<char,std::char_traits<char> >
# iostream = basic_iostream<char,std::char_traits<char> >
# stringbuf = basic_stringbuf<char,std::char_traits<char>,std::allocator<char> >
# istringstream = basic_istringstream<char,std::char_traits<char>,std::allocator<char> >
# ostringstream = basic_ostringstream<char,std::char_traits<char>,std::allocator<char> >
# stringstream = basic_stringstream<char,std::char_traits<char>,std::allocator<char> >
# filebuf = basic_filebuf<char,std::char_traits<char> >
# ifstream = basic_ifstream<char,std::char_traits<char> >
# ofstream = basic_ofstream<char,std::char_traits<char> >
# fstream = basic_fstream<char,std::char_traits<char> >
# wios = basic_ios<wchar_t,std::char_traits<wchar_t> >
# wstreambuf = basic_streambuf<wchar_t,std::char_traits<wchar_t> >
# wistream = basic_istream<wchar_t,std::char_traits<wchar_t> >
# wostream = basic_ostream<wchar_t,std::char_traits<wchar_t> >
# wiostream = basic_iostream<wchar_t,std::char_traits<wchar_t> >
# wstringbuf = basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
# wistringstream = basic_istringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
# wostringstream = basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
# wstringstream = basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t> >
# wfilebuf = basic_filebuf<wchar_t,std::char_traits<wchar_t> >
# wifstream = basic_ifstream<wchar_t,std::char_traits<wchar_t> >
# wofstream = basic_ofstream<wchar_t,std::char_traits<wchar_t> >
# wfstream = basic_fstream<wchar_t,std::char_traits<wchar_t> >

# values for unnamed enumeration
Lmid_t = c_long
class Dl_info(Structure):
    pass
Dl_info._fields_ = [
    ('dli_fname', STRING),
    ('dli_fbase', c_void_p),
    ('dli_sname', STRING),
    ('dli_saddr', c_void_p),
]

# values for unnamed enumeration

# values for unnamed enumeration
class Dl_serpath(Structure):
    pass
Dl_serpath._fields_ = [
    ('dls_name', STRING),
    ('dls_flags', c_uint),
]
class Dl_serinfo(Structure):
    pass
size_t = c_uint
Dl_serinfo._fields_ = [
    ('dls_size', size_t),
    ('dls_cnt', c_uint),
    ('dls_serpath', Dl_serpath * 1),
]
error_t = c_int
mp_limb_t = c_ulong
mp_limb_signed_t = c_long
mp_bitcnt_t = c_ulong
class __mpz_struct(Structure):
    pass
__mpz_struct._fields_ = [
    ('_mp_alloc', c_int),
    ('_mp_size', c_int),
    ('_mp_d', POINTER(mp_limb_t)),
]
MP_INT = __mpz_struct
mpz_t = __mpz_struct * 1
mp_ptr = POINTER(mp_limb_t)
mp_srcptr = POINTER(mp_limb_t)
mp_size_t = c_long
mp_exp_t = c_long
class __mpq_struct(Structure):
    pass
__mpq_struct._fields_ = [
    ('_mp_num', __mpz_struct),
    ('_mp_den', __mpz_struct),
]
MP_RAT = __mpq_struct
mpq_t = __mpq_struct * 1
class __mpf_struct(Structure):
    pass
__mpf_struct._fields_ = [
    ('_mp_prec', c_int),
    ('_mp_size', c_int),
    ('_mp_exp', mp_exp_t),
    ('_mp_d', POINTER(mp_limb_t)),
]
mpf_t = __mpf_struct * 1

# values for enumeration 'gmp_randalg_t'
gmp_randalg_t = c_int # enum
class N22__gmp_randstate_struct4DOT_68E(Union):
    pass
N22__gmp_randstate_struct4DOT_68E._fields_ = [
    ('_mp_lc', c_void_p),
]
class __gmp_randstate_struct(Structure):
    pass
__gmp_randstate_struct._fields_ = [
    ('_mp_seed', mpz_t),
    ('_mp_alg', gmp_randalg_t),
    ('_mp_algdata', N22__gmp_randstate_struct4DOT_68E),
]
gmp_randstate_t = __gmp_randstate_struct * 1
mpz_srcptr = POINTER(__mpz_struct)
mpz_ptr = POINTER(__mpz_struct)
mpf_srcptr = POINTER(__mpf_struct)
mpf_ptr = POINTER(__mpf_struct)
mpq_srcptr = POINTER(__mpq_struct)
mpq_ptr = POINTER(__mpq_struct)

# values for unnamed enumeration
__kernel_ino_t = c_ulong
__kernel_mode_t = c_ushort
__kernel_nlink_t = c_ushort
__kernel_off_t = c_long
__kernel_pid_t = c_int
__kernel_ipc_pid_t = c_ushort
__kernel_uid_t = c_ushort
__kernel_gid_t = c_ushort
__kernel_size_t = c_uint
__kernel_ssize_t = c_int
__kernel_ptrdiff_t = c_int
__kernel_time_t = c_long
__kernel_suseconds_t = c_long
__kernel_clock_t = c_long
__kernel_timer_t = c_int
__kernel_clockid_t = c_int
__kernel_daddr_t = c_int
__kernel_caddr_t = STRING
__kernel_uid16_t = c_ushort
__kernel_gid16_t = c_ushort
__kernel_uid32_t = c_uint
__kernel_gid32_t = c_uint
__kernel_old_uid_t = c_ushort
__kernel_old_gid_t = c_ushort
__kernel_old_dev_t = c_ushort
__kernel_loff_t = c_longlong
class __kernel_fsid_t(Structure):
    pass
__kernel_fsid_t._fields_ = [
    ('val', c_int * 2),
]
class _fpx_sw_bytes(Structure):
    pass
_fpx_sw_bytes._pack_ = 4
_fpx_sw_bytes._fields_ = [
    ('magic1', __u32),
    ('extended_size', __u32),
    ('xstate_bv', __u64),
    ('xstate_size', __u32),
    ('padding', __u32 * 7),
]
class _fpreg(Structure):
    pass
_fpreg._fields_ = [
    ('significand', c_ushort * 4),
    ('exponent', c_ushort),
]
class _fpxreg(Structure):
    pass
_fpxreg._fields_ = [
    ('significand', c_ushort * 4),
    ('exponent', c_ushort),
    ('padding', c_ushort * 3),
]
class _xmmreg(Structure):
    pass
_xmmreg._fields_ = [
    ('element', c_ulong * 4),
]
class _fpstate(Structure):
    pass
class N8_fpstate4DOT_51E(Union):
    pass
N8_fpstate4DOT_51E._fields_ = [
    ('padding2', c_ulong * 12),
    ('sw_reserved', _fpx_sw_bytes),
]
_fpstate._anonymous_ = ['_0']
_fpstate._fields_ = [
    ('cw', c_ulong),
    ('sw', c_ulong),
    ('tag', c_ulong),
    ('ipoff', c_ulong),
    ('cssel', c_ulong),
    ('dataoff', c_ulong),
    ('datasel', c_ulong),
    ('_st', _fpreg * 8),
    ('status', c_ushort),
    ('magic', c_ushort),
    ('_fxsr_env', c_ulong * 6),
    ('mxcsr', c_ulong),
    ('reserved', c_ulong),
    ('_fxsr_st', _fpxreg * 8),
    ('_xmm', _xmmreg * 8),
    ('padding1', c_ulong * 44),
    ('_0', N8_fpstate4DOT_51E),
]
class sigcontext(Structure):
    pass
sigcontext._fields_ = [
    ('gs', c_ushort),
    ('__gsh', c_ushort),
    ('fs', c_ushort),
    ('__fsh', c_ushort),
    ('es', c_ushort),
    ('__esh', c_ushort),
    ('ds', c_ushort),
    ('__dsh', c_ushort),
    ('edi', c_ulong),
    ('esi', c_ulong),
    ('ebp', c_ulong),
    ('esp', c_ulong),
    ('ebx', c_ulong),
    ('edx', c_ulong),
    ('ecx', c_ulong),
    ('eax', c_ulong),
    ('trapno', c_ulong),
    ('err', c_ulong),
    ('eip', c_ulong),
    ('cs', c_ushort),
    ('__csh', c_ushort),
    ('eflags', c_ulong),
    ('esp_at_signal', c_ulong),
    ('ss', c_ushort),
    ('__ssh', c_ushort),
    ('fpstate', POINTER(_fpstate)),
    ('oldmask', c_ulong),
    ('cr2', c_ulong),
]
class _xsave_hdr(Structure):
    pass
_xsave_hdr._pack_ = 4
_xsave_hdr._fields_ = [
    ('xstate_bv', __u64),
    ('reserved1', __u64 * 2),
    ('reserved2', __u64 * 5),
]
class _ymmh_state(Structure):
    pass
_ymmh_state._fields_ = [
    ('ymmh_space', __u32 * 64),
]
class _xstate(Structure):
    pass
_xstate._fields_ = [
    ('fpstate', _fpstate),
    ('xstate_hdr', _xsave_hdr),
    ('ymmh', _ymmh_state),
]

# values for unnamed enumeration

# values for unnamed enumeration

# values for unnamed enumeration
class flock(Structure):
    pass
__pid_t = c_int
flock._fields_ = [
    ('l_type', c_short),
    ('l_whence', c_short),
    ('l_start', __off_t),
    ('l_len', __off_t),
    ('l_pid', __pid_t),
]
class flock64(Structure):
    pass
flock64._pack_ = 4
flock64._fields_ = [
    ('l_type', c_short),
    ('l_whence', c_short),
    ('l_start', __off64_t),
    ('l_len', __off64_t),
    ('l_pid', __pid_t),
]

# values for enumeration '__pid_type'
__pid_type = c_int # enum
class f_owner_ex(Structure):
    pass
f_owner_ex._fields_ = [
    ('type', __pid_type),
    ('pid', __pid_t),
]
pthread_t = c_ulong
class pthread_attr_t(Union):
    pass
pthread_attr_t._fields_ = [
    ('__size', c_char * 36),
    ('__align', c_long),
]
class __pthread_internal_slist(Structure):
    pass
__pthread_internal_slist._fields_ = [
    ('__next', POINTER(__pthread_internal_slist)),
]
__pthread_slist_t = __pthread_internal_slist
class __pthread_mutex_s(Structure):
    pass
class N15pthread_mutex_t17__pthread_mutex_s4DOT_12E(Union):
    pass
N15pthread_mutex_t17__pthread_mutex_s4DOT_12E._fields_ = [
    ('__spins', c_int),
    ('__list', __pthread_slist_t),
]
__pthread_mutex_s._anonymous_ = ['_0']
__pthread_mutex_s._fields_ = [
    ('__lock', c_int),
    ('__count', c_uint),
    ('__owner', c_int),
    ('__kind', c_int),
    ('__nusers', c_uint),
    ('_0', N15pthread_mutex_t17__pthread_mutex_s4DOT_12E),
]
class pthread_mutex_t(Union):
    pass
pthread_mutex_t._fields_ = [
    ('__data', __pthread_mutex_s),
    ('__size', c_char * 24),
    ('__align', c_long),
]
class pthread_mutexattr_t(Union):
    pass
pthread_mutexattr_t._fields_ = [
    ('__size', c_char * 4),
    ('__align', c_long),
]
class N14pthread_cond_t4DOT_15E(Structure):
    pass
N14pthread_cond_t4DOT_15E._pack_ = 4
N14pthread_cond_t4DOT_15E._fields_ = [
    ('__lock', c_int),
    ('__futex', c_uint),
    ('__total_seq', c_ulonglong),
    ('__wakeup_seq', c_ulonglong),
    ('__woken_seq', c_ulonglong),
    ('__mutex', c_void_p),
    ('__nwaiters', c_uint),
    ('__broadcast_seq', c_uint),
]
class pthread_cond_t(Union):
    pass
pthread_cond_t._pack_ = 4
pthread_cond_t._fields_ = [
    ('__data', N14pthread_cond_t4DOT_15E),
    ('__size', c_char * 48),
    ('__align', c_longlong),
]
class pthread_condattr_t(Union):
    pass
pthread_condattr_t._fields_ = [
    ('__size', c_char * 4),
    ('__align', c_long),
]
pthread_key_t = c_uint
pthread_once_t = c_int
class N16pthread_rwlock_t4DOT_18E(Structure):
    pass
N16pthread_rwlock_t4DOT_18E._fields_ = [
    ('__lock', c_int),
    ('__nr_readers', c_uint),
    ('__readers_wakeup', c_uint),
    ('__writer_wakeup', c_uint),
    ('__nr_readers_queued', c_uint),
    ('__nr_writers_queued', c_uint),
    ('__flags', c_ubyte),
    ('__shared', c_ubyte),
    ('__pad1', c_ubyte),
    ('__pad2', c_ubyte),
    ('__writer', c_int),
]
class pthread_rwlock_t(Union):
    pass
pthread_rwlock_t._fields_ = [
    ('__data', N16pthread_rwlock_t4DOT_18E),
    ('__size', c_char * 32),
    ('__align', c_long),
]
class pthread_rwlockattr_t(Union):
    pass
pthread_rwlockattr_t._fields_ = [
    ('__size', c_char * 8),
    ('__align', c_long),
]
pthread_spinlock_t = c_int
class pthread_barrier_t(Union):
    pass
pthread_barrier_t._fields_ = [
    ('__size', c_char * 20),
    ('__align', c_long),
]
class pthread_barrierattr_t(Union):
    pass
pthread_barrierattr_t._fields_ = [
    ('__size', c_char * 4),
    ('__align', c_int),
]

# values for enumeration '__rlimit_resource'
__rlimit_resource = c_int # enum
__rlim_t = c_ulong
rlim_t = __rlim_t
__u_quad_t = c_ulonglong
__rlim64_t = __u_quad_t
rlim64_t = __rlim64_t
class rlimit(Structure):
    pass
rlimit._fields_ = [
    ('rlim_cur', rlim_t),
    ('rlim_max', rlim_t),
]
class rlimit64(Structure):
    pass
rlimit64._pack_ = 4
rlimit64._fields_ = [
    ('rlim_cur', rlim64_t),
    ('rlim_max', rlim64_t),
]

# values for enumeration '__rusage_who'
__rusage_who = c_int # enum
class rusage(Structure):
    pass
class timeval(Structure):
    pass
__time_t = c_long
__suseconds_t = c_long
timeval._fields_ = [
    ('tv_sec', __time_t),
    ('tv_usec', __suseconds_t),
]
rusage._fields_ = [
    ('ru_utime', timeval),
    ('ru_stime', timeval),
    ('ru_maxrss', c_long),
    ('ru_ixrss', c_long),
    ('ru_idrss', c_long),
    ('ru_isrss', c_long),
    ('ru_minflt', c_long),
    ('ru_majflt', c_long),
    ('ru_nswap', c_long),
    ('ru_inblock', c_long),
    ('ru_oublock', c_long),
    ('ru_msgsnd', c_long),
    ('ru_msgrcv', c_long),
    ('ru_nsignals', c_long),
    ('ru_nvcsw', c_long),
    ('ru_nivcsw', c_long),
]

# values for enumeration '__priority_which'
__priority_which = c_int # enum
class sigaction(Structure):
    pass
class N9sigaction4DOT_48E(Union):
    pass
__sighandler_t = CFUNCTYPE(None, c_int)
class siginfo(Structure):
    pass
siginfo_t = siginfo
N9sigaction4DOT_48E._fields_ = [
    ('sa_handler', __sighandler_t),
    ('sa_sigaction', CFUNCTYPE(None, c_int, POINTER(siginfo_t), c_void_p)),
]
class __sigset_t(Structure):
    pass
__sigset_t._fields_ = [
    ('__val', c_ulong * 32),
]
sigaction._fields_ = [
    ('__sigaction_handler', N9sigaction4DOT_48E),
    ('sa_mask', __sigset_t),
    ('sa_flags', c_int),
    ('sa_restorer', CFUNCTYPE(None)),
]
class sigval(Union):
    pass
sigval._fields_ = [
    ('sival_int', c_int),
    ('sival_ptr', c_void_p),
]
sigval_t = sigval
class N7siginfo4DOT_30E(Union):
    pass
class N7siginfo4DOT_304DOT_31E(Structure):
    pass
__uid_t = c_uint
N7siginfo4DOT_304DOT_31E._fields_ = [
    ('si_pid', __pid_t),
    ('si_uid', __uid_t),
]
class N7siginfo4DOT_304DOT_32E(Structure):
    pass
N7siginfo4DOT_304DOT_32E._fields_ = [
    ('si_tid', c_int),
    ('si_overrun', c_int),
    ('si_sigval', sigval_t),
]
class N7siginfo4DOT_304DOT_33E(Structure):
    pass
N7siginfo4DOT_304DOT_33E._fields_ = [
    ('si_pid', __pid_t),
    ('si_uid', __uid_t),
    ('si_sigval', sigval_t),
]
class N7siginfo4DOT_304DOT_34E(Structure):
    pass
__clock_t = c_long
N7siginfo4DOT_304DOT_34E._fields_ = [
    ('si_pid', __pid_t),
    ('si_uid', __uid_t),
    ('si_status', c_int),
    ('si_utime', __clock_t),
    ('si_stime', __clock_t),
]
class N7siginfo4DOT_304DOT_35E(Structure):
    pass
N7siginfo4DOT_304DOT_35E._fields_ = [
    ('si_addr', c_void_p),
]
class N7siginfo4DOT_304DOT_36E(Structure):
    pass
N7siginfo4DOT_304DOT_36E._fields_ = [
    ('si_band', c_long),
    ('si_fd', c_int),
]
N7siginfo4DOT_30E._fields_ = [
    ('_pad', c_int * 29),
    ('_kill', N7siginfo4DOT_304DOT_31E),
    ('_timer', N7siginfo4DOT_304DOT_32E),
    ('_rt', N7siginfo4DOT_304DOT_33E),
    ('_sigchld', N7siginfo4DOT_304DOT_34E),
    ('_sigfault', N7siginfo4DOT_304DOT_35E),
    ('_sigpoll', N7siginfo4DOT_304DOT_36E),
]
siginfo._fields_ = [
    ('si_signo', c_int),
    ('si_errno', c_int),
    ('si_code', c_int),
    ('_sifields', N7siginfo4DOT_30E),
]

# values for unnamed enumeration

# values for unnamed enumeration

# values for unnamed enumeration

# values for unnamed enumeration

# values for unnamed enumeration

# values for unnamed enumeration

# values for unnamed enumeration

# values for unnamed enumeration
class sigevent(Structure):
    pass
class N8sigevent4DOT_45E(Union):
    pass
class N8sigevent4DOT_454DOT_46E(Structure):
    pass
N8sigevent4DOT_454DOT_46E._fields_ = [
    ('_function', CFUNCTYPE(None, sigval_t)),
    ('_attribute', c_void_p),
]
N8sigevent4DOT_45E._fields_ = [
    ('_pad', c_int * 13),
    ('_tid', __pid_t),
    ('_sigev_thread', N8sigevent4DOT_454DOT_46E),
]
sigevent._fields_ = [
    ('sigev_value', sigval_t),
    ('sigev_signo', c_int),
    ('sigev_notify', c_int),
    ('_sigev_un', N8sigevent4DOT_45E),
]
sigevent_t = sigevent

# values for unnamed enumeration
__sig_atomic_t = c_int
class sigstack(Structure):
    pass
sigstack._fields_ = [
    ('ss_sp', c_void_p),
    ('ss_onstack', c_int),
]

# values for unnamed enumeration
class sigaltstack(Structure):
    pass
sigaltstack._fields_ = [
    ('ss_sp', c_void_p),
    ('ss_flags', c_int),
    ('ss_size', size_t),
]
stack_t = sigaltstack
class stat(Structure):
    pass
__dev_t = __u_quad_t
__ino_t = c_ulong
__mode_t = c_uint
__nlink_t = c_uint
__gid_t = c_uint
__blksize_t = c_long
__blkcnt_t = c_long
class timespec(Structure):
    pass
timespec._fields_ = [
    ('tv_sec', __time_t),
    ('tv_nsec', c_long),
]
stat._pack_ = 4
stat._fields_ = [
    ('st_dev', __dev_t),
    ('__pad1', c_ushort),
    ('st_ino', __ino_t),
    ('st_mode', __mode_t),
    ('st_nlink', __nlink_t),
    ('st_uid', __uid_t),
    ('st_gid', __gid_t),
    ('st_rdev', __dev_t),
    ('__pad2', c_ushort),
    ('st_size', __off_t),
    ('st_blksize', __blksize_t),
    ('st_blocks', __blkcnt_t),
    ('st_atim', timespec),
    ('st_mtim', timespec),
    ('st_ctim', timespec),
    ('__unused4', c_ulong),
    ('__unused5', c_ulong),
]
class stat64(Structure):
    pass
__blkcnt64_t = __quad_t
__ino64_t = __u_quad_t
stat64._pack_ = 4
stat64._fields_ = [
    ('st_dev', __dev_t),
    ('__pad1', c_uint),
    ('__st_ino', __ino_t),
    ('st_mode', __mode_t),
    ('st_nlink', __nlink_t),
    ('st_uid', __uid_t),
    ('st_gid', __gid_t),
    ('st_rdev', __dev_t),
    ('__pad2', c_uint),
    ('st_size', __off64_t),
    ('st_blksize', __blksize_t),
    ('st_blocks', __blkcnt64_t),
    ('st_atim', timespec),
    ('st_mtim', timespec),
    ('st_ctim', timespec),
    ('st_ino', __ino64_t),
]
__u_char = c_ubyte
__u_short = c_ushort
__u_int = c_uint
__u_long = c_ulong
__int8_t = c_byte
__uint8_t = c_ubyte
__int16_t = c_short
__uint16_t = c_ushort
__int32_t = c_int
__uint32_t = c_uint
__int64_t = c_longlong
__uint64_t = c_ulonglong
class __fsid_t(Structure):
    pass
__fsid_t._fields_ = [
    ('__val', c_int * 2),
]
__id_t = c_uint
__useconds_t = c_uint
__daddr_t = c_int
__swblk_t = c_long
__key_t = c_int
__clockid_t = c_int
__timer_t = c_void_p
__fsblkcnt_t = c_ulong
__fsblkcnt64_t = __u_quad_t
__fsfilcnt_t = c_ulong
__fsfilcnt64_t = __u_quad_t
__ssize_t = c_int
__loff_t = __off64_t
__qaddr_t = POINTER(__quad_t)
__caddr_t = STRING
__intptr_t = c_int
__socklen_t = c_uint
class iovec(Structure):
    pass
iovec._fields_ = [
    ('iov_base', c_void_p),
    ('iov_len', size_t),
]
class wait(Union):
    pass
class N4wait4DOT_22E(Structure):
    pass
N4wait4DOT_22E._fields_ = [
    ('__w_termsig', c_uint, 7),
    ('__w_coredump', c_uint, 1),
    ('__w_retcode', c_uint, 8),
    ('', c_uint, 16),
]
class N4wait4DOT_23E(Structure):
    pass
N4wait4DOT_23E._fields_ = [
    ('__w_stopval', c_uint, 8),
    ('__w_stopsig', c_uint, 8),
    ('', c_uint, 16),
]
wait._fields_ = [
    ('w_status', c_int),
    ('__wait_terminated', N4wait4DOT_22E),
    ('__wait_stopped', N4wait4DOT_23E),
]
__rlimit_resource_t = c_int
__rusage_who_t = c_int
__priority_which_t = c_int
sigset_t = __sigset_t
__fd_mask = c_long
class fd_set(Structure):
    pass
fd_set._fields_ = [
    ('fds_bits', __fd_mask * 32),
]
fd_mask = __fd_mask
class timezone(Structure):
    pass
timezone._fields_ = [
    ('tz_minuteswest', c_int),
    ('tz_dsttime', c_int),
]
__timezone_ptr_t = POINTER(timezone)

# values for enumeration '__itimer_which'
__itimer_which = c_int # enum
class itimerval(Structure):
    pass
itimerval._fields_ = [
    ('it_interval', timeval),
    ('it_value', timeval),
]
__itimer_which_t = c_int
class tms(Structure):
    pass
clock_t = __clock_t
tms._fields_ = [
    ('tms_utime', clock_t),
    ('tms_stime', clock_t),
    ('tms_cutime', clock_t),
    ('tms_cstime', clock_t),
]
u_char = __u_char
u_short = __u_short
u_int = __u_int
u_long = __u_long
quad_t = __quad_t
u_quad_t = __u_quad_t
fsid_t = __fsid_t
loff_t = __loff_t
ino_t = __ino_t
ino64_t = __ino64_t
dev_t = __dev_t
gid_t = __gid_t
mode_t = __mode_t
nlink_t = __nlink_t
uid_t = __uid_t
pid_t = __pid_t
id_t = __id_t
daddr_t = __daddr_t
caddr_t = __caddr_t
key_t = __key_t
useconds_t = __useconds_t
suseconds_t = __suseconds_t
ulong = c_ulong
ushort = c_ushort
uint = c_uint
int8_t = c_int8
int16_t = c_int16
int32_t = c_int32
int64_t = c_int64
u_int8_t = c_ubyte
u_int16_t = c_ushort
u_int32_t = c_uint
u_int64_t = c_ulonglong
register_t = c_int
blksize_t = __blksize_t
blkcnt_t = __blkcnt_t
fsblkcnt_t = __fsblkcnt_t
fsfilcnt_t = __fsfilcnt_t
blkcnt64_t = __blkcnt64_t
fsblkcnt64_t = __fsblkcnt64_t
fsfilcnt64_t = __fsfilcnt64_t
greg_t = c_int
gregset_t = greg_t * 19

# values for unnamed enumeration
class _libc_fpreg(Structure):
    pass
_libc_fpreg._fields_ = [
    ('significand', c_ushort * 4),
    ('exponent', c_ushort),
]
class _libc_fpstate(Structure):
    pass
_libc_fpstate._fields_ = [
    ('cw', c_ulong),
    ('sw', c_ulong),
    ('tag', c_ulong),
    ('ipoff', c_ulong),
    ('cssel', c_ulong),
    ('dataoff', c_ulong),
    ('datasel', c_ulong),
    ('_st', _libc_fpreg * 8),
    ('status', c_ulong),
]
fpregset_t = POINTER(_libc_fpstate)
class mcontext_t(Structure):
    pass
mcontext_t._fields_ = [
    ('gregs', gregset_t),
    ('fpregs', fpregset_t),
    ('oldmask', c_ulong),
    ('cr2', c_ulong),
]
class ucontext(Structure):
    pass
ucontext._fields_ = [
    ('uc_flags', c_ulong),
    ('uc_link', POINTER(ucontext)),
    ('uc_stack', stack_t),
    ('uc_mcontext', mcontext_t),
    ('uc_sigmask', __sigset_t),
    ('__fpregs_mem', _libc_fpstate),
]
ucontext_t = ucontext

# values for enumeration 'idtype_t'
idtype_t = c_int # enum
class imaxdiv_t(Structure):
    pass
imaxdiv_t._pack_ = 4
imaxdiv_t._fields_ = [
    ('quot', c_longlong),
    ('rem', c_longlong),
]
class _IO_jump_t(Structure):
    pass
_IO_jump_t._fields_ = [
]
_IO_lock_t = None
class _IO_marker(Structure):
    pass
class _IO_FILE(Structure):
    pass
_IO_marker._fields_ = [
    ('_next', POINTER(_IO_marker)),
    ('_sbuf', POINTER(_IO_FILE)),
    ('_pos', c_int),
]

# values for enumeration '__codecvt_result'
__codecvt_result = c_int # enum
_IO_FILE._pack_ = 4
_IO_FILE._fields_ = [
    ('_flags', c_int),
    ('_IO_read_ptr', STRING),
    ('_IO_read_end', STRING),
    ('_IO_read_base', STRING),
    ('_IO_write_base', STRING),
    ('_IO_write_ptr', STRING),
    ('_IO_write_end', STRING),
    ('_IO_buf_base', STRING),
    ('_IO_buf_end', STRING),
    ('_IO_save_base', STRING),
    ('_IO_backup_base', STRING),
    ('_IO_save_end', STRING),
    ('_markers', POINTER(_IO_marker)),
    ('_chain', POINTER(_IO_FILE)),
    ('_fileno', c_int),
    ('_flags2', c_int),
    ('_old_offset', __off_t),
    ('_cur_column', c_ushort),
    ('_vtable_offset', c_byte),
    ('_shortbuf', c_char * 1),
    ('_lock', POINTER(_IO_lock_t)),
    ('_offset', __off64_t),
    ('__pad1', c_void_p),
    ('__pad2', c_void_p),
    ('__pad3', c_void_p),
    ('__pad4', c_void_p),
    ('__pad5', size_t),
    ('_mode', c_int),
    ('_unused2', c_char * 40),
]
class _IO_FILE_plus(Structure):
    pass
_IO_FILE_plus._fields_ = [
]
__io_read_fn = CFUNCTYPE(__ssize_t, c_void_p, STRING, size_t)
__io_write_fn = CFUNCTYPE(__ssize_t, c_void_p, STRING, size_t)
__io_seek_fn = CFUNCTYPE(c_int, c_void_p, POINTER(__off64_t), c_int)
__io_close_fn = CFUNCTYPE(c_int, c_void_p)
cookie_read_function_t = __io_read_fn
cookie_write_function_t = __io_write_fn
cookie_seek_function_t = __io_seek_fn
cookie_close_function_t = __io_close_fn
class _IO_cookie_io_functions_t(Structure):
    pass
_IO_cookie_io_functions_t._fields_ = [
    ('read', POINTER(__io_read_fn)),
    ('write', POINTER(__io_write_fn)),
    ('seek', POINTER(__io_seek_fn)),
    ('close', POINTER(__io_close_fn)),
]
cookie_io_functions_t = _IO_cookie_io_functions_t
class _IO_cookie_file(Structure):
    pass
_IO_cookie_file._fields_ = [
]
class __kernel_fd_set(Structure):
    pass
__kernel_fd_set._fields_ = [
    ('fds_bits', c_ulong * 32),
]
__kernel_sighandler_t = CFUNCTYPE(None, c_int)
__kernel_key_t = c_int
__kernel_mqd_t = c_int
__le16 = __u16
__be16 = __u16
__le32 = __u32
__be32 = __u32
__le64 = __u64
__be64 = __u64
__sum16 = __u16
__wsum = __u32
class mallinfo(Structure):
    pass
mallinfo._fields_ = [
    ('arena', c_int),
    ('ordblks', c_int),
    ('smblks', c_int),
    ('hblks', c_int),
    ('hblkhd', c_int),
    ('usmblks', c_int),
    ('fsmblks', c_int),
    ('uordblks', c_int),
    ('fordblks', c_int),
    ('keepcost', c_int),
]
sig_atomic_t = __sig_atomic_t
sighandler_t = __sighandler_t
sig_t = __sighandler_t
class sigvec(Structure):
    pass
sigvec._fields_ = [
    ('sv_handler', __sighandler_t),
    ('sv_mask', c_int),
    ('sv_flags', c_int),
]
uint8_t = c_uint8
uint16_t = c_uint16
uint32_t = c_uint32
uint64_t = c_uint64
int_least8_t = c_byte
int_least16_t = c_short
int_least32_t = c_int
int_least64_t = c_longlong
uint_least8_t = c_ubyte
uint_least16_t = c_ushort
uint_least32_t = c_uint
uint_least64_t = c_ulonglong
int_fast8_t = c_byte
int_fast16_t = c_int
int_fast32_t = c_int
int_fast64_t = c_longlong
uint_fast8_t = c_ubyte
uint_fast16_t = c_uint
uint_fast32_t = c_uint
uint_fast64_t = c_ulonglong
uintptr_t = c_uint
intmax_t = c_longlong
uintmax_t = c_ulonglong
FILE = _IO_FILE
__FILE = _IO_FILE
__gnuc_va_list = STRING
va_list = __gnuc_va_list
off_t = __off_t
off64_t = __off64_t
ssize_t = __ssize_t
fpos_t = _G_fpos_t
fpos64_t = _G_fpos64_t
class div_t(Structure):
    pass
div_t._fields_ = [
    ('quot', c_int),
    ('rem', c_int),
]
class ldiv_t(Structure):
    pass
ldiv_t._fields_ = [
    ('quot', c_long),
    ('rem', c_long),
]
class lldiv_t(Structure):
    pass
lldiv_t._pack_ = 4
lldiv_t._fields_ = [
    ('quot', c_longlong),
    ('rem', c_longlong),
]
class random_data(Structure):
    pass
random_data._fields_ = [
    ('fptr', POINTER(int32_t)),
    ('rptr', POINTER(int32_t)),
    ('state', POINTER(int32_t)),
    ('rand_type', c_int),
    ('rand_deg', c_int),
    ('rand_sep', c_int),
    ('end_ptr', POINTER(int32_t)),
]
class drand48_data(Structure):
    pass
drand48_data._pack_ = 4
drand48_data._fields_ = [
    ('__x', c_ushort * 3),
    ('__old_x', c_ushort * 3),
    ('__c', c_ushort),
    ('__init', c_ushort),
    ('__a', c_ulonglong),
]
__compar_fn_t = CFUNCTYPE(c_int, c_void_p, c_void_p)
comparison_fn_t = __compar_fn_t
__compar_d_fn_t = CFUNCTYPE(c_int, c_void_p, c_void_p, c_void_p)
time_t = __time_t
clockid_t = __clockid_t
timer_t = __timer_t
class tm(Structure):
    pass
tm._fields_ = [
    ('tm_sec', c_int),
    ('tm_min', c_int),
    ('tm_hour', c_int),
    ('tm_mday', c_int),
    ('tm_mon', c_int),
    ('tm_year', c_int),
    ('tm_wday', c_int),
    ('tm_yday', c_int),
    ('tm_isdst', c_int),
    ('tm_gmtoff', c_long),
    ('tm_zone', STRING),
]
class itimerspec(Structure):
    pass
itimerspec._fields_ = [
    ('it_interval', timespec),
    ('it_value', timespec),
]
intptr_t = __intptr_t
socklen_t = __socklen_t
mbstate_t = __mbstate_t
class __locale_struct(Structure):
    pass
class __locale_data(Structure):
    pass
__locale_struct._fields_ = [
    ('__locales', POINTER(__locale_data) * 13),
    ('__ctype_b', POINTER(c_ushort)),
    ('__ctype_tolower', POINTER(c_int)),
    ('__ctype_toupper', POINTER(c_int)),
    ('__names', STRING * 13),
]
__locale_data._fields_ = [
]
__locale_t = POINTER(__locale_struct)
locale_t = __locale_t
ptrdiff_t = c_int
wint_t = c_uint
alias_set_type = c_int
gcov_type = c_longlong
class edge_def(Structure):
    pass
class basic_block_def(Structure):
    pass
class edge_def_insns(Union):
    pass
class gimple_seq_d(Structure):
    pass
gimple_seq = POINTER(gimple_seq_d)
class rtx_def(Structure):
    pass
rtx = POINTER(rtx_def)
edge_def_insns._fields_ = [
    ('g', gimple_seq),
    ('r', rtx),
]
class tree_node(Union):
    pass
tree = POINTER(tree_node)
source_location = c_uint
location_t = source_location
edge_def._pack_ = 4
edge_def._fields_ = [
    ('src', POINTER(basic_block_def)),
    ('dest', POINTER(basic_block_def)),
    ('insns', edge_def_insns),
    ('aux', c_void_p),
    ('goto_block', tree),
    ('goto_locus', location_t),
    ('dest_idx', c_uint),
    ('flags', c_int),
    ('probability', c_int),
    ('count', gcov_type),
]
class VEC_edge_base(Structure):
    pass
edge = POINTER(edge_def)
VEC_edge_base._fields_ = [
    ('num', c_uint),
    ('alloc', c_uint),
    ('vec', edge * 1),
]
class VEC_edge_none(Structure):
    pass
VEC_edge_none._fields_ = [
    ('base', VEC_edge_base),
]
class VEC_edge_gc(Structure):
    pass
VEC_edge_gc._fields_ = [
    ('base', VEC_edge_base),
]
class VEC_edge_heap(Structure):
    pass
VEC_edge_heap._fields_ = [
    ('base', VEC_edge_base),
]
class gcov_ctr_summary(Structure):
    pass
gcov_ctr_summary._fields_ = [
]
class loop(Structure):
    pass
loop._fields_ = [
]
class et_node(Structure):
    pass
class basic_block_il_dependent(Union):
    pass
class gimple_bb_info(Structure):
    pass
class rtl_bb_info(Structure):
    pass
basic_block_il_dependent._fields_ = [
    ('gimple', POINTER(gimple_bb_info)),
    ('rtl', POINTER(rtl_bb_info)),
]
basic_block_def._pack_ = 4
basic_block_def._fields_ = [
    ('preds', POINTER(VEC_edge_gc)),
    ('succs', POINTER(VEC_edge_gc)),
    ('aux', c_void_p),
    ('loop_father', POINTER(loop)),
    ('dom', POINTER(et_node) * 2),
    ('prev_bb', POINTER(basic_block_def)),
    ('next_bb', POINTER(basic_block_def)),
    ('il', basic_block_il_dependent),
    ('count', gcov_type),
    ('index', c_int),
    ('loop_depth', c_int),
    ('frequency', c_int),
    ('discriminator', c_int),
    ('flags', c_int),
]
et_node._fields_ = [
]
rtl_bb_info._fields_ = [
    ('head_', rtx),
    ('end_', rtx),
    ('header', rtx),
    ('footer', rtx),
    ('visited', c_int),
]
gimple_bb_info._fields_ = [
    ('seq', gimple_seq),
    ('phi_nodes', gimple_seq),
]
class VEC_basic_block_none(Structure):
    pass
class VEC_basic_block_base(Structure):
    pass
basic_block = POINTER(basic_block_def)
VEC_basic_block_base._fields_ = [
    ('num', c_uint),
    ('alloc', c_uint),
    ('vec', basic_block * 1),
]
VEC_basic_block_none._fields_ = [
    ('base', VEC_basic_block_base),
]
class VEC_basic_block_gc(Structure):
    pass
VEC_basic_block_gc._fields_ = [
    ('base', VEC_basic_block_base),
]
class VEC_basic_block_heap(Structure):
    pass
VEC_basic_block_heap._fields_ = [
    ('base', VEC_basic_block_base),
]

# values for enumeration 'bb_flags'
bb_flags = c_int # enum

# values for enumeration 'dom_state'
dom_state = c_int # enum

# values for enumeration 'profile_status_d'
profile_status_d = c_int # enum
class control_flow_graph(Structure):
    pass
control_flow_graph._fields_ = [
    ('x_entry_block_ptr', basic_block),
    ('x_exit_block_ptr', basic_block),
    ('x_basic_block_info', POINTER(VEC_basic_block_gc)),
    ('x_n_basic_blocks', c_int),
    ('x_n_edges', c_int),
    ('x_last_basic_block', c_int),
    ('last_label_uid', c_int),
    ('x_label_to_block_map', POINTER(VEC_basic_block_gc)),
    ('x_profile_status', profile_status_d),
    ('x_dom_computed', dom_state * 2),
    ('x_n_bbs_in_dom_tree', c_uint * 2),
    ('max_jumptable_ents', c_int),
]
class ce_if_block(Structure):
    pass
ce_if_block._fields_ = [
    ('test_bb', basic_block),
    ('then_bb', basic_block),
    ('else_bb', basic_block),
    ('join_bb', basic_block),
    ('last_test_bb', basic_block),
    ('num_multiple_test_blocks', c_int),
    ('num_and_and_blocks', c_int),
    ('num_or_or_blocks', c_int),
    ('num_multiple_test_insns', c_int),
    ('and_and_p', c_int),
    ('num_then_insns', c_int),
    ('num_else_insns', c_int),
    ('pass', c_int),
]
ce_if_block_t = ce_if_block
class edge_list(Structure):
    pass
edge_list._fields_ = [
    ('num_blocks', c_int),
    ('num_edges', c_int),
    ('index_to_edge', POINTER(edge)),
]
class edge_iterator(Structure):
    pass
edge_iterator._fields_ = [
    ('index', c_uint),
    ('container', POINTER(POINTER(VEC_edge_gc))),
]

# values for enumeration 'cdi_direction'
cdi_direction = c_int # enum
BITMAP_WORD = c_ulong
class bitmap_obstack(Structure):
    pass
class bitmap_element_def(Structure):
    pass
class bitmap_head_def(Structure):
    pass
class obstack(Structure):
    pass
class _obstack_chunk(Structure):
    pass
obstack._fields_ = [
    ('chunk_size', c_long),
    ('chunk', POINTER(_obstack_chunk)),
    ('object_base', STRING),
    ('next_free', STRING),
    ('chunk_limit', STRING),
    ('temp', c_int),
    ('alignment_mask', c_int),
    ('chunkfun', CFUNCTYPE(POINTER(_obstack_chunk), c_void_p, c_long)),
    ('freefun', CFUNCTYPE(None, c_void_p, POINTER(_obstack_chunk))),
    ('extra_arg', c_void_p),
    ('use_extra_arg', c_uint, 1),
    ('maybe_empty_object', c_uint, 1),
    ('alloc_failed', c_uint, 1),
]
bitmap_obstack._fields_ = [
    ('elements', POINTER(bitmap_element_def)),
    ('heads', POINTER(bitmap_head_def)),
    ('obstack', obstack),
]
bitmap_element_def._fields_ = [
    ('next', POINTER(bitmap_element_def)),
    ('prev', POINTER(bitmap_element_def)),
    ('indx', c_uint),
    ('bits', BITMAP_WORD * 4),
]
bitmap_element = bitmap_element_def
class bitmap_descriptor(Structure):
    pass
bitmap_descriptor._fields_ = [
]
bitmap_head_def._fields_ = [
    ('first', POINTER(bitmap_element)),
    ('current', POINTER(bitmap_element)),
    ('indx', c_uint),
    ('obstack', POINTER(bitmap_obstack)),
]
bitmap_head = bitmap_head_def
class bitmap_iterator(Structure):
    pass
bitmap_iterator._fields_ = [
    ('elt1', POINTER(bitmap_element)),
    ('elt2', POINTER(bitmap_element)),
    ('word_no', c_uint),
    ('bits', BITMAP_WORD),
]

# values for enumeration 'rid'
rid = c_int # enum

# values for enumeration 'c_tree_index'
c_tree_index = c_int # enum
class c_common_identifier(Structure):
    pass
class tree_common(Structure):
    pass
class tree_base(Structure):
    pass

# values for enumeration 'tree_code'
tree_code = c_int # enum
tree_base._fields_ = [
    ('code', tree_code, 16),
    ('side_effects_flag', c_uint, 1),
    ('constant_flag', c_uint, 1),
    ('addressable_flag', c_uint, 1),
    ('volatile_flag', c_uint, 1),
    ('readonly_flag', c_uint, 1),
    ('unsigned_flag', c_uint, 1),
    ('asm_written_flag', c_uint, 1),
    ('nowarning_flag', c_uint, 1),
    ('used_flag', c_uint, 1),
    ('nothrow_flag', c_uint, 1),
    ('static_flag', c_uint, 1),
    ('public_flag', c_uint, 1),
    ('private_flag', c_uint, 1),
    ('protected_flag', c_uint, 1),
    ('deprecated_flag', c_uint, 1),
    ('saturating_flag', c_uint, 1),
    ('default_def_flag', c_uint, 1),
    ('lang_flag_0', c_uint, 1),
    ('lang_flag_1', c_uint, 1),
    ('lang_flag_2', c_uint, 1),
    ('lang_flag_3', c_uint, 1),
    ('lang_flag_4', c_uint, 1),
    ('lang_flag_5', c_uint, 1),
    ('lang_flag_6', c_uint, 1),
    ('visited', c_uint, 1),
    ('packed_flag', c_uint, 1),
    ('user_align', c_uint, 1),
    ('nameless_flag', c_uint, 1),
    ('spare', c_uint, 12),
    ('address_space', c_uint, 8),
]
tree_common._fields_ = [
    ('base', tree_base),
    ('chain', tree),
    ('type', tree),
]
class cpp_hashnode(Structure):
    pass
class ht_identifier(Structure):
    pass
ht_identifier._fields_ = [
    ('str', POINTER(c_ubyte)),
    ('len', c_uint),
    ('hash_value', c_uint),
]

# values for enumeration 'node_type'
node_type = c_int # enum
class _cpp_hashnode_value(Union):
    pass
class cpp_macro(Structure):
    pass
class answer(Structure):
    pass

# values for enumeration 'cpp_builtin_type'
cpp_builtin_type = c_int # enum
_cpp_hashnode_value._fields_ = [
    ('macro', POINTER(cpp_macro)),
    ('answers', POINTER(answer)),
    ('builtin', cpp_builtin_type),
    ('arg_index', c_ushort),
]
cpp_hashnode._fields_ = [
    ('ident', ht_identifier),
    ('is_directive', c_uint, 1),
    ('directive_index', c_uint, 7),
    ('rid_code', c_ubyte),
    ('type', node_type, 6),
    ('flags', c_uint, 10),
    ('value', _cpp_hashnode_value),
]
c_common_identifier._fields_ = [
    ('common', tree_common),
    ('node', cpp_hashnode),
]
class c_common_resword(Structure):
    pass
c_common_resword._fields_ = [
    ('word', STRING),
    ('rid', rid, 16),
    ('disable', c_uint, 16),
]
class sorted_fields_type(Structure):
    pass
sorted_fields_type._fields_ = [
    ('len', c_int),
    ('elts', tree * 1),
]

# values for enumeration 'c_language_kind'
c_language_kind = c_int # enum

# values for enumeration 'ref_operator'
ref_operator = c_int # enum
class stmt_tree_s(Structure):
    pass
stmt_tree_s._fields_ = [
    ('x_cur_stmt_list', tree),
    ('stmts_are_full_exprs_p', c_int),
]
stmt_tree = POINTER(stmt_tree_s)
class c_language_function(Structure):
    pass
c_language_function._fields_ = [
    ('x_stmt_tree', stmt_tree_s),
]

# values for enumeration 'cxx_dialect'
cxx_dialect = c_int # enum
class visibility_flags(Structure):
    pass
visibility_flags._fields_ = [
    ('inpragma', c_uint, 1),
    ('inlines_hidden', c_uint, 1),
]
class c_fileinfo(Structure):
    pass
c_fileinfo._fields_ = [
    ('time', c_int),
    ('interface_only', c_short),
    ('interface_unknown', c_short),
]

# values for enumeration 'lvalue_use'
lvalue_use = c_int # enum
class cfg_hooks(Structure):
    pass
const_edge = POINTER(edge_def)

# values for enumeration 'br_predictor'
br_predictor = c_int # enum
const_basic_block = POINTER(basic_block_def)
class simple_bitmap_def(Structure):
    pass
sbitmap = POINTER(simple_bitmap_def)
cfg_hooks._fields_ = [
    ('name', STRING),
    ('verify_flow_info', CFUNCTYPE(c_int)),
    ('dump_bb', CFUNCTYPE(None, basic_block, POINTER(FILE), c_int, c_int)),
    ('create_basic_block', CFUNCTYPE(basic_block, c_void_p, c_void_p, basic_block)),
    ('redirect_edge_and_branch', CFUNCTYPE(edge, edge, basic_block)),
    ('redirect_edge_and_branch_force', CFUNCTYPE(basic_block, edge, basic_block)),
    ('can_remove_branch_p', CFUNCTYPE(c_bool, const_edge)),
    ('delete_basic_block', CFUNCTYPE(None, basic_block)),
    ('split_block', CFUNCTYPE(basic_block, basic_block, c_void_p)),
    ('move_block_after', CFUNCTYPE(c_bool, basic_block, basic_block)),
    ('can_merge_blocks_p', CFUNCTYPE(c_bool, basic_block, basic_block)),
    ('merge_blocks', CFUNCTYPE(None, basic_block, basic_block)),
    ('predict_edge', CFUNCTYPE(None, edge, br_predictor, c_int)),
    ('predicted_by_p', CFUNCTYPE(c_bool, const_basic_block, br_predictor)),
    ('can_duplicate_block_p', CFUNCTYPE(c_bool, const_basic_block)),
    ('duplicate_block', CFUNCTYPE(basic_block, basic_block)),
    ('split_edge', CFUNCTYPE(basic_block, edge)),
    ('make_forwarder_block', CFUNCTYPE(None, edge)),
    ('tidy_fallthru_edge', CFUNCTYPE(None, edge)),
    ('block_ends_with_call_p', CFUNCTYPE(c_bool, basic_block)),
    ('block_ends_with_condjump_p', CFUNCTYPE(c_bool, const_basic_block)),
    ('flow_call_edges_add', CFUNCTYPE(c_int, sbitmap)),
    ('execute_on_growing_pred', CFUNCTYPE(None, edge)),
    ('execute_on_shrinking_pred', CFUNCTYPE(None, edge)),
    ('cfg_hook_duplicate_loop_to_header_edge', CFUNCTYPE(c_bool, POINTER(loop), edge, c_uint, sbitmap, edge, POINTER(POINTER(VEC_edge_heap)), c_int)),
    ('lv_add_condition_to_bb', CFUNCTYPE(None, basic_block, basic_block, basic_block, c_void_p)),
    ('lv_adjust_loop_header_phi', CFUNCTYPE(None, basic_block, basic_block, basic_block, edge)),
    ('extract_cond_bb_edges', CFUNCTYPE(None, basic_block, POINTER(edge), POINTER(edge))),
    ('flush_pending_stmts', CFUNCTYPE(None, edge)),
]

# values for enumeration 'availability'
availability = c_int # enum
class lto_file_decl_data(Structure):
    pass
lto_file_decl_data._fields_ = [
]
class inline_summary(Structure):
    pass
inline_summary._pack_ = 4
inline_summary._fields_ = [
    ('estimated_self_stack_size', c_longlong),
    ('self_size', c_int),
    ('size_inlining_benefit', c_int),
    ('self_time', c_int),
    ('time_inlining_benefit', c_int),
]
class cgraph_thunk_info(Structure):
    pass
cgraph_thunk_info._pack_ = 4
cgraph_thunk_info._fields_ = [
    ('fixed_offset', c_longlong),
    ('virtual_value', c_longlong),
    ('alias', tree),
    ('this_adjusting', c_bool),
    ('virtual_offset_p', c_bool),
    ('thunk_p', c_bool),
]
class cgraph_local_info(Structure):
    pass
cgraph_local_info._fields_ = [
    ('lto_file_data', POINTER(lto_file_decl_data)),
    ('inline_summary', inline_summary),
    ('local', c_uint, 1),
    ('externally_visible', c_uint, 1),
    ('finalized', c_uint, 1),
    ('inlinable', c_uint, 1),
    ('versionable', c_uint, 1),
    ('can_change_signature', c_uint, 1),
    ('disregard_inline_limits', c_uint, 1),
    ('redefined_extern_inline', c_uint, 1),
    ('vtable_method', c_uint, 1),
]
class cgraph_global_info(Structure):
    pass
class cgraph_node(Structure):
    pass
cgraph_global_info._pack_ = 4
cgraph_global_info._fields_ = [
    ('estimated_stack_size', c_longlong),
    ('stack_frame_offset', c_longlong),
    ('inlined_to', POINTER(cgraph_node)),
    ('time', c_int),
    ('size', c_int),
    ('estimated_growth', c_int),
]
class cgraph_rtl_info(Structure):
    pass
cgraph_rtl_info._fields_ = [
    ('preferred_incoming_stack_boundary', c_uint),
]
class ipa_replace_map(Structure):
    pass
ipa_replace_map._fields_ = [
    ('old_tree', tree),
    ('new_tree', tree),
    ('parm_num', c_int),
    ('replace_p', c_bool),
    ('ref_p', c_bool),
]
ipa_replace_map_p = POINTER(ipa_replace_map)
class VEC_ipa_replace_map_p_none(Structure):
    pass
class VEC_ipa_replace_map_p_base(Structure):
    pass
VEC_ipa_replace_map_p_base._fields_ = [
    ('num', c_uint),
    ('alloc', c_uint),
    ('vec', ipa_replace_map_p * 1),
]
VEC_ipa_replace_map_p_none._fields_ = [
    ('base', VEC_ipa_replace_map_p_base),
]
class VEC_ipa_replace_map_p_gc(Structure):
    pass
VEC_ipa_replace_map_p_gc._fields_ = [
    ('base', VEC_ipa_replace_map_p_base),
]
class cgraph_clone_info(Structure):
    pass
bitmap = POINTER(bitmap_head_def)
cgraph_clone_info._fields_ = [
    ('tree_map', POINTER(VEC_ipa_replace_map_p_gc)),
    ('args_to_skip', bitmap),
    ('combined_args_to_skip', bitmap),
]
class cgraph_edge(Structure):
    pass
class htab(Structure):
    pass
htab_t = POINTER(htab)
class VEC_ipa_opt_pass_heap(Structure):
    pass
class ipa_ref_list(Structure):
    pass
class VEC_ipa_ref_t_gc(Structure):
    pass
class VEC_ipa_ref_ptr_heap(Structure):
    pass
ipa_ref_list._fields_ = [
    ('references', POINTER(VEC_ipa_ref_t_gc)),
    ('refering', POINTER(VEC_ipa_ref_ptr_heap)),
]

# values for enumeration 'ld_plugin_symbol_resolution'
ld_plugin_symbol_resolution = c_int # enum

# values for enumeration 'node_frequency'
node_frequency = c_int # enum
cgraph_node._fields_ = [
    ('decl', tree),
    ('callees', POINTER(cgraph_edge)),
    ('callers', POINTER(cgraph_edge)),
    ('next', POINTER(cgraph_node)),
    ('previous', POINTER(cgraph_node)),
    ('indirect_calls', POINTER(cgraph_edge)),
    ('origin', POINTER(cgraph_node)),
    ('nested', POINTER(cgraph_node)),
    ('next_nested', POINTER(cgraph_node)),
    ('next_needed', POINTER(cgraph_node)),
    ('next_sibling_clone', POINTER(cgraph_node)),
    ('prev_sibling_clone', POINTER(cgraph_node)),
    ('clones', POINTER(cgraph_node)),
    ('clone_of', POINTER(cgraph_node)),
    ('same_body', POINTER(cgraph_node)),
    ('same_comdat_group', POINTER(cgraph_node)),
    ('call_site_hash', htab_t),
    ('former_clone_of', tree),
    ('aux', c_void_p),
    ('ipa_transforms_to_apply', POINTER(VEC_ipa_opt_pass_heap)),
    ('ref_list', ipa_ref_list),
    ('local', cgraph_local_info),
    ('global', cgraph_global_info),
    ('rtl', cgraph_rtl_info),
    ('clone', cgraph_clone_info),
    ('thunk', cgraph_thunk_info),
    ('count', gcov_type),
    ('count_materialization_scale', c_int),
    ('uid', c_int),
    ('order', c_int),
    ('pid', c_int),
    ('resolution', ld_plugin_symbol_resolution),
    ('needed', c_uint, 1),
    ('address_taken', c_uint, 1),
    ('abstract_and_needed', c_uint, 1),
    ('reachable', c_uint, 1),
    ('reachable_from_other_partition', c_uint, 1),
    ('lowered', c_uint, 1),
    ('analyzed', c_uint, 1),
    ('in_other_partition', c_uint, 1),
    ('process', c_uint, 1),
    ('alias', c_uint, 1),
    ('finalized_by_frontend', c_uint, 1),
    ('same_body_alias', c_uint, 1),
    ('frequency', node_frequency, 2),
    ('only_called_at_startup', c_uint, 1),
    ('only_called_at_exit', c_uint, 1),
]
cgraph_node_ptr = POINTER(cgraph_node)
class VEC_cgraph_node_ptr_none(Structure):
    pass
class VEC_cgraph_node_ptr_base(Structure):
    pass
VEC_cgraph_node_ptr_base._fields_ = [
    ('num', c_uint),
    ('alloc', c_uint),
    ('vec', cgraph_node_ptr * 1),
]
VEC_cgraph_node_ptr_none._fields_ = [
    ('base', VEC_cgraph_node_ptr_base),
]
class VEC_cgraph_node_ptr_heap(Structure):
    pass
VEC_cgraph_node_ptr_heap._fields_ = [
    ('base', VEC_cgraph_node_ptr_base),
]
class VEC_cgraph_node_ptr_gc(Structure):
    pass
VEC_cgraph_node_ptr_gc._fields_ = [
    ('base', VEC_cgraph_node_ptr_base),
]
class cgraph_node_set_def(Structure):
    pass
cgraph_node_set_def._fields_ = [
    ('hashtab', htab_t),
    ('nodes', POINTER(VEC_cgraph_node_ptr_gc)),
]
class varpool_node(Structure):
    pass
varpool_node_ptr = POINTER(varpool_node)
class VEC_varpool_node_ptr_base(Structure):
    pass
VEC_varpool_node_ptr_base._fields_ = [
    ('num', c_uint),
    ('alloc', c_uint),
    ('vec', varpool_node_ptr * 1),
]
class VEC_varpool_node_ptr_none(Structure):
    pass
VEC_varpool_node_ptr_none._fields_ = [
    ('base', VEC_varpool_node_ptr_base),
]
class VEC_varpool_node_ptr_heap(Structure):
    pass
VEC_varpool_node_ptr_heap._fields_ = [
    ('base', VEC_varpool_node_ptr_base),
]
class VEC_varpool_node_ptr_gc(Structure):
    pass
VEC_varpool_node_ptr_gc._fields_ = [
    ('base', VEC_varpool_node_ptr_base),
]
class varpool_node_set_def(Structure):
    pass
varpool_node_set_def._fields_ = [
    ('hashtab', htab_t),
    ('nodes', POINTER(VEC_varpool_node_ptr_gc)),
]
cgraph_node_set = POINTER(cgraph_node_set_def)
class VEC_cgraph_node_set_base(Structure):
    pass
VEC_cgraph_node_set_base._fields_ = [
    ('num', c_uint),
    ('alloc', c_uint),
    ('vec', cgraph_node_set * 1),
]
class VEC_cgraph_node_set_none(Structure):
    pass
VEC_cgraph_node_set_none._fields_ = [
    ('base', VEC_cgraph_node_set_base),
]
class VEC_cgraph_node_set_gc(Structure):
    pass
VEC_cgraph_node_set_gc._fields_ = [
    ('base', VEC_cgraph_node_set_base),
]
class VEC_cgraph_node_set_heap(Structure):
    pass
VEC_cgraph_node_set_heap._fields_ = [
    ('base', VEC_cgraph_node_set_base),
]
varpool_node_set = POINTER(varpool_node_set_def)
class VEC_varpool_node_set_none(Structure):
    pass
class VEC_varpool_node_set_base(Structure):
    pass
VEC_varpool_node_set_base._fields_ = [
    ('num', c_uint),
    ('alloc', c_uint),
    ('vec', varpool_node_set * 1),
]
VEC_varpool_node_set_none._fields_ = [
    ('base', VEC_varpool_node_set_base),
]
class VEC_varpool_node_set_gc(Structure):
    pass
VEC_varpool_node_set_gc._fields_ = [
    ('base', VEC_varpool_node_set_base),
]
class VEC_varpool_node_set_heap(Structure):
    pass
VEC_varpool_node_set_heap._fields_ = [
    ('base', VEC_varpool_node_set_base),
]
class cgraph_node_set_element_def(Structure):
    pass
cgraph_node_set_element_def._pack_ = 4
cgraph_node_set_element_def._fields_ = [
    ('node', POINTER(cgraph_node)),
    ('index', c_longlong),
]
cgraph_node_set_element = POINTER(cgraph_node_set_element_def)
const_cgraph_node_set_element = POINTER(cgraph_node_set_element_def)
class cgraph_node_set_iterator(Structure):
    pass
cgraph_node_set_iterator._fields_ = [
    ('set', cgraph_node_set),
    ('index', c_uint),
]
class varpool_node_set_element_def(Structure):
    pass
varpool_node_set_element_def._pack_ = 4
varpool_node_set_element_def._fields_ = [
    ('node', POINTER(varpool_node)),
    ('index', c_longlong),
]
varpool_node_set_element = POINTER(varpool_node_set_element_def)
const_varpool_node_set_element = POINTER(varpool_node_set_element_def)
class varpool_node_set_iterator(Structure):
    pass
varpool_node_set_iterator._fields_ = [
    ('set', varpool_node_set),
    ('index', c_uint),
]

# values for enumeration 'cgraph_inline_failed_t'
cgraph_inline_failed_t = c_int # enum
class cgraph_indirect_call_info(Structure):
    pass
cgraph_indirect_call_info._fields_ = [
    ('anc_offset', c_longlong),
    ('otr_token', c_longlong),
    ('thunk_delta', c_longlong),
    ('otr_type', tree),
    ('param_index', c_int),
    ('ecf_flags', c_int),
    ('polymorphic', c_uint, 1),
]
class gimple_statement_d(Union):
    pass
gimple = POINTER(gimple_statement_d)
cgraph_edge._fields_ = [
    ('count', gcov_type),
    ('caller', POINTER(cgraph_node)),
    ('callee', POINTER(cgraph_node)),
    ('prev_caller', POINTER(cgraph_edge)),
    ('next_caller', POINTER(cgraph_edge)),
    ('prev_callee', POINTER(cgraph_edge)),
    ('next_callee', POINTER(cgraph_edge)),
    ('call_stmt', gimple),
    ('indirect_info', POINTER(cgraph_indirect_call_info)),
    ('aux', c_void_p),
    ('inline_failed', cgraph_inline_failed_t),
    ('lto_stmt_uid', c_uint),
    ('frequency', c_int),
    ('uid', c_int),
    ('loop_nest', c_ushort),
    ('indirect_inlining_edge', c_uint, 1),
    ('indirect_unknown_callee', c_uint, 1),
    ('call_stmt_cannot_inline_p', c_uint, 1),
    ('can_throw_external', c_uint, 1),
]
cgraph_edge_p = POINTER(cgraph_edge)
class VEC_cgraph_edge_p_none(Structure):
    pass
class VEC_cgraph_edge_p_base(Structure):
    pass
VEC_cgraph_edge_p_base._fields_ = [
    ('num', c_uint),
    ('alloc', c_uint),
    ('vec', cgraph_edge_p * 1),
]
VEC_cgraph_edge_p_none._fields_ = [
    ('base', VEC_cgraph_edge_p_base),
]
class VEC_cgraph_edge_p_heap(Structure):
    pass
VEC_cgraph_edge_p_heap._fields_ = [
    ('base', VEC_cgraph_edge_p_base),
]
varpool_node._fields_ = [
    ('decl', tree),
    ('next', POINTER(varpool_node)),
    ('prev', POINTER(varpool_node)),
    ('next_needed', POINTER(varpool_node)),
    ('prev_needed', POINTER(varpool_node)),
    ('extra_name', POINTER(varpool_node)),
    ('same_comdat_group', POINTER(varpool_node)),
    ('ref_list', ipa_ref_list),
    ('lto_file_data', POINTER(lto_file_decl_data)),
    ('aux', c_void_p),
    ('order', c_int),
    ('resolution', ld_plugin_symbol_resolution),
    ('needed', c_uint, 1),
    ('force_output', c_uint, 1),
    ('analyzed', c_uint, 1),
    ('finalized', c_uint, 1),
    ('output', c_uint, 1),
    ('externally_visible', c_uint, 1),
    ('alias', c_uint, 1),
    ('used_from_other_partition', c_uint, 1),
    ('in_other_partition', c_uint, 1),
]
class cgraph_asm_node(Structure):
    pass
cgraph_asm_node._fields_ = [
    ('next', POINTER(cgraph_asm_node)),
    ('asm_str', tree),
    ('order', c_int),
]

# values for enumeration 'cgraph_state'
cgraph_state = c_int # enum
cgraph_edge_hook = CFUNCTYPE(None, POINTER(cgraph_edge), c_void_p)
cgraph_node_hook = CFUNCTYPE(None, POINTER(cgraph_node), c_void_p)
cgraph_2edge_hook = CFUNCTYPE(None, POINTER(cgraph_edge), POINTER(cgraph_edge), c_void_p)
cgraph_2node_hook = CFUNCTYPE(None, POINTER(cgraph_node), POINTER(cgraph_node), c_void_p)
class cgraph_edge_hook_list(Structure):
    pass
cgraph_edge_hook_list._fields_ = [
]
class cgraph_node_hook_list(Structure):
    pass
cgraph_node_hook_list._fields_ = [
]
class cgraph_2edge_hook_list(Structure):
    pass
cgraph_2edge_hook_list._fields_ = [
]
class cgraph_2node_hook_list(Structure):
    pass
cgraph_2node_hook_list._fields_ = [
]
class constant_descriptor_tree(Structure):
    pass
hashval_t = c_uint
constant_descriptor_tree._fields_ = [
    ('rtl', rtx),
    ('value', tree),
    ('hash', hashval_t),
]

# values for enumeration 'stringop_alg'
stringop_alg = c_int # enum
class stringop_algs(Structure):
    pass
class stringop_strategy(Structure):
    pass
stringop_strategy._fields_ = [
    ('max', c_int),
    ('alg', stringop_alg),
]
stringop_algs._fields_ = [
    ('unknown_size', stringop_alg),
    ('size', stringop_strategy * 4),
]
class processor_costs(Structure):
    pass
processor_costs._fields_ = [
    ('add', c_int),
    ('lea', c_int),
    ('shift_var', c_int),
    ('shift_const', c_int),
    ('mult_init', c_int * 5),
    ('mult_bit', c_int),
    ('divide', c_int * 5),
    ('movsx', c_int),
    ('movzx', c_int),
    ('large_insn', c_int),
    ('move_ratio', c_int),
    ('movzbl_load', c_int),
    ('int_load', c_int * 3),
    ('int_store', c_int * 3),
    ('fp_move', c_int),
    ('fp_load', c_int * 3),
    ('fp_store', c_int * 3),
    ('mmx_move', c_int),
    ('mmx_load', c_int * 2),
    ('mmx_store', c_int * 2),
    ('sse_move', c_int),
    ('sse_load', c_int * 3),
    ('sse_store', c_int * 3),
    ('mmxsse_to_integer', c_int),
    ('l1_cache_size', c_int),
    ('l2_cache_size', c_int),
    ('prefetch_block', c_int),
    ('simultaneous_prefetches', c_int),
    ('branch_cost', c_int),
    ('fadd', c_int),
    ('fmul', c_int),
    ('fdiv', c_int),
    ('fabs', c_int),
    ('fchs', c_int),
    ('fsqrt', c_int),
    ('memcpy', stringop_algs * 2),
    ('memset', stringop_algs * 2),
    ('scalar_stmt_cost', c_int),
    ('scalar_load_cost', c_int),
    ('scalar_store_cost', c_int),
    ('vec_stmt_cost', c_int),
    ('vec_to_scalar_cost', c_int),
    ('scalar_to_vec_cost', c_int),
    ('vec_align_load_cost', c_int),
    ('vec_unalign_load_cost', c_int),
    ('vec_store_cost', c_int),
    ('cond_taken_branch_cost', c_int),
    ('cond_not_taken_branch_cost', c_int),
]

# values for enumeration 'ix86_tune_indices'
ix86_tune_indices = c_int # enum

# values for enumeration 'ix86_arch_indices'
ix86_arch_indices = c_int # enum

# values for enumeration 'calling_abi'
calling_abi = c_int # enum

# values for enumeration 'target_cpu_default'
target_cpu_default = c_int # enum

# values for enumeration 'reg_class'
reg_class = c_int # enum
class ix86_args(Structure):
    pass
ix86_args._fields_ = [
    ('words', c_int),
    ('nregs', c_int),
    ('regno', c_int),
    ('fastcall', c_int),
    ('sse_words', c_int),
    ('sse_nregs', c_int),
    ('warn_avx', c_int),
    ('warn_sse', c_int),
    ('warn_mmx', c_int),
    ('sse_regno', c_int),
    ('mmx_words', c_int),
    ('mmx_nregs', c_int),
    ('mmx_regno', c_int),
    ('maybe_vaarg', c_int),
    ('caller', c_int),
    ('float_in_sse', c_int),
    ('call_abi', calling_abi),
]
CUMULATIVE_ARGS = ix86_args

# values for enumeration 'processor_type'
processor_type = c_int # enum

# values for enumeration 'fpmath_unit'
fpmath_unit = c_int # enum

# values for enumeration 'tls_dialect'
tls_dialect = c_int # enum

# values for enumeration 'cmodel'
cmodel = c_int # enum

# values for enumeration 'asm_dialect'
asm_dialect = c_int # enum

# values for enumeration 'ix86_fpcmp_strategy'
ix86_fpcmp_strategy = c_int # enum

# values for enumeration 'ix86_entity'
ix86_entity = c_int # enum

# values for enumeration 'ix86_stack_slot'
ix86_stack_slot = c_int # enum
class machine_frame_state(Structure):
    pass
machine_frame_state._pack_ = 4
machine_frame_state._fields_ = [
    ('cfa_reg', rtx),
    ('cfa_offset', c_longlong),
    ('sp_offset', c_longlong),
    ('fp_offset', c_longlong),
    ('red_zone_offset', c_int),
    ('sp_valid', c_uint, 1),
    ('fp_valid', c_uint, 1),
    ('drap_valid', c_uint, 1),
    ('realigned', c_uint, 1),
]
class seh_frame_state(Structure):
    pass
seh_frame_state._fields_ = [
]
class machine_function(Structure):
    pass
class stack_local_entry(Structure):
    pass
machine_function._fields_ = [
    ('stack_locals', POINTER(stack_local_entry)),
    ('some_ld_name', STRING),
    ('varargs_gpr_size', c_int),
    ('varargs_fpr_size', c_int),
    ('optimize_mode_switching', c_int * 4),
    ('use_fast_prologue_epilogue_nregs', c_int),
    ('split_stack_varargs_pointer', rtx),
    ('call_abi', calling_abi, 8),
    ('accesses_prev_frame', c_uint, 1),
    ('needs_cld', c_uint, 1),
    ('use_fast_prologue_epilogue', c_uint, 1),
    ('tls_descriptor_call_expanded_p', c_uint, 1),
    ('static_chain_on_stack', c_uint, 1),
    ('caller_pass_avx256_p', c_uint, 1),
    ('caller_return_avx256_p', c_uint, 1),
    ('callee_pass_avx256_p', c_uint, 1),
    ('callee_return_avx256_p', c_uint, 1),
    ('rescan_vzeroupper_p', c_uint, 1),
    ('fs', machine_frame_state),
    ('seh', POINTER(seh_frame_state)),
]
stack_local_entry._fields_ = [
]
class _4DOT_75(Structure):
    pass
_4DOT_75._fields_ = [
    ('name', STRING),
    ('value', STRING),
]
const_bitmap = POINTER(bitmap_head_def)
simple_bitmap_def._fields_ = [
    ('popcount', POINTER(c_ubyte)),
    ('n_bits', c_uint),
    ('size', c_uint),
    ('elms', c_ulong * 1),
]
const_sbitmap = POINTER(simple_bitmap_def)
rtx_def._fields_ = [
]
const_rtx = POINTER(rtx_def)
class rtvec_def(Structure):
    pass
rtvec_def._fields_ = [
]
rtvec = POINTER(rtvec_def)
const_rtvec = POINTER(rtvec_def)
class tree_int_cst(Structure):
    pass
class double_int(Structure):
    pass
double_int._pack_ = 4
double_int._fields_ = [
    ('low', c_ulonglong),
    ('high', c_longlong),
]
tree_int_cst._fields_ = [
    ('common', tree_common),
    ('int_cst', double_int),
]
class tree_real_cst(Structure):
    pass
class real_value(Structure):
    pass
tree_real_cst._fields_ = [
    ('common', tree_common),
    ('real_cst_ptr', POINTER(real_value)),
]
class tree_fixed_cst(Structure):
    pass
class fixed_value(Structure):
    pass
tree_fixed_cst._fields_ = [
    ('common', tree_common),
    ('fixed_cst_ptr', POINTER(fixed_value)),
]
class tree_vector(Structure):
    pass
tree_vector._fields_ = [
    ('common', tree_common),
    ('elements', tree),
]
class tree_string(Structure):
    pass
tree_string._fields_ = [
    ('common', tree_common),
    ('length', c_int),
    ('str', c_char * 1),
]
class tree_complex(Structure):
    pass
tree_complex._fields_ = [
    ('common', tree_common),
    ('real', tree),
    ('imag', tree),
]
class tree_identifier(Structure):
    pass
tree_identifier._fields_ = [
    ('common', tree_common),
    ('id', ht_identifier),
]
class tree_decl_minimal(Structure):
    pass
tree_decl_minimal._fields_ = [
    ('common', tree_common),
    ('locus', location_t),
    ('uid', c_uint),
    ('name', tree),
    ('context', tree),
]
class tree_decl_common(Structure):
    pass

# values for enumeration 'machine_mode'
machine_mode = c_int # enum
class lang_decl(Structure):
    pass
tree_decl_common._fields_ = [
    ('common', tree_decl_minimal),
    ('size', tree),
    ('mode', machine_mode, 8),
    ('nonlocal_flag', c_uint, 1),
    ('virtual_flag', c_uint, 1),
    ('ignored_flag', c_uint, 1),
    ('abstract_flag', c_uint, 1),
    ('artificial_flag', c_uint, 1),
    ('preserve_flag', c_uint, 1),
    ('debug_expr_is_from', c_uint, 1),
    ('lang_flag_0', c_uint, 1),
    ('lang_flag_1', c_uint, 1),
    ('lang_flag_2', c_uint, 1),
    ('lang_flag_3', c_uint, 1),
    ('lang_flag_4', c_uint, 1),
    ('lang_flag_5', c_uint, 1),
    ('lang_flag_6', c_uint, 1),
    ('lang_flag_7', c_uint, 1),
    ('lang_flag_8', c_uint, 1),
    ('decl_flag_0', c_uint, 1),
    ('decl_flag_1', c_uint, 1),
    ('decl_flag_2', c_uint, 1),
    ('gimple_reg_flag', c_uint, 1),
    ('decl_by_reference_flag', c_uint, 1),
    ('decl_restricted_flag', c_uint, 1),
    ('decl_read_flag', c_uint, 1),
    ('decl_nonshareable_flag', c_uint, 1),
    ('off_align', c_uint, 8),
    ('align', c_uint),
    ('pt_uid', c_uint),
    ('size_unit', tree),
    ('initial', tree),
    ('attributes', tree),
    ('abstract_origin', tree),
    ('lang_specific', POINTER(lang_decl)),
]
class tree_decl_with_rtl(Structure):
    pass
tree_decl_with_rtl._fields_ = [
    ('common', tree_decl_common),
    ('rtl', rtx),
]
class tree_decl_non_common(Structure):
    pass
class tree_decl_with_vis(Structure):
    pass

# values for enumeration 'symbol_visibility'
symbol_visibility = c_int # enum

# values for enumeration 'tls_model'
tls_model = c_int # enum
tree_decl_with_vis._fields_ = [
    ('common', tree_decl_with_rtl),
    ('assembler_name', tree),
    ('section_name', tree),
    ('comdat_group', tree),
    ('defer_output', c_uint, 1),
    ('hard_register', c_uint, 1),
    ('thread_local', c_uint, 1),
    ('common_flag', c_uint, 1),
    ('in_text_section', c_uint, 1),
    ('in_constant_pool', c_uint, 1),
    ('dllimport_flag', c_uint, 1),
    ('weak_flag', c_uint, 1),
    ('seen_in_bind_expr', c_uint, 1),
    ('comdat_flag', c_uint, 1),
    ('visibility', symbol_visibility, 2),
    ('visibility_specified', c_uint, 1),
    ('tls_model', tls_model, 3),
    ('init_priority_p', c_uint, 1),
    ('shadowed_for_var_p', c_uint, 1),
    ('implicit_section_name_p', c_uint, 1),
]
tree_decl_non_common._fields_ = [
    ('common', tree_decl_with_vis),
    ('saved_tree', tree),
    ('arguments', tree),
    ('result', tree),
    ('vindex', tree),
]
class tree_parm_decl(Structure):
    pass
class var_ann_d(Structure):
    pass
tree_parm_decl._fields_ = [
    ('common', tree_decl_with_rtl),
    ('incoming_rtl', rtx),
    ('ann', POINTER(var_ann_d)),
]
class tree_var_decl(Structure):
    pass
tree_var_decl._fields_ = [
    ('common', tree_decl_with_vis),
    ('ann', POINTER(var_ann_d)),
]
class tree_field_decl(Structure):
    pass
tree_field_decl._fields_ = [
    ('common', tree_decl_common),
    ('offset', tree),
    ('bit_field_type', tree),
    ('qualifier', tree),
    ('bit_offset', tree),
    ('fcontext', tree),
]
class tree_label_decl(Structure):
    pass
tree_label_decl._fields_ = [
    ('common', tree_decl_with_rtl),
    ('label_decl_uid', c_int),
    ('eh_landing_pad_nr', c_int),
]
class tree_result_decl(Structure):
    pass
tree_result_decl._fields_ = [
    ('common', tree_decl_with_rtl),
    ('ann', POINTER(var_ann_d)),
]
class tree_const_decl(Structure):
    pass
tree_const_decl._fields_ = [
    ('common', tree_decl_with_rtl),
]
class tree_type_decl(Structure):
    pass
tree_type_decl._fields_ = [
    ('common', tree_decl_non_common),
]
class tree_function_decl(Structure):
    pass
class function(Structure):
    pass

# values for enumeration 'built_in_function'
built_in_function = c_int # enum

# values for enumeration 'built_in_class'
built_in_class = c_int # enum
tree_function_decl._fields_ = [
    ('common', tree_decl_non_common),
    ('f', POINTER(function)),
    ('personality', tree),
    ('function_specific_target', tree),
    ('function_specific_optimization', tree),
    ('function_code', built_in_function, 11),
    ('built_in_class', built_in_class, 2),
    ('static_ctor_flag', c_uint, 1),
    ('static_dtor_flag', c_uint, 1),
    ('uninlinable', c_uint, 1),
    ('possibly_inlined', c_uint, 1),
    ('novops_flag', c_uint, 1),
    ('returns_twice_flag', c_uint, 1),
    ('malloc_flag', c_uint, 1),
    ('operator_new_flag', c_uint, 1),
    ('declared_inline_flag', c_uint, 1),
    ('regdecl_flag', c_uint, 1),
    ('no_inline_warning_flag', c_uint, 1),
    ('no_instrument_function_entry_exit', c_uint, 1),
    ('no_limit_stack', c_uint, 1),
    ('disregard_inline_limits', c_uint, 1),
    ('pure_flag', c_uint, 1),
    ('looping_const_or_pure_flag', c_uint, 1),
]
class tree_translation_unit_decl(Structure):
    pass
tree_translation_unit_decl._fields_ = [
    ('common', tree_decl_common),
    ('language', STRING),
]
class tree_type(Structure):
    pass
class tree_type_symtab(Union):
    pass
class die_struct(Structure):
    pass
tree_type_symtab._fields_ = [
    ('address', c_int),
    ('pointer', STRING),
    ('die', POINTER(die_struct)),
]
class lang_type(Structure):
    pass
tree_type._fields_ = [
    ('common', tree_common),
    ('values', tree),
    ('size', tree),
    ('size_unit', tree),
    ('attributes', tree),
    ('uid', c_uint),
    ('precision', c_uint, 10),
    ('no_force_blk_flag', c_uint, 1),
    ('needs_constructing_flag', c_uint, 1),
    ('transparent_aggr_flag', c_uint, 1),
    ('restrict_flag', c_uint, 1),
    ('contains_placeholder_bits', c_uint, 2),
    ('mode', machine_mode, 8),
    ('string_flag', c_uint, 1),
    ('lang_flag_0', c_uint, 1),
    ('lang_flag_1', c_uint, 1),
    ('lang_flag_2', c_uint, 1),
    ('lang_flag_3', c_uint, 1),
    ('lang_flag_4', c_uint, 1),
    ('lang_flag_5', c_uint, 1),
    ('lang_flag_6', c_uint, 1),
    ('align', c_uint),
    ('alias_set', alias_set_type),
    ('pointer_to', tree),
    ('reference_to', tree),
    ('symtab', tree_type_symtab),
    ('name', tree),
    ('minval', tree),
    ('maxval', tree),
    ('next_variant', tree),
    ('main_variant', tree),
    ('binfo', tree),
    ('context', tree),
    ('canonical', tree),
    ('lang_specific', POINTER(lang_type)),
]
class tree_list(Structure):
    pass
tree_list._fields_ = [
    ('common', tree_common),
    ('purpose', tree),
    ('value', tree),
]
class tree_vec(Structure):
    pass
tree_vec._fields_ = [
    ('common', tree_common),
    ('length', c_int),
    ('a', tree * 1),
]
class tree_exp(Structure):
    pass
tree_exp._fields_ = [
    ('common', tree_common),
    ('locus', location_t),
    ('block', tree),
    ('operands', tree * 1),
]
class tree_ssa_name(Structure):
    pass
class ptr_info_def(Structure):
    pass
class ssa_use_operand_d(Structure):
    pass
class N17ssa_use_operand_d4DOT_72E(Union):
    pass
N17ssa_use_operand_d4DOT_72E._fields_ = [
    ('stmt', gimple),
    ('ssa_name', tree),
]
ssa_use_operand_d._fields_ = [
    ('prev', POINTER(ssa_use_operand_d)),
    ('next', POINTER(ssa_use_operand_d)),
    ('loc', N17ssa_use_operand_d4DOT_72E),
    ('use', POINTER(tree)),
]
tree_ssa_name._fields_ = [
    ('common', tree_common),
    ('var', tree),
    ('def_stmt', gimple),
    ('version', c_uint),
    ('ptr_info', POINTER(ptr_info_def)),
    ('imm_uses', ssa_use_operand_d),
]
class tree_block(Structure):
    pass
class VEC_tree_gc(Structure):
    pass
tree_block._fields_ = [
    ('common', tree_common),
    ('abstract_flag', c_uint, 1),
    ('block_num', c_uint, 31),
    ('locus', location_t),
    ('vars', tree),
    ('nonlocalized_vars', POINTER(VEC_tree_gc)),
    ('subblocks', tree),
    ('supercontext', tree),
    ('abstract_origin', tree),
    ('fragment_origin', tree),
    ('fragment_chain', tree),
]
class tree_binfo(Structure):
    pass
class VEC_tree_none(Structure):
    pass
class VEC_tree_base(Structure):
    pass
VEC_tree_base._fields_ = [
    ('num', c_uint),
    ('alloc', c_uint),
    ('vec', tree * 1),
]
VEC_tree_none._fields_ = [
    ('base', VEC_tree_base),
]
tree_binfo._fields_ = [
    ('common', tree_common),
    ('offset', tree),
    ('vtable', tree),
    ('virtuals', tree),
    ('vptr_field', tree),
    ('base_accesses', POINTER(VEC_tree_gc)),
    ('inheritance', tree),
    ('vtt_subvtt', tree),
    ('vtt_vptr', tree),
    ('base_binfos', VEC_tree_none),
]
class tree_statement_list(Structure):
    pass
class tree_statement_list_node(Structure):
    pass
tree_statement_list._fields_ = [
    ('common', tree_common),
    ('head', POINTER(tree_statement_list_node)),
    ('tail', POINTER(tree_statement_list_node)),
]
class tree_constructor(Structure):
    pass
class VEC_constructor_elt_gc(Structure):
    pass
tree_constructor._fields_ = [
    ('common', tree_common),
    ('elts', POINTER(VEC_constructor_elt_gc)),
]
class tree_omp_clause(Structure):
    pass

# values for enumeration 'omp_clause_code'
omp_clause_code = c_int # enum
class omp_clause_subcode(Union):
    pass

# values for enumeration 'omp_clause_default_kind'
omp_clause_default_kind = c_int # enum

# values for enumeration 'omp_clause_schedule_kind'
omp_clause_schedule_kind = c_int # enum
omp_clause_subcode._fields_ = [
    ('default_kind', omp_clause_default_kind),
    ('schedule_kind', omp_clause_schedule_kind),
    ('reduction_code', tree_code),
]
tree_omp_clause._fields_ = [
    ('common', tree_common),
    ('locus', location_t),
    ('code', omp_clause_code),
    ('subcode', omp_clause_subcode),
    ('gimple_reduction_init', gimple_seq),
    ('gimple_reduction_merge', gimple_seq),
    ('ops', tree * 1),
]
class tree_optimization_option(Structure):
    pass
class cl_optimization(Structure):
    pass

# values for enumeration 'fp_contract_mode'
fp_contract_mode = c_int # enum
cl_optimization._fields_ = [
    ('x_align_functions', c_int),
    ('x_align_jumps', c_int),
    ('x_align_labels', c_int),
    ('x_align_loops', c_int),
    ('x_flag_sched_stalled_insns', c_int),
    ('x_flag_sched_stalled_insns_dep', c_int),
    ('x_flag_fp_contract_mode', fp_contract_mode),
    ('x_optimize', c_ubyte),
    ('x_optimize_size', c_ubyte),
    ('x_flag_asynchronous_unwind_tables', c_byte),
    ('x_flag_branch_on_count_reg', c_byte),
    ('x_flag_branch_probabilities', c_byte),
    ('x_flag_branch_target_load_optimize', c_byte),
    ('x_flag_branch_target_load_optimize2', c_byte),
    ('x_flag_btr_bb_exclusive', c_byte),
    ('x_flag_caller_saves', c_byte),
    ('x_flag_combine_stack_adjustments', c_byte),
    ('x_flag_no_common', c_byte),
    ('x_flag_compare_elim_after_reload', c_byte),
    ('x_flag_conserve_stack', c_byte),
    ('x_flag_cprop_registers', c_byte),
    ('x_flag_crossjumping', c_byte),
    ('x_flag_cse_follow_jumps', c_byte),
    ('x_flag_cx_fortran_rules', c_byte),
    ('x_flag_cx_limited_range', c_byte),
    ('x_flag_data_sections', c_byte),
    ('x_flag_dce', c_byte),
    ('x_flag_defer_pop', c_byte),
    ('x_flag_delayed_branch', c_byte),
    ('x_flag_delete_null_pointer_checks', c_byte),
    ('x_flag_devirtualize', c_byte),
    ('x_flag_dse', c_byte),
    ('x_flag_early_inlining', c_byte),
    ('x_flag_exceptions', c_byte),
    ('x_flag_expensive_optimizations', c_byte),
    ('x_flag_finite_math_only', c_byte),
    ('x_flag_float_store', c_byte),
    ('x_flag_forward_propagate', c_byte),
    ('x_flag_gcse', c_byte),
    ('x_flag_gcse_after_reload', c_byte),
    ('x_flag_gcse_las', c_byte),
    ('x_flag_gcse_lm', c_byte),
    ('x_flag_gcse_sm', c_byte),
    ('x_flag_graphite_identity', c_byte),
    ('x_flag_guess_branch_prob', c_byte),
    ('x_flag_if_conversion', c_byte),
    ('x_flag_if_conversion2', c_byte),
    ('x_flag_inline_functions', c_byte),
    ('x_flag_inline_functions_called_once', c_byte),
    ('x_flag_inline_small_functions', c_byte),
    ('x_flag_ipa_cp', c_byte),
    ('x_flag_ipa_cp_clone', c_byte),
    ('x_flag_ipa_matrix_reorg', c_byte),
    ('x_flag_ipa_profile', c_byte),
    ('x_flag_ipa_pta', c_byte),
    ('x_flag_ipa_pure_const', c_byte),
    ('x_flag_ipa_reference', c_byte),
    ('x_flag_ipa_sra', c_byte),
    ('x_flag_ivopts', c_byte),
    ('x_flag_jump_tables', c_byte),
    ('x_flag_loop_block', c_byte),
    ('x_flag_loop_flatten', c_byte),
    ('x_flag_loop_interchange', c_byte),
    ('x_flag_loop_parallelize_all', c_byte),
    ('x_flag_loop_strip_mine', c_byte),
    ('x_flag_lto_report', c_byte),
    ('x_flag_ltrans', c_byte),
    ('x_flag_errno_math', c_byte),
    ('x_flag_merge_constants', c_byte),
    ('x_flag_modulo_sched', c_byte),
    ('x_flag_move_loop_invariants', c_byte),
    ('x_flag_non_call_exceptions', c_byte),
    ('x_flag_nothrow_opt', c_byte),
    ('x_flag_omit_frame_pointer', c_byte),
    ('x_flag_regmove', c_byte),
    ('x_flag_optimize_sibling_calls', c_byte),
    ('x_flag_pack_struct', c_byte),
    ('x_flag_peel_loops', c_byte),
    ('x_flag_no_peephole', c_byte),
    ('x_flag_peephole2', c_byte),
    ('x_flag_predictive_commoning', c_byte),
    ('x_flag_prefetch_loop_arrays', c_byte),
    ('x_flag_pcc_struct_return', c_byte),
    ('x_flag_rename_registers', c_byte),
    ('x_flag_reorder_blocks', c_byte),
    ('x_flag_reorder_blocks_and_partition', c_byte),
    ('x_flag_reorder_functions', c_byte),
    ('x_flag_rerun_cse_after_loop', c_byte),
    ('x_flag_resched_modulo_sched', c_byte),
    ('x_flag_rounding_math', c_byte),
    ('x_flag_rtti', c_byte),
    ('x_flag_sched_critical_path_heuristic', c_byte),
    ('x_flag_sched_dep_count_heuristic', c_byte),
    ('x_flag_sched_group_heuristic', c_byte),
    ('x_flag_schedule_interblock', c_byte),
    ('x_flag_sched_last_insn_heuristic', c_byte),
    ('x_flag_sched_pressure', c_byte),
    ('x_flag_sched_rank_heuristic', c_byte),
    ('x_flag_schedule_speculative', c_byte),
    ('x_flag_sched_spec_insn_heuristic', c_byte),
    ('x_flag_schedule_speculative_load', c_byte),
    ('x_flag_schedule_speculative_load_dangerous', c_byte),
    ('x_flag_sched2_use_superblocks', c_byte),
    ('x_flag_schedule_insns', c_byte),
    ('x_flag_schedule_insns_after_reload', c_byte),
    ('x_flag_section_anchors', c_byte),
    ('x_flag_sel_sched_pipelining', c_byte),
    ('x_flag_sel_sched_pipelining_outer_loops', c_byte),
    ('x_flag_sel_sched_reschedule_pipelined', c_byte),
    ('x_flag_selective_scheduling', c_byte),
    ('x_flag_selective_scheduling2', c_byte),
    ('x_flag_short_double', c_byte),
    ('x_flag_short_enums', c_byte),
    ('x_flag_short_wchar', c_byte),
    ('x_flag_signaling_nans', c_byte),
    ('x_flag_signed_zeros', c_byte),
    ('x_flag_single_precision_constant', c_byte),
    ('x_flag_split_ivs_in_unroller', c_byte),
    ('x_flag_split_wide_types', c_byte),
    ('x_flag_strict_aliasing', c_byte),
    ('x_flag_strict_enums', c_byte),
    ('x_flag_thread_jumps', c_byte),
    ('x_flag_threadsafe_statics', c_byte),
    ('x_flag_toplevel_reorder', c_byte),
    ('x_flag_trapping_math', c_byte),
    ('x_flag_trapv', c_byte),
    ('x_flag_tree_bit_ccp', c_byte),
    ('x_flag_tree_builtin_call_dce', c_byte),
    ('x_flag_tree_ccp', c_byte),
    ('x_flag_tree_ch', c_byte),
    ('x_flag_tree_copy_prop', c_byte),
    ('x_flag_tree_copyrename', c_byte),
    ('x_flag_tree_cselim', c_byte),
    ('x_flag_tree_dce', c_byte),
    ('x_flag_tree_dom', c_byte),
    ('x_flag_tree_dse', c_byte),
    ('x_flag_tree_forwprop', c_byte),
    ('x_flag_tree_fre', c_byte),
    ('x_flag_tree_loop_distribute_patterns', c_byte),
    ('x_flag_tree_loop_distribution', c_byte),
    ('x_flag_tree_loop_if_convert', c_byte),
    ('x_flag_tree_loop_if_convert_stores', c_byte),
    ('x_flag_tree_loop_im', c_byte),
    ('x_flag_tree_loop_ivcanon', c_byte),
    ('x_flag_tree_loop_optimize', c_byte),
    ('x_flag_tree_live_range_split', c_byte),
    ('x_flag_tree_phiprop', c_byte),
    ('x_flag_tree_pre', c_byte),
    ('x_flag_tree_pta', c_byte),
    ('x_flag_tree_reassoc', c_byte),
    ('x_flag_tree_scev_cprop', c_byte),
    ('x_flag_tree_sink', c_byte),
    ('x_flag_tree_slp_vectorize', c_byte),
    ('x_flag_tree_sra', c_byte),
    ('x_flag_tree_switch_conversion', c_byte),
    ('x_flag_tree_ter', c_byte),
    ('x_flag_tree_vect_loop_version', c_byte),
    ('x_flag_tree_vectorize', c_byte),
    ('x_flag_tree_vrp', c_byte),
    ('x_flag_unit_at_a_time', c_byte),
    ('x_flag_unroll_all_loops', c_byte),
    ('x_flag_unroll_loops', c_byte),
    ('x_flag_unsafe_loop_optimizations', c_byte),
    ('x_flag_unsafe_math_optimizations', c_byte),
    ('x_flag_unswitch_loops', c_byte),
    ('x_flag_unwind_tables', c_byte),
    ('x_flag_var_tracking', c_byte),
    ('x_flag_var_tracking_assignments', c_byte),
    ('x_flag_var_tracking_assignments_toggle', c_byte),
    ('x_flag_var_tracking_uninit', c_byte),
    ('x_flag_variable_expansion_in_unroller', c_byte),
    ('x_flag_vect_cost_model', c_byte),
    ('x_flag_value_profile_transformations', c_byte),
    ('x_flag_web', c_byte),
    ('x_flag_whole_program', c_byte),
    ('x_flag_wpa', c_byte),
    ('x_flag_wrapv', c_byte),
]
tree_optimization_option._fields_ = [
    ('common', tree_common),
    ('opts', cl_optimization),
]
class tree_target_option(Structure):
    pass
class cl_target_option(Structure):
    pass
cl_target_option._fields_ = [
    ('ix86_isa_flags_explicit', c_int),
    ('ix86_target_flags_explicit', c_int),
    ('x_target_flags', c_int),
    ('x_ix86_isa_flags', c_int),
    ('arch', c_ubyte),
    ('arch_specified', c_ubyte),
    ('branch_cost', c_ubyte),
    ('fpmath', c_ubyte),
    ('schedule', c_ubyte),
    ('tune', c_ubyte),
    ('tune_defaulted', c_ubyte),
]
tree_target_option._fields_ = [
    ('common', tree_common),
    ('opts', cl_target_option),
]
tree_node._fields_ = [
    ('base', tree_base),
    ('common', tree_common),
    ('int_cst', tree_int_cst),
    ('real_cst', tree_real_cst),
    ('fixed_cst', tree_fixed_cst),
    ('vector', tree_vector),
    ('string', tree_string),
    ('complex', tree_complex),
    ('identifier', tree_identifier),
    ('decl_minimal', tree_decl_minimal),
    ('decl_common', tree_decl_common),
    ('decl_with_rtl', tree_decl_with_rtl),
    ('decl_non_common', tree_decl_non_common),
    ('parm_decl', tree_parm_decl),
    ('decl_with_vis', tree_decl_with_vis),
    ('var_decl', tree_var_decl),
    ('field_decl', tree_field_decl),
    ('label_decl', tree_label_decl),
    ('result_decl', tree_result_decl),
    ('const_decl', tree_const_decl),
    ('type_decl', tree_type_decl),
    ('function_decl', tree_function_decl),
    ('translation_unit_decl', tree_translation_unit_decl),
    ('type', tree_type),
    ('list', tree_list),
    ('vec', tree_vec),
    ('exp', tree_exp),
    ('ssa_name', tree_ssa_name),
    ('block', tree_block),
    ('binfo', tree_binfo),
    ('stmt_list', tree_statement_list),
    ('constructor', tree_constructor),
    ('omp_clause', tree_omp_clause),
    ('optimization', tree_optimization_option),
    ('target_option', tree_target_option),
]
const_tree = POINTER(tree_node)
class gimple_statement_base(Structure):
    pass

# values for enumeration 'gimple_code'
gimple_code = c_int # enum
gimple_statement_base._fields_ = [
    ('code', gimple_code, 8),
    ('no_warning', c_uint, 1),
    ('visited', c_uint, 1),
    ('nontemporal_move', c_uint, 1),
    ('plf', c_uint, 2),
    ('modified', c_uint, 1),
    ('has_volatile_ops', c_uint, 1),
    ('pad', c_uint, 1),
    ('subcode', c_uint, 16),
    ('uid', c_uint),
    ('location', location_t),
    ('num_ops', c_uint),
    ('bb', POINTER(basic_block_def)),
    ('block', tree),
]
class gimple_statement_with_ops(Structure):
    pass
class gimple_statement_with_ops_base(Structure):
    pass
class def_optype_d(Structure):
    pass
class use_optype_d(Structure):
    pass
gimple_statement_with_ops_base._fields_ = [
    ('gsbase', gimple_statement_base),
    ('def_ops', POINTER(def_optype_d)),
    ('use_ops', POINTER(use_optype_d)),
]
gimple_statement_with_ops._fields_ = [
    ('opbase', gimple_statement_with_ops_base),
    ('op', tree * 1),
]
class gimple_statement_with_memory_ops_base(Structure):
    pass
gimple_statement_with_memory_ops_base._fields_ = [
    ('opbase', gimple_statement_with_ops_base),
    ('vdef', tree),
    ('vuse', tree),
]
class gimple_statement_with_memory_ops(Structure):
    pass
gimple_statement_with_memory_ops._fields_ = [
    ('membase', gimple_statement_with_memory_ops_base),
    ('op', tree * 1),
]
class gimple_statement_call(Structure):
    pass
class pt_solution(Structure):
    pass
pt_solution._fields_ = [
    ('anything', c_uint, 1),
    ('nonlocal', c_uint, 1),
    ('escaped', c_uint, 1),
    ('ipa_escaped', c_uint, 1),
    ('null', c_uint, 1),
    ('vars_contains_global', c_uint, 1),
    ('vars_contains_restrict', c_uint, 1),
    ('vars', bitmap),
]
gimple_statement_call._fields_ = [
    ('membase', gimple_statement_with_memory_ops_base),
    ('call_used', pt_solution),
    ('call_clobbered', pt_solution),
    ('op', tree * 1),
]
class gimple_statement_omp(Structure):
    pass
gimple_statement_omp._fields_ = [
    ('gsbase', gimple_statement_base),
    ('body', gimple_seq),
]
class gimple_statement_bind(Structure):
    pass
gimple_statement_bind._fields_ = [
    ('gsbase', gimple_statement_base),
    ('vars', tree),
    ('block', tree),
    ('body', gimple_seq),
]
class gimple_statement_catch(Structure):
    pass
gimple_statement_catch._fields_ = [
    ('gsbase', gimple_statement_base),
    ('types', tree),
    ('handler', gimple_seq),
]
class gimple_statement_eh_filter(Structure):
    pass
gimple_statement_eh_filter._fields_ = [
    ('gsbase', gimple_statement_base),
    ('types', tree),
    ('failure', gimple_seq),
]
class gimple_statement_eh_mnt(Structure):
    pass
gimple_statement_eh_mnt._fields_ = [
    ('gsbase', gimple_statement_base),
    ('fndecl', tree),
]
class gimple_statement_phi(Structure):
    pass
class phi_arg_d(Structure):
    pass
phi_arg_d._fields_ = [
    ('imm_use', ssa_use_operand_d),
    ('def', tree),
    ('locus', location_t),
]
gimple_statement_phi._fields_ = [
    ('gsbase', gimple_statement_base),
    ('capacity', c_uint),
    ('nargs', c_uint),
    ('result', tree),
    ('args', phi_arg_d * 1),
]
class gimple_statement_eh_ctrl(Structure):
    pass
gimple_statement_eh_ctrl._fields_ = [
    ('gsbase', gimple_statement_base),
    ('region', c_int),
]
class gimple_statement_try(Structure):
    pass
gimple_statement_try._fields_ = [
    ('gsbase', gimple_statement_base),
    ('eval', gimple_seq),
    ('cleanup', gimple_seq),
]
class gimple_statement_wce(Structure):
    pass
gimple_statement_wce._fields_ = [
    ('gsbase', gimple_statement_base),
    ('cleanup', gimple_seq),
]
class gimple_statement_asm(Structure):
    pass
gimple_statement_asm._fields_ = [
    ('membase', gimple_statement_with_memory_ops_base),
    ('string', STRING),
    ('ni', c_ubyte),
    ('no', c_ubyte),
    ('nc', c_ubyte),
    ('nl', c_ubyte),
    ('op', tree * 1),
]
class gimple_statement_omp_critical(Structure):
    pass
gimple_statement_omp_critical._fields_ = [
    ('omp', gimple_statement_omp),
    ('name', tree),
]
class gimple_statement_omp_for(Structure):
    pass
class gimple_omp_for_iter(Structure):
    pass
gimple_statement_omp_for._fields_ = [
    ('omp', gimple_statement_omp),
    ('clauses', tree),
    ('collapse', size_t),
    ('iter', POINTER(gimple_omp_for_iter)),
    ('pre_body', gimple_seq),
]
class gimple_statement_omp_parallel(Structure):
    pass
gimple_statement_omp_parallel._fields_ = [
    ('omp', gimple_statement_omp),
    ('clauses', tree),
    ('child_fn', tree),
    ('data_arg', tree),
]
class gimple_statement_omp_task(Structure):
    pass
gimple_statement_omp_task._fields_ = [
    ('par', gimple_statement_omp_parallel),
    ('copy_fn', tree),
    ('arg_size', tree),
    ('arg_align', tree),
]
class gimple_statement_omp_sections(Structure):
    pass
gimple_statement_omp_sections._fields_ = [
    ('omp', gimple_statement_omp),
    ('clauses', tree),
    ('control', tree),
]
class gimple_statement_omp_single(Structure):
    pass
gimple_statement_omp_single._fields_ = [
    ('omp', gimple_statement_omp),
    ('clauses', tree),
]
class gimple_statement_omp_continue(Structure):
    pass
gimple_statement_omp_continue._fields_ = [
    ('gsbase', gimple_statement_base),
    ('control_def', tree),
    ('control_use', tree),
]
class gimple_statement_omp_atomic_load(Structure):
    pass
gimple_statement_omp_atomic_load._fields_ = [
    ('gsbase', gimple_statement_base),
    ('rhs', tree),
    ('lhs', tree),
]
class gimple_statement_omp_atomic_store(Structure):
    pass
gimple_statement_omp_atomic_store._fields_ = [
    ('gsbase', gimple_statement_base),
    ('val', tree),
]
gimple_statement_d._fields_ = [
    ('gsbase', gimple_statement_base),
    ('gsops', gimple_statement_with_ops),
    ('gsmembase', gimple_statement_with_memory_ops_base),
    ('gsmem', gimple_statement_with_memory_ops),
    ('gimple_call', gimple_statement_call),
    ('omp', gimple_statement_omp),
    ('gimple_bind', gimple_statement_bind),
    ('gimple_catch', gimple_statement_catch),
    ('gimple_eh_filter', gimple_statement_eh_filter),
    ('gimple_eh_mnt', gimple_statement_eh_mnt),
    ('gimple_phi', gimple_statement_phi),
    ('gimple_eh_ctrl', gimple_statement_eh_ctrl),
    ('gimple_try', gimple_statement_try),
    ('gimple_wce', gimple_statement_wce),
    ('gimple_asm', gimple_statement_asm),
    ('gimple_omp_critical', gimple_statement_omp_critical),
    ('gimple_omp_for', gimple_statement_omp_for),
    ('gimple_omp_parallel', gimple_statement_omp_parallel),
    ('gimple_omp_task', gimple_statement_omp_task),
    ('gimple_omp_sections', gimple_statement_omp_sections),
    ('gimple_omp_single', gimple_statement_omp_single),
    ('gimple_omp_continue', gimple_statement_omp_continue),
    ('gimple_omp_atomic_load', gimple_statement_omp_atomic_load),
    ('gimple_omp_atomic_store', gimple_statement_omp_atomic_store),
]
const_gimple = POINTER(gimple_statement_d)
class section(Union):
    pass
section._fields_ = [
]
class cl_option(Structure):
    pass
cl_option._fields_ = [
]
class cl_decoded_option(Structure):
    pass
cl_decoded_option._fields_ = [
]
class cl_option_handlers(Structure):
    pass
cl_option_handlers._fields_ = [
]
class diagnostic_context(Structure):
    pass
class gimple_seq_node_d(Structure):
    pass
gimple_seq_node = POINTER(gimple_seq_node_d)
gimple_seq_d._fields_ = [
    ('first', gimple_seq_node),
    ('last', gimple_seq_node),
    ('next_free', gimple_seq),
]
const_gimple_seq = POINTER(gimple_seq_d)
addr_space_t = c_ubyte

# values for enumeration 'ir_type'
ir_type = c_int # enum
class cpp_reader(Structure):
    pass
cpp_reader._fields_ = [
]

# values for enumeration 'unwind_info_type'
unwind_info_type = c_int # enum
reg_class_t = c_int
class lang_identifier(Structure):
    pass
class cxx_binding(Structure):
    pass
lang_identifier._fields_ = [
    ('c_common', c_common_identifier),
    ('namespace_bindings', POINTER(cxx_binding)),
    ('bindings', POINTER(cxx_binding)),
    ('class_template_info', tree),
    ('label_value', tree),
]
class template_parm_index_s(Structure):
    pass
template_parm_index_s._fields_ = [
    ('common', tree_common),
    ('index', c_int),
    ('level', c_int),
    ('orig_level', c_int),
    ('num_siblings', c_int),
    ('decl', tree),
]
template_parm_index = template_parm_index_s
class ptrmem_cst(Structure):
    pass
ptrmem_cst._fields_ = [
    ('common', tree_common),
    ('member', tree),
]
ptrmem_cst_t = POINTER(ptrmem_cst)
class tree_overload(Structure):
    pass
tree_overload._fields_ = [
    ('common', tree_common),
    ('function', tree),
]
class tree_baselink(Structure):
    pass
tree_baselink._fields_ = [
    ('common', tree_common),
    ('binfo', tree),
    ('functions', tree),
    ('access_binfo', tree),
]

# values for enumeration 'cp_id_kind'
cp_id_kind = c_int # enum

# values for enumeration 'cpp0x_warn_str'
cpp0x_warn_str = c_int # enum

# values for enumeration 'composite_pointer_operation'
composite_pointer_operation = c_int # enum

# values for enumeration 'expr_list_kind'
expr_list_kind = c_int # enum

# values for enumeration 'impl_conv_rhs'
impl_conv_rhs = c_int # enum

# values for enumeration 'impl_conv_void'
impl_conv_void = c_int # enum
class tree_default_arg(Structure):
    pass
class cp_token_cache(Structure):
    pass
tree_default_arg._fields_ = [
    ('common', tree_common),
    ('tokens', POINTER(cp_token_cache)),
    ('instantiations', POINTER(VEC_tree_gc)),
]
cp_token_cache._fields_ = [
]
class tree_static_assert(Structure):
    pass
tree_static_assert._fields_ = [
    ('common', tree_common),
    ('condition', tree),
    ('message', tree),
    ('location', location_t),
]
class tree_argument_pack_select(Structure):
    pass
tree_argument_pack_select._fields_ = [
    ('common', tree_common),
    ('argument_pack', tree),
    ('index', c_int),
]

# values for enumeration 'cp_trait_kind'
cp_trait_kind = c_int # enum
class tree_trait_expr(Structure):
    pass
tree_trait_expr._fields_ = [
    ('common', tree_common),
    ('type1', tree),
    ('type2', tree),
    ('kind', cp_trait_kind),
]

# values for enumeration 'cp_lambda_default_capture_mode_type'
cp_lambda_default_capture_mode_type = c_int # enum
class tree_lambda_expr(Structure):
    pass
tree_lambda_expr._fields_ = [
    ('common', tree_common),
    ('locus', location_t),
    ('default_capture_mode', cp_lambda_default_capture_mode_type),
    ('capture_list', tree),
    ('this_capture', tree),
    ('return_type', tree),
    ('extra_scope', tree),
    ('discriminator', c_int),
]
class qualified_typedef_usage_s(Structure):
    pass
qualified_typedef_usage_s._fields_ = [
    ('typedef_decl', tree),
    ('context', tree),
    ('locus', location_t),
]
qualified_typedef_usage_t = qualified_typedef_usage_s
class VEC_qualified_typedef_usage_t_base(Structure):
    pass
VEC_qualified_typedef_usage_t_base._fields_ = [
    ('num', c_uint),
    ('alloc', c_uint),
    ('vec', qualified_typedef_usage_t * 1),
]
class VEC_qualified_typedef_usage_t_none(Structure):
    pass
VEC_qualified_typedef_usage_t_none._fields_ = [
    ('base', VEC_qualified_typedef_usage_t_base),
]
class VEC_qualified_typedef_usage_t_gc(Structure):
    pass
VEC_qualified_typedef_usage_t_gc._fields_ = [
    ('base', VEC_qualified_typedef_usage_t_base),
]
class tree_template_info(Structure):
    pass
tree_template_info._fields_ = [
    ('common', tree_common),
    ('typedefs_needing_access_checking', POINTER(VEC_qualified_typedef_usage_t_gc)),
]

# values for enumeration 'cp_tree_node_structure_enum'
cp_tree_node_structure_enum = c_int # enum
class lang_tree_node(Union):
    pass
lang_tree_node._fields_ = [
    ('generic', tree_node),
    ('tpi', template_parm_index_s),
    ('ptrmem', ptrmem_cst),
    ('overload', tree_overload),
    ('baselink', tree_baselink),
    ('default_arg', tree_default_arg),
    ('identifier', lang_identifier),
    ('static_assertion', tree_static_assert),
    ('argument_pack_select', tree_argument_pack_select),
    ('trait_expression', tree_trait_expr),
    ('lambda_expression', tree_lambda_expr),
    ('template_info', tree_template_info),
]

# values for enumeration 'cp_tree_index'
cp_tree_index = c_int # enum
class saved_scope(Structure):
    pass
class VEC_cxx_saved_binding_gc(Structure):
    pass
class cp_binding_level(Structure):
    pass
saved_scope._fields_ = [
    ('old_bindings', POINTER(VEC_cxx_saved_binding_gc)),
    ('old_namespace', tree),
    ('decl_ns_list', POINTER(VEC_tree_gc)),
    ('class_name', tree),
    ('class_type', tree),
    ('access_specifier', tree),
    ('function_decl', tree),
    ('lang_base', POINTER(VEC_tree_gc)),
    ('lang_name', tree),
    ('template_parms', tree),
    ('x_previous_class_level', POINTER(cp_binding_level)),
    ('x_saved_tree', tree),
    ('x_processing_template_decl', c_int),
    ('x_processing_specialization', c_int),
    ('x_processing_explicit_instantiation', c_uint, 1),
    ('need_pop_function_context', c_uint, 1),
    ('unevaluated_operand', c_int),
    ('inhibit_evaluation_warnings', c_int),
    ('x_stmt_tree', stmt_tree_s),
    ('class_bindings', POINTER(cp_binding_level)),
    ('bindings', POINTER(cp_binding_level)),
    ('prev', POINTER(saved_scope)),
]
class cxx_int_tree_map(Structure):
    pass
cxx_int_tree_map._fields_ = [
    ('uid', c_uint),
    ('to', tree),
]
class language_function(Structure):
    pass
language_function._fields_ = [
    ('base', c_language_function),
    ('x_cdtor_label', tree),
    ('x_current_class_ptr', tree),
    ('x_current_class_ref', tree),
    ('x_eh_spec_block', tree),
    ('x_in_charge_parm', tree),
    ('x_vtt_parm', tree),
    ('x_return_value', tree),
    ('returns_value', c_uint, 1),
    ('returns_null', c_uint, 1),
    ('returns_abnormally', c_uint, 1),
    ('in_function_try_handler', c_uint, 1),
    ('in_base_initializer', c_uint, 1),
    ('can_throw', c_uint, 1),
    ('x_named_labels', htab_t),
    ('bindings', POINTER(cp_binding_level)),
    ('x_local_names', POINTER(VEC_tree_gc)),
    ('extern_decl_map', htab_t),
]

# values for enumeration 'languages'
languages = c_int # enum
class tree_pair_s(Structure):
    pass
tree_pair_s._fields_ = [
    ('purpose', tree),
    ('value', tree),
]
tree_pair_p = POINTER(tree_pair_s)
class VEC_tree_pair_s_none(Structure):
    pass
class VEC_tree_pair_s_base(Structure):
    pass
VEC_tree_pair_s_base._fields_ = [
    ('num', c_uint),
    ('alloc', c_uint),
    ('vec', tree_pair_s * 1),
]
VEC_tree_pair_s_none._fields_ = [
    ('base', VEC_tree_pair_s_base),
]
class VEC_tree_pair_s_gc(Structure):
    pass
VEC_tree_pair_s_gc._fields_ = [
    ('base', VEC_tree_pair_s_base),
]
class lang_type_header(Structure):
    pass
lang_type_header._fields_ = [
    ('is_lang_type_class', c_uint, 1),
    ('has_type_conversion', c_uint, 1),
    ('has_copy_ctor', c_uint, 1),
    ('has_default_ctor', c_uint, 1),
    ('const_needs_init', c_uint, 1),
    ('ref_needs_init', c_uint, 1),
    ('has_const_copy_assign', c_uint, 1),
    ('spare', c_uint, 1),
]
class lang_type_class(Structure):
    pass
class binding_table_s(Structure):
    pass
binding_table = POINTER(binding_table_s)
lang_type_class._fields_ = [
    ('h', lang_type_header),
    ('align', c_ubyte),
    ('has_mutable', c_uint, 1),
    ('com_interface', c_uint, 1),
    ('non_pod_class', c_uint, 1),
    ('nearly_empty_p', c_uint, 1),
    ('user_align', c_uint, 1),
    ('has_copy_assign', c_uint, 1),
    ('has_new', c_uint, 1),
    ('has_array_new', c_uint, 1),
    ('gets_delete', c_uint, 2),
    ('interface_only', c_uint, 1),
    ('interface_unknown', c_uint, 1),
    ('contains_empty_class_p', c_uint, 1),
    ('anon_aggr', c_uint, 1),
    ('non_zero_init', c_uint, 1),
    ('empty_p', c_uint, 1),
    ('vec_new_uses_cookie', c_uint, 1),
    ('declared_class', c_uint, 1),
    ('diamond_shaped', c_uint, 1),
    ('repeated_base', c_uint, 1),
    ('being_defined', c_uint, 1),
    ('java_interface', c_uint, 1),
    ('debug_requested', c_uint, 1),
    ('fields_readonly', c_uint, 1),
    ('use_template', c_uint, 2),
    ('ptrmemfunc_flag', c_uint, 1),
    ('was_anonymous', c_uint, 1),
    ('lazy_default_ctor', c_uint, 1),
    ('lazy_copy_ctor', c_uint, 1),
    ('lazy_copy_assign', c_uint, 1),
    ('lazy_destructor', c_uint, 1),
    ('has_const_copy_ctor', c_uint, 1),
    ('has_complex_copy_ctor', c_uint, 1),
    ('has_complex_copy_assign', c_uint, 1),
    ('non_aggregate', c_uint, 1),
    ('has_complex_dflt', c_uint, 1),
    ('has_list_ctor', c_uint, 1),
    ('non_std_layout', c_uint, 1),
    ('is_literal', c_uint, 1),
    ('lazy_move_ctor', c_uint, 1),
    ('lazy_move_assign', c_uint, 1),
    ('has_complex_move_ctor', c_uint, 1),
    ('has_complex_move_assign', c_uint, 1),
    ('has_constexpr_ctor', c_uint, 1),
    ('dummy', c_uint, 3),
    ('primary_base', tree),
    ('vcall_indices', POINTER(VEC_tree_pair_s_gc)),
    ('vtables', tree),
    ('typeinfo_var', tree),
    ('vbases', POINTER(VEC_tree_gc)),
    ('nested_udts', binding_table),
    ('as_base', tree),
    ('pure_virtuals', POINTER(VEC_tree_gc)),
    ('friend_classes', tree),
    ('methods', POINTER(VEC_tree_gc)),
    ('key_method', tree),
    ('decl_list', tree),
    ('template_info', tree),
    ('befriending_classes', tree),
    ('objc_info', tree),
    ('sorted_fields', POINTER(sorted_fields_type)),
    ('lambda_expr', tree),
]
class lang_type_ptrmem(Structure):
    pass
lang_type_ptrmem._fields_ = [
    ('h', lang_type_header),
    ('record', tree),
]
class lang_type_u(Union):
    pass
lang_type_u._fields_ = [
    ('h', lang_type_header),
    ('c', lang_type_class),
    ('ptrmem', lang_type_ptrmem),
]
lang_type._fields_ = [
    ('u', lang_type_u),
]
class lang_decl_base(Structure):
    pass
lang_decl_base._fields_ = [
    ('selector', c_uint, 16),
    ('language', languages, 4),
    ('use_template', c_uint, 2),
    ('not_really_extern', c_uint, 1),
    ('initialized_in_class', c_uint, 1),
    ('repo_available_p', c_uint, 1),
    ('threadprivate_or_deleted_p', c_uint, 1),
    ('anticipated_p', c_uint, 1),
    ('friend_attr', c_uint, 1),
    ('template_conv_p', c_uint, 1),
    ('odr_used', c_uint, 1),
    ('u2sel', c_uint, 1),
]
class lang_decl_min(Structure):
    pass
class lang_decl_u2(Union):
    pass
lang_decl_u2._fields_ = [
    ('access', tree),
    ('discriminator', c_int),
]
lang_decl_min._fields_ = [
    ('base', lang_decl_base),
    ('template_info', tree),
    ('u2', lang_decl_u2),
]
class lang_decl_fn(Structure):
    pass
class lang_decl_u5(Union):
    pass
lang_decl_u5._pack_ = 4
lang_decl_u5._fields_ = [
    ('cloned_function', tree),
    ('fixed_offset', c_longlong),
]
class lang_decl_u3(Union):
    pass
lang_decl_u3._fields_ = [
    ('pending_inline_info', POINTER(cp_token_cache)),
    ('saved_language_function', POINTER(language_function)),
]
lang_decl_fn._fields_ = [
    ('min', lang_decl_min),
    ('operator_code', tree_code, 16),
    ('global_ctor_p', c_uint, 1),
    ('global_dtor_p', c_uint, 1),
    ('constructor_attr', c_uint, 1),
    ('destructor_attr', c_uint, 1),
    ('assignment_operator_p', c_uint, 1),
    ('static_function', c_uint, 1),
    ('pure_virtual', c_uint, 1),
    ('defaulted_p', c_uint, 1),
    ('has_in_charge_parm_p', c_uint, 1),
    ('has_vtt_parm_p', c_uint, 1),
    ('pending_inline_p', c_uint, 1),
    ('nonconverting', c_uint, 1),
    ('thunk_p', c_uint, 1),
    ('this_thunk_p', c_uint, 1),
    ('hidden_friend_p', c_uint, 1),
    ('befriending_classes', tree),
    ('context', tree),
    ('u5', lang_decl_u5),
    ('u', lang_decl_u3),
]
class lang_decl_ns(Structure):
    pass
lang_decl_ns._fields_ = [
    ('base', lang_decl_base),
    ('level', POINTER(cp_binding_level)),
]
class lang_decl_parm(Structure):
    pass
lang_decl_parm._fields_ = [
    ('base', lang_decl_base),
    ('level', c_int),
    ('index', c_int),
]
class lang_decl_u(Union):
    pass
lang_decl_u._fields_ = [
    ('base', lang_decl_base),
    ('min', lang_decl_min),
    ('fn', lang_decl_fn),
    ('ns', lang_decl_ns),
    ('parm', lang_decl_parm),
]
lang_decl._fields_ = [
    ('u', lang_decl_u),
]
class aggr_init_expr_arg_iterator_d(Structure):
    pass
aggr_init_expr_arg_iterator_d._fields_ = [
    ('t', tree),
    ('n', c_int),
    ('i', c_int),
]
aggr_init_expr_arg_iterator = aggr_init_expr_arg_iterator_d

# values for enumeration 'tag_types'
tag_types = c_int # enum

# values for enumeration 'cp_lvalue_kind_flags'
cp_lvalue_kind_flags = c_int # enum
cp_lvalue_kind = c_int

# values for enumeration 'tmpl_spec_kind'
tmpl_spec_kind = c_int # enum

# values for enumeration 'access_kind'
access_kind = c_int # enum

# values for enumeration 'special_function_kind'
special_function_kind = c_int # enum

# values for enumeration 'linkage_kind'
linkage_kind = c_int # enum

# values for enumeration 'duration_kind'
duration_kind = c_int # enum

# values for enumeration 'tsubst_flags'
tsubst_flags = c_int # enum
tsubst_flags_t = c_int

# values for enumeration 'base_access_flags'
base_access_flags = c_int # enum
base_access = c_int

# values for enumeration 'deferring_kind'
deferring_kind = c_int # enum

# values for enumeration 'base_kind'
base_kind = c_int # enum

# values for enumeration 'unification_kind_t'
unification_kind_t = c_int # enum

# values for enumeration 'overload_flags'
overload_flags = c_int # enum
class operator_name_info_t(Structure):
    pass
operator_name_info_t._fields_ = [
    ('identifier', tree),
    ('name', STRING),
    ('mangled_name', STRING),
    ('arity', c_int),
]
cp_cv_quals = c_int

# values for enumeration 'cp_storage_class'
cp_storage_class = c_int # enum

# values for enumeration 'cp_decl_spec'
cp_decl_spec = c_int # enum
class cp_decl_specifier_seq(Structure):
    pass
cp_decl_specifier_seq._fields_ = [
    ('specs', c_uint * 15),
    ('type_location', location_t),
    ('type', tree),
    ('attributes', tree),
    ('redefined_builtin_type', tree),
    ('storage_class', cp_storage_class),
    ('user_defined_type_p', c_uint, 1),
    ('multiple_types_p', c_uint, 1),
    ('conflicting_specifiers_p', c_uint, 1),
    ('any_specifiers_p', c_uint, 1),
    ('any_type_specifiers_p', c_uint, 1),
    ('explicit_int_p', c_uint, 1),
    ('explicit_int128_p', c_uint, 1),
    ('explicit_char_p', c_uint, 1),
]

# values for enumeration 'cp_declarator_kind'
cp_declarator_kind = c_int # enum
class cp_declarator(Structure):
    pass
class cp_parameter_declarator(Structure):
    pass
cp_parameter_declarator._fields_ = [
    ('next', POINTER(cp_parameter_declarator)),
    ('decl_specifiers', cp_decl_specifier_seq),
    ('declarator', POINTER(cp_declarator)),
    ('default_argument', tree),
    ('ellipsis_p', c_bool),
]
class N13cp_declarator4DOT_89E(Union):
    pass
class N13cp_declarator4DOT_894DOT_90E(Structure):
    pass
N13cp_declarator4DOT_894DOT_90E._fields_ = [
    ('qualifying_scope', tree),
    ('unqualified_name', tree),
    ('sfk', special_function_kind),
]
class N13cp_declarator4DOT_894DOT_91E(Structure):
    pass
N13cp_declarator4DOT_894DOT_91E._fields_ = [
    ('parameters', tree),
    ('qualifiers', cp_cv_quals),
    ('exception_specification', tree),
    ('late_return_type', tree),
]
class N13cp_declarator4DOT_894DOT_92E(Structure):
    pass
N13cp_declarator4DOT_894DOT_92E._fields_ = [
    ('bounds', tree),
]
class N13cp_declarator4DOT_894DOT_93E(Structure):
    pass
N13cp_declarator4DOT_894DOT_93E._fields_ = [
    ('qualifiers', cp_cv_quals),
    ('class_type', tree),
]
class N13cp_declarator4DOT_894DOT_94E(Structure):
    pass
N13cp_declarator4DOT_894DOT_94E._fields_ = [
    ('qualifiers', cp_cv_quals),
    ('rvalue_ref', c_bool),
]
N13cp_declarator4DOT_89E._fields_ = [
    ('id', N13cp_declarator4DOT_894DOT_90E),
    ('function', N13cp_declarator4DOT_894DOT_91E),
    ('array', N13cp_declarator4DOT_894DOT_92E),
    ('pointer', N13cp_declarator4DOT_894DOT_93E),
    ('reference', N13cp_declarator4DOT_894DOT_94E),
]
cp_declarator._fields_ = [
    ('kind', cp_declarator_kind, 4),
    ('parameter_pack_p', c_uint, 1),
    ('id_loc', location_t),
    ('attributes', tree),
    ('declarator', POINTER(cp_declarator)),
    ('u', N13cp_declarator4DOT_89E),
]
class tinst_level(Structure):
    pass
tinst_level._fields_ = [
    ('next', POINTER(tinst_level)),
    ('decl', tree),
    ('locus', location_t),
    ('in_system_header_p', c_bool),
]
walk_namespaces_fn = CFUNCTYPE(c_int, tree, c_void_p)
class deferred_access_check(Structure):
    pass
deferred_access_check._fields_ = [
    ('binfo', tree),
    ('decl', tree),
    ('diag_decl', tree),
]
class VEC_deferred_access_check_none(Structure):
    pass
class VEC_deferred_access_check_base(Structure):
    pass
VEC_deferred_access_check_base._fields_ = [
    ('num', c_uint),
    ('alloc', c_uint),
    ('vec', deferred_access_check * 1),
]
VEC_deferred_access_check_none._fields_ = [
    ('base', VEC_deferred_access_check_base),
]
class VEC_deferred_access_check_gc(Structure):
    pass
VEC_deferred_access_check_gc._fields_ = [
    ('base', VEC_deferred_access_check_base),
]

# values for unnamed enumeration

# values for unnamed enumeration
binding_table_s._fields_ = [
]
class binding_entry_s(Structure):
    pass
binding_entry = POINTER(binding_entry_s)
bt_foreach_proc = CFUNCTYPE(None, binding_entry, c_void_p)
binding_entry_s._fields_ = [
    ('chain', binding_entry),
    ('name', tree),
    ('type', tree),
]
cxx_scope = cp_binding_level
cxx_binding._fields_ = [
    ('previous', POINTER(cxx_binding)),
    ('value', tree),
    ('type', tree),
    ('scope', POINTER(cxx_scope)),
    ('value_is_inherited', c_uint, 1),
    ('is_local', c_uint, 1),
]
class cxx_saved_binding(Structure):
    pass
cxx_saved_binding._fields_ = [
    ('identifier', tree),
    ('binding', POINTER(cxx_binding)),
    ('real_type_value', tree),
]
class VEC_cxx_saved_binding_base(Structure):
    pass
VEC_cxx_saved_binding_base._fields_ = [
    ('num', c_uint),
    ('alloc', c_uint),
    ('vec', cxx_saved_binding * 1),
]
class VEC_cxx_saved_binding_none(Structure):
    pass
VEC_cxx_saved_binding_none._fields_ = [
    ('base', VEC_cxx_saved_binding_base),
]
VEC_cxx_saved_binding_gc._fields_ = [
    ('base', VEC_cxx_saved_binding_base),
]

# values for enumeration 'scope_kind'
scope_kind = c_int # enum

# values for enumeration 'tag_scope'
tag_scope = c_int # enum
class cp_class_binding(Structure):
    pass
cp_class_binding._fields_ = [
    ('base', cxx_binding),
    ('identifier', tree),
]
class VEC_cp_class_binding_none(Structure):
    pass
class VEC_cp_class_binding_base(Structure):
    pass
VEC_cp_class_binding_base._fields_ = [
    ('num', c_uint),
    ('alloc', c_uint),
    ('vec', cp_class_binding * 1),
]
VEC_cp_class_binding_none._fields_ = [
    ('base', VEC_cp_class_binding_base),
]
class VEC_cp_class_binding_gc(Structure):
    pass
VEC_cp_class_binding_gc._fields_ = [
    ('base', VEC_cp_class_binding_base),
]
class cp_label_binding(Structure):
    pass
cp_label_binding._fields_ = [
    ('label', tree),
    ('prev_value', tree),
]
class VEC_cp_label_binding_none(Structure):
    pass
class VEC_cp_label_binding_base(Structure):
    pass
VEC_cp_label_binding_base._fields_ = [
    ('num', c_uint),
    ('alloc', c_uint),
    ('vec', cp_label_binding * 1),
]
VEC_cp_label_binding_none._fields_ = [
    ('base', VEC_cp_label_binding_base),
]
class VEC_cp_label_binding_gc(Structure):
    pass
VEC_cp_label_binding_gc._fields_ = [
    ('base', VEC_cp_label_binding_base),
]
cp_binding_level._fields_ = [
    ('names', tree),
    ('names_size', size_t),
    ('namespaces', tree),
    ('static_decls', POINTER(VEC_tree_gc)),
    ('usings', tree),
    ('using_directives', tree),
    ('class_shadowed', POINTER(VEC_cp_class_binding_gc)),
    ('type_shadowed', tree),
    ('shadowed_labels', POINTER(VEC_cp_label_binding_gc)),
    ('blocks', tree),
    ('this_entity', tree),
    ('level_chain', POINTER(cp_binding_level)),
    ('dead_vars_from_for', POINTER(VEC_tree_gc)),
    ('statement_list', tree),
    ('binding_depth', c_int),
    ('kind', scope_kind, 4),
    ('explicit_spec_p', c_uint, 1),
    ('keep', c_uint, 1),
    ('more_cleanups_ok', c_uint, 1),
    ('have_cleanups', c_uint, 1),
]
class cpp_buffer(Structure):
    pass
cpp_buffer._fields_ = [
]
class cpp_options(Structure):
    pass
class cpp_token(Structure):
    pass
class cpp_string(Structure):
    pass
cpp_macro._fields_ = [
]
class cpp_callbacks(Structure):
    pass
class cpp_dir(Structure):
    pass
answer._fields_ = [
]
class _cpp_file(Structure):
    pass
_cpp_file._fields_ = [
]

# values for enumeration 'cpp_ttype'
cpp_ttype = c_int # enum

# values for enumeration 'c_lang'
c_lang = c_int # enum
cpp_string._fields_ = [
    ('len', c_uint),
    ('text', POINTER(c_ubyte)),
]

# values for enumeration 'cpp_token_fld_kind'
cpp_token_fld_kind = c_int # enum
class cpp_macro_arg(Structure):
    pass
cpp_macro_arg._fields_ = [
    ('arg_no', c_uint),
]
class cpp_identifier(Structure):
    pass
cpp_identifier._fields_ = [
    ('node', POINTER(cpp_hashnode)),
]
class cpp_token_u(Union):
    pass
cpp_token_u._fields_ = [
    ('node', cpp_identifier),
    ('source', POINTER(cpp_token)),
    ('str', cpp_string),
    ('macro_arg', cpp_macro_arg),
    ('token_no', c_uint),
    ('pragma', c_uint),
]
cpp_token._fields_ = [
    ('src_loc', source_location),
    ('type', cpp_ttype, 8),
    ('flags', c_ushort),
    ('val', cpp_token_u),
]
cppchar_t = c_uint
cppchar_signed_t = c_int

# values for enumeration 'cpp_deps_style'
cpp_deps_style = c_int # enum

# values for enumeration 'cpp_normalize_level'
cpp_normalize_level = c_int # enum
class N11cpp_options4DOT_77E(Structure):
    pass
N11cpp_options4DOT_77E._fields_ = [
    ('style', cpp_deps_style),
    ('missing_files', c_bool),
    ('phony_targets', c_bool),
    ('ignore_main_file', c_bool),
    ('need_preprocessor_output', c_bool),
]
cpp_options._fields_ = [
    ('tabstop', c_uint),
    ('lang', c_lang),
    ('cplusplus', c_ubyte),
    ('cplusplus_comments', c_ubyte),
    ('objc', c_ubyte),
    ('discard_comments', c_ubyte),
    ('discard_comments_in_macro_exp', c_ubyte),
    ('trigraphs', c_ubyte),
    ('digraphs', c_ubyte),
    ('extended_numbers', c_ubyte),
    ('uliterals', c_ubyte),
    ('print_include_names', c_ubyte),
    ('cpp_warn_deprecated', c_ubyte),
    ('warn_comments', c_ubyte),
    ('warn_missing_include_dirs', c_ubyte),
    ('warn_trigraphs', c_ubyte),
    ('warn_multichar', c_ubyte),
    ('cpp_warn_traditional', c_ubyte),
    ('cpp_warn_long_long', c_ubyte),
    ('warn_endif_labels', c_ubyte),
    ('warn_num_sign_change', c_ubyte),
    ('warn_variadic_macros', c_ubyte),
    ('warn_builtin_macro_redefined', c_ubyte),
    ('remap', c_ubyte),
    ('dollars_in_ident', c_ubyte),
    ('extended_identifiers', c_ubyte),
    ('warn_dollars', c_ubyte),
    ('warn_undef', c_ubyte),
    ('warn_unused_macros', c_ubyte),
    ('c99', c_ubyte),
    ('std', c_ubyte),
    ('cpp_pedantic', c_ubyte),
    ('preprocessed', c_ubyte),
    ('operator_names', c_ubyte),
    ('warn_cxx_operator_names', c_ubyte),
    ('traditional', c_ubyte),
    ('narrow_charset', STRING),
    ('wide_charset', STRING),
    ('input_charset', STRING),
    ('warn_normalize', cpp_normalize_level),
    ('warn_invalid_pch', c_bool),
    ('restore_pch_deps', c_bool),
    ('deps', N11cpp_options4DOT_77E),
    ('precision', size_t),
    ('char_precision', size_t),
    ('int_precision', size_t),
    ('wchar_precision', size_t),
    ('unsigned_char', c_bool),
    ('unsigned_wchar', c_bool),
    ('bytes_big_endian', c_bool),
    ('stdc_0_in_system_headers', c_ubyte),
    ('directives_only', c_bool),
]
missing_header_cb = CFUNCTYPE(STRING, POINTER(cpp_reader), STRING, POINTER(POINTER(cpp_dir)))
class line_map(Structure):
    pass
linenum_type = c_uint

# values for enumeration 'lc_reason'
lc_reason = c_int # enum
line_map._fields_ = [
    ('to_file', STRING),
    ('to_line', linenum_type),
    ('start_location', source_location),
    ('included_from', c_int),
    ('reason', lc_reason, 8),
    ('sysp', c_ubyte),
    ('column_bits', c_uint, 8),
]
cpp_callbacks._fields_ = [
    ('line_change', CFUNCTYPE(None, POINTER(cpp_reader), POINTER(cpp_token), c_int)),
    ('file_change', CFUNCTYPE(None, POINTER(cpp_reader), POINTER(line_map))),
    ('dir_change', CFUNCTYPE(None, POINTER(cpp_reader), STRING)),
    ('include', CFUNCTYPE(None, POINTER(cpp_reader), c_uint, POINTER(c_ubyte), STRING, c_int, POINTER(POINTER(cpp_token)))),
    ('define', CFUNCTYPE(None, POINTER(cpp_reader), c_uint, POINTER(cpp_hashnode))),
    ('undef', CFUNCTYPE(None, POINTER(cpp_reader), c_uint, POINTER(cpp_hashnode))),
    ('ident', CFUNCTYPE(None, POINTER(cpp_reader), c_uint, POINTER(cpp_string))),
    ('def_pragma', CFUNCTYPE(None, POINTER(cpp_reader), c_uint)),
    ('valid_pch', CFUNCTYPE(c_int, POINTER(cpp_reader), STRING, c_int)),
    ('read_pch', CFUNCTYPE(None, POINTER(cpp_reader), STRING, c_int, STRING)),
    ('missing_header', missing_header_cb),
    ('macro_to_expand', CFUNCTYPE(POINTER(cpp_hashnode), POINTER(cpp_reader), POINTER(cpp_token))),
    ('error', CFUNCTYPE(c_bool, POINTER(cpp_reader), c_int, c_int, source_location, c_uint, STRING, POINTER(va_list))),
    ('used_define', CFUNCTYPE(None, POINTER(cpp_reader), c_uint, POINTER(cpp_hashnode))),
    ('used_undef', CFUNCTYPE(None, POINTER(cpp_reader), c_uint, POINTER(cpp_hashnode))),
    ('before_define', CFUNCTYPE(None, POINTER(cpp_reader))),
    ('used', CFUNCTYPE(None, POINTER(cpp_reader), source_location, POINTER(cpp_hashnode))),
    ('user_builtin_macro', CFUNCTYPE(c_bool, POINTER(cpp_reader), POINTER(cpp_hashnode))),
]
cpp_dir._pack_ = 4
cpp_dir._fields_ = [
    ('next', POINTER(cpp_dir)),
    ('name', STRING),
    ('len', c_uint),
    ('sysp', c_ubyte),
    ('user_supplied_p', c_bool),
    ('canonical_name', STRING),
    ('name_map', POINTER(STRING)),
    ('construct', CFUNCTYPE(STRING, STRING, POINTER(cpp_dir))),
    ('ino', ino_t),
    ('dev', dev_t),
]

# values for unnamed enumeration
class deps(Structure):
    pass
deps._fields_ = [
]
cpp_num_part = c_ulonglong
class cpp_num(Structure):
    pass
cpp_num._pack_ = 4
cpp_num._fields_ = [
    ('high', cpp_num_part),
    ('low', cpp_num_part),
    ('unsignedp', c_bool),
    ('overflow', c_bool),
]

# values for unnamed enumeration

# values for unnamed enumeration
class cpp_comment(Structure):
    pass
cpp_comment._fields_ = [
    ('comment', STRING),
    ('sloc', source_location),
]
class cpp_comment_table(Structure):
    pass
cpp_comment_table._fields_ = [
    ('entries', POINTER(cpp_comment)),
    ('count', c_int),
    ('allocated', c_int),
]
cpp_cb = CFUNCTYPE(c_int, POINTER(cpp_reader), POINTER(cpp_hashnode), c_void_p)
class save_macro_data(Structure):
    pass
save_macro_data._fields_ = [
]

# values for enumeration 'diagnostic_t'
diagnostic_t = c_int # enum
class diagnostic_info(Structure):
    pass
class text_info(Structure):
    pass
text_info._fields_ = [
    ('format_spec', STRING),
    ('args_ptr', POINTER(va_list)),
    ('err_no', c_int),
    ('locus', POINTER(location_t)),
    ('x_data', POINTER(c_void_p)),
]
diagnostic_info._fields_ = [
    ('message', text_info),
    ('location', location_t),
    ('override_column', c_uint),
    ('x_data', c_void_p),
    ('kind', diagnostic_t),
    ('option_index', c_int),
]
class diagnostic_classification_change_t(Structure):
    pass
diagnostic_classification_change_t._fields_ = [
    ('location', location_t),
    ('option', c_int),
    ('kind', diagnostic_t),
]
diagnostic_starter_fn = CFUNCTYPE(None, POINTER(diagnostic_context), POINTER(diagnostic_info))
diagnostic_finalizer_fn = diagnostic_starter_fn
class pretty_print_info(Structure):
    pass
pretty_printer = pretty_print_info
diagnostic_context._fields_ = [
    ('printer', POINTER(pretty_printer)),
    ('diagnostic_count', c_int * 12),
    ('some_warnings_are_errors', c_bool),
    ('warning_as_error_requested', c_bool),
    ('n_opts', c_int),
    ('classify_diagnostic', POINTER(diagnostic_t)),
    ('classification_history', POINTER(diagnostic_classification_change_t)),
    ('n_classification_history', c_int),
    ('push_list', POINTER(c_int)),
    ('n_push', c_int),
    ('show_option_requested', c_bool),
    ('abort_on_error', c_bool),
    ('show_column', c_bool),
    ('pedantic_errors', c_bool),
    ('permissive', c_bool),
    ('opt_permissive', c_int),
    ('fatal_errors', c_bool),
    ('dc_inhibit_warnings', c_bool),
    ('dc_warn_system_headers', c_bool),
    ('max_errors', c_uint),
    ('begin_diagnostic', diagnostic_starter_fn),
    ('end_diagnostic', diagnostic_finalizer_fn),
    ('internal_error', CFUNCTYPE(None, POINTER(diagnostic_context), STRING, POINTER(va_list))),
    ('option_enabled', CFUNCTYPE(c_int, c_int, c_void_p)),
    ('option_state', c_void_p),
    ('option_name', CFUNCTYPE(STRING, POINTER(diagnostic_context), c_int, diagnostic_t, diagnostic_t)),
    ('x_data', c_void_p),
    ('last_module', POINTER(line_map)),
    ('lock', c_int),
    ('inhibit_notes_p', c_bool),
]
fixed_value._fields_ = [
    ('data', double_int),
    ('mode', machine_mode),
]

# values for enumeration 'debug_info_type'
debug_info_type = c_int # enum

# values for enumeration 'debug_info_levels'
debug_info_levels = c_int # enum

# values for enumeration 'debug_info_usage'
debug_info_usage = c_int # enum

# values for enumeration 'debug_struct_file'
debug_struct_file = c_int # enum

# values for enumeration 'ira_algorithm'
ira_algorithm = c_int # enum

# values for enumeration 'ira_region'
ira_region = c_int # enum

# values for enumeration 'excess_precision'
excess_precision = c_int # enum

# values for enumeration 'graph_dump_types'
graph_dump_types = c_int # enum

# values for enumeration 'stack_check_type'
stack_check_type = c_int # enum

# values for enumeration 'warn_strict_overflow_code'
warn_strict_overflow_code = c_int # enum

# values for enumeration 'vect_verbosity_levels'
vect_verbosity_levels = c_int # enum
class target_flag_state(Structure):
    pass
target_flag_state._fields_ = [
    ('x_align_loops_log', c_int),
    ('x_align_loops_max_skip', c_int),
    ('x_align_jumps_log', c_int),
    ('x_align_jumps_max_skip', c_int),
    ('x_align_labels_log', c_int),
    ('x_align_labels_max_skip', c_int),
    ('x_align_functions_log', c_int),
    ('x_flag_excess_precision', excess_precision),
]
class sequence_stack(Structure):
    pass
sequence_stack._fields_ = [
    ('first', rtx),
    ('last', rtx),
    ('next', POINTER(sequence_stack)),
]
class emit_status(Structure):
    pass
emit_status._fields_ = [
    ('x_reg_rtx_no', c_int),
    ('x_first_label_num', c_int),
    ('x_first_insn', rtx),
    ('x_last_insn', rtx),
    ('sequence_stack', POINTER(sequence_stack)),
    ('x_cur_insn_uid', c_int),
    ('x_cur_debug_insn_uid', c_int),
    ('x_last_location', location_t),
    ('regno_pointer_align_length', c_int),
    ('regno_pointer_align', POINTER(c_ubyte)),
]
class expr_status(Structure):
    pass
expr_status._fields_ = [
    ('x_pending_stack_adjust', c_int),
    ('x_inhibit_defer_pop', c_int),
    ('x_stack_pointer_delta', c_int),
    ('x_saveregs_value', rtx),
    ('x_apply_args_value', rtx),
    ('x_forced_labels', rtx),
]
class call_site_record_d(Structure):
    pass
call_site_record_d._fields_ = [
]
call_site_record = POINTER(call_site_record_d)
class VEC_call_site_record_base(Structure):
    pass
class VEC_call_site_record_none(Structure):
    pass
VEC_call_site_record_base._fields_ = [
    ('num', c_uint),
    ('alloc', c_uint),
    ('vec', call_site_record * 1),
]
VEC_call_site_record_none._fields_ = [
    ('base', VEC_call_site_record_base),
]
class VEC_call_site_record_gc(Structure):
    pass
VEC_call_site_record_gc._fields_ = [
    ('base', VEC_call_site_record_base),
]
class rtl_eh(Structure):
    pass
class VEC_uchar_gc(Structure):
    pass
rtl_eh._fields_ = [
    ('ehr_stackadj', rtx),
    ('ehr_handler', rtx),
    ('ehr_label', rtx),
    ('sjlj_fc', rtx),
    ('sjlj_exit_after', rtx),
    ('action_record_data', POINTER(VEC_uchar_gc)),
    ('call_site_record', POINTER(VEC_call_site_record_gc) * 2),
]
class temp_slot(Structure):
    pass
temp_slot._fields_ = [
]
temp_slot_p = POINTER(temp_slot)
class VEC_temp_slot_p_base(Structure):
    pass
class VEC_temp_slot_p_none(Structure):
    pass
VEC_temp_slot_p_base._fields_ = [
    ('num', c_uint),
    ('alloc', c_uint),
    ('vec', temp_slot_p * 1),
]
VEC_temp_slot_p_none._fields_ = [
    ('base', VEC_temp_slot_p_base),
]
class VEC_temp_slot_p_gc(Structure):
    pass
VEC_temp_slot_p_gc._fields_ = [
    ('base', VEC_temp_slot_p_base),
]
class ipa_opt_pass_d(Structure):
    pass
ipa_opt_pass_d._fields_ = [
]
ipa_opt_pass = POINTER(ipa_opt_pass_d)
class VEC_ipa_opt_pass_base(Structure):
    pass
VEC_ipa_opt_pass_base._fields_ = [
    ('num', c_uint),
    ('alloc', c_uint),
    ('vec', ipa_opt_pass * 1),
]
class VEC_ipa_opt_pass_none(Structure):
    pass
VEC_ipa_opt_pass_none._fields_ = [
    ('base', VEC_ipa_opt_pass_base),
]
VEC_ipa_opt_pass_heap._fields_ = [
    ('base', VEC_ipa_opt_pass_base),
]
class varasm_status(Structure):
    pass
class rtx_constant_pool(Structure):
    pass
varasm_status._fields_ = [
    ('pool', POINTER(rtx_constant_pool)),
    ('deferred_constants', c_uint),
]
rtx_constant_pool._fields_ = [
]
class incoming_args(Structure):
    pass
incoming_args._fields_ = [
    ('pops_args', c_int),
    ('size', c_int),
    ('pretend_args_size', c_int),
    ('arg_offset_rtx', rtx),
    ('info', CUMULATIVE_ARGS),
    ('internal_arg_pointer', rtx),
]
class function_subsections(Structure):
    pass
function_subsections._fields_ = [
    ('hot_section_label', STRING),
    ('cold_section_label', STRING),
    ('hot_section_end_label', STRING),
    ('cold_section_end_label', STRING),
]
class frame_space(Structure):
    pass
frame_space._pack_ = 4
frame_space._fields_ = [
    ('next', POINTER(frame_space)),
    ('start', c_longlong),
    ('length', c_longlong),
]
class rtl_data(Structure):
    pass
class initial_value_struct(Structure):
    pass
HARD_REG_ELT_TYPE = c_ulong
HARD_REG_SET = HARD_REG_ELT_TYPE * 2
rtl_data._pack_ = 4
rtl_data._fields_ = [
    ('expr', expr_status),
    ('emit', emit_status),
    ('varasm', varasm_status),
    ('args', incoming_args),
    ('subsections', function_subsections),
    ('eh', rtl_eh),
    ('outgoing_args_size', c_int),
    ('return_rtx', rtx),
    ('hard_reg_initial_vals', POINTER(initial_value_struct)),
    ('stack_protect_guard', tree),
    ('x_nonlocal_goto_handler_labels', rtx),
    ('x_return_label', rtx),
    ('x_naked_return_label', rtx),
    ('x_stack_slot_list', rtx),
    ('frame_space_list', POINTER(frame_space)),
    ('x_stack_check_probe_note', rtx),
    ('x_arg_pointer_save_area', rtx),
    ('drap_reg', rtx),
    ('x_frame_offset', c_longlong),
    ('x_parm_birth_insn', rtx),
    ('x_used_temp_slots', POINTER(VEC_temp_slot_p_gc)),
    ('x_avail_temp_slots', POINTER(temp_slot)),
    ('x_temp_slot_level', c_int),
    ('stack_alignment_needed', c_uint),
    ('preferred_stack_boundary', c_uint),
    ('parm_stack_boundary', c_uint),
    ('max_used_stack_slot_alignment', c_uint),
    ('stack_alignment_estimated', c_uint),
    ('epilogue_delay_list', rtx),
    ('accesses_prior_frames', c_bool),
    ('calls_eh_return', c_bool),
    ('saves_all_registers', c_bool),
    ('has_nonlocal_goto', c_bool),
    ('has_asm_statement', c_bool),
    ('all_throwers_are_sibcalls', c_bool),
    ('limit_stack', c_bool),
    ('profile', c_bool),
    ('uses_const_pool', c_bool),
    ('uses_pic_offset_table', c_bool),
    ('uses_eh_lsda', c_bool),
    ('tail_call_emit', c_bool),
    ('arg_pointer_save_area_init', c_bool),
    ('frame_pointer_needed', c_bool),
    ('maybe_hot_insn_p', c_bool),
    ('stack_realign_needed', c_bool),
    ('stack_realign_tried', c_bool),
    ('need_drap', c_bool),
    ('stack_realign_processed', c_bool),
    ('stack_realign_finalized', c_bool),
    ('dbr_scheduled_p', c_bool),
    ('nothrow', c_bool),
    ('asm_clobbers', HARD_REG_SET),
]
initial_value_struct._fields_ = [
]
class stack_usage(Structure):
    pass
stack_usage._fields_ = [
    ('static_stack_size', c_longlong),
    ('dynamic_stack_size', c_longlong),
    ('pushed_stack_size', c_int),
    ('dynamic_alloc_count', c_uint, 31),
    ('has_unbounded_dynamic_stack_size', c_uint, 1),
]
class eh_status(Structure):
    pass
class gimple_df(Structure):
    pass
class loops(Structure):
    pass
function._fields_ = [
    ('eh', POINTER(eh_status)),
    ('cfg', POINTER(control_flow_graph)),
    ('gimple_body', POINTER(gimple_seq_d)),
    ('gimple_df', POINTER(gimple_df)),
    ('x_current_loops', POINTER(loops)),
    ('su', POINTER(stack_usage)),
    ('value_histograms', htab_t),
    ('decl', tree),
    ('static_chain_decl', tree),
    ('nonlocal_goto_save_area', tree),
    ('local_decls', POINTER(VEC_tree_gc)),
    ('machine', POINTER(machine_function)),
    ('language', POINTER(language_function)),
    ('used_types_hash', htab_t),
    ('last_stmt_uid', c_int),
    ('funcdef_no', c_int),
    ('function_start_locus', location_t),
    ('function_end_locus', location_t),
    ('curr_properties', c_uint),
    ('last_verified', c_uint),
    ('cannot_be_copied_reason', STRING),
    ('va_list_gpr_size', c_uint, 8),
    ('va_list_fpr_size', c_uint, 8),
    ('calls_setjmp', c_uint, 1),
    ('calls_alloca', c_uint, 1),
    ('has_nonlocal_label', c_uint, 1),
    ('cannot_be_copied_set', c_uint, 1),
    ('stdarg', c_uint, 1),
    ('dont_save_pending_sizes_p', c_uint, 1),
    ('after_inlining', c_uint, 1),
    ('always_inline_functions_inlined', c_uint, 1),
    ('can_throw_non_call_exceptions', c_uint, 1),
    ('returns_struct', c_uint, 1),
    ('returns_pcc_struct', c_uint, 1),
    ('after_tree_profile', c_uint, 1),
    ('has_local_explicit_reg_vars', c_uint, 1),
    ('is_thunk', c_uint, 1),
]
eh_status._fields_ = [
]
loops._fields_ = [
]
class types_used_by_vars_entry(Structure):
    pass
types_used_by_vars_entry._fields_ = [
    ('type', tree),
    ('var_decl', tree),
]

# values for enumeration 'plugin_event'
plugin_event = c_int # enum
class plugin_argument(Structure):
    pass
plugin_argument._fields_ = [
    ('key', STRING),
    ('value', STRING),
]
class plugin_info(Structure):
    pass
plugin_info._fields_ = [
    ('version', STRING),
    ('help', STRING),
]
class plugin_gcc_version(Structure):
    pass
plugin_gcc_version._fields_ = [
    ('basever', STRING),
    ('datestamp', STRING),
    ('devphase', STRING),
    ('revision', STRING),
    ('configuration_arguments', STRING),
]
class plugin_name_args(Structure):
    pass
plugin_name_args._fields_ = [
    ('base_name', STRING),
    ('full_name', STRING),
    ('argc', c_int),
    ('argv', POINTER(plugin_argument)),
    ('version', STRING),
    ('help', STRING),
]
plugin_init_func = CFUNCTYPE(c_int, POINTER(plugin_name_args), POINTER(plugin_gcc_version))
plugin_callback_func = CFUNCTYPE(None, c_void_p, c_void_p)
gt_pointer_operator = CFUNCTYPE(None, c_void_p, c_void_p)
gt_note_pointers = CFUNCTYPE(None, c_void_p, c_void_p, gt_pointer_operator, c_void_p)
gt_handle_reorder = CFUNCTYPE(None, c_void_p, c_void_p, gt_pointer_operator, c_void_p)
gt_pointer_walker = CFUNCTYPE(None, c_void_p)
class ggc_root_tab(Structure):
    pass
ggc_root_tab._fields_ = [
    ('base', c_void_p),
    ('nelt', size_t),
    ('stride', size_t),
    ('cb', gt_pointer_walker),
    ('pchw', gt_pointer_walker),
]
class ggc_cache_tab(Structure):
    pass
ggc_cache_tab._fields_ = [
    ('base', POINTER(POINTER(htab))),
    ('nelt', size_t),
    ('stride', size_t),
    ('cb', gt_pointer_walker),
    ('pchw', gt_pointer_walker),
    ('marked_p', CFUNCTYPE(c_int, c_void_p)),
]
class alloc_zone(Structure):
    pass
alloc_zone._fields_ = [
]
gimple_seq_node_d._fields_ = [
    ('stmt', gimple),
    ('prev', POINTER(gimple_seq_node_d)),
    ('next', POINTER(gimple_seq_node_d)),
]
const_gimple_seq_node = POINTER(gimple_seq_node_d)
class VEC_gimple_heap(Structure):
    pass
gimple_vec = POINTER(VEC_gimple_heap)
class VEC_gimple_vec_none(Structure):
    pass
class VEC_gimple_vec_base(Structure):
    pass
VEC_gimple_vec_base._fields_ = [
    ('num', c_uint),
    ('alloc', c_uint),
    ('vec', gimple_vec * 1),
]
VEC_gimple_vec_none._fields_ = [
    ('base', VEC_gimple_vec_base),
]
class VEC_gimple_vec_heap(Structure):
    pass
VEC_gimple_vec_heap._fields_ = [
    ('base', VEC_gimple_vec_base),
]

# values for enumeration 'gimple_rhs_class'
gimple_rhs_class = c_int # enum

# values for enumeration 'gf_mask'
gf_mask = c_int # enum

# values for enumeration 'gimple_debug_subcode'
gimple_debug_subcode = c_int # enum

# values for enumeration 'plf_mask'
plf_mask = c_int # enum
class gimple_stmt_iterator(Structure):
    pass
gimple_stmt_iterator._fields_ = [
    ('ptr', gimple_seq_node),
    ('seq', gimple_seq),
    ('bb', basic_block),
]

# values for enumeration 'gimple_try_flags'
gimple_try_flags = c_int # enum
gimple_omp_for_iter._fields_ = [
    ('cond', tree_code),
    ('index', tree),
    ('initial', tree),
    ('final', tree),
    ('incr', tree),
]

# values for enumeration 'gimple_statement_structure_enum'
gimple_statement_structure_enum = c_int # enum

# values for enumeration 'gtc_mode'
gtc_mode = c_int # enum
gimple_predicate = CFUNCTYPE(c_bool, tree)

# values for enumeration 'fallback'
fallback = c_int # enum
fallback_t = c_int

# values for enumeration 'gimplify_status'
gimplify_status = c_int # enum
class gimplify_ctx(Structure):
    pass
class VEC_tree_heap(Structure):
    pass
gimplify_ctx._fields_ = [
    ('prev_context', POINTER(gimplify_ctx)),
    ('bind_expr_stack', POINTER(VEC_gimple_heap)),
    ('temps', tree),
    ('conditional_cleanups', gimple_seq),
    ('exit_label', tree),
    ('return_temp', tree),
    ('case_labels', POINTER(VEC_tree_heap)),
    ('temp_htab', htab_t),
    ('conditions', c_int),
    ('save_stack', c_bool),
    ('into_ssa', c_bool),
    ('allow_rhs_cond_expr', c_bool),
]
class gimplify_omp_ctx(Structure):
    pass
gimplify_omp_ctx._fields_ = [
]

# values for enumeration 'gsi_iterator_update'
gsi_iterator_update = c_int # enum
class walk_stmt_info(Structure):
    pass
class pointer_set_t(Structure):
    pass
walk_stmt_info._fields_ = [
    ('gsi', gimple_stmt_iterator),
    ('info', c_void_p),
    ('pset', POINTER(pointer_set_t)),
    ('val_only', c_bool),
    ('is_lhs', c_bool),
    ('changed', c_bool),
    ('want_locations', c_bool),
    ('callback_result', tree),
]
walk_stmt_fn = CFUNCTYPE(tree, POINTER(gimple_stmt_iterator), POINTER(c_bool), POINTER(walk_stmt_info))

# values for enumeration 'gt_types_enum'
gt_types_enum = c_int # enum
class hard_reg_set_iterator(Structure):
    pass
hard_reg_set_iterator._fields_ = [
    ('pelt', POINTER(HARD_REG_ELT_TYPE)),
    ('length', c_ushort),
    ('word_no', c_ushort),
    ('bits', HARD_REG_ELT_TYPE),
]
class target_hard_regs(Structure):
    pass
target_hard_regs._fields_ = [
    ('x_fixed_regs', c_char * 53),
    ('x_fixed_reg_set', HARD_REG_SET),
    ('x_call_used_regs', c_char * 53),
    ('x_call_really_used_regs', c_char * 53),
    ('x_call_used_reg_set', HARD_REG_SET),
    ('x_call_fixed_reg_set', HARD_REG_SET),
    ('x_regs_invalidated_by_call', HARD_REG_SET),
    ('x_no_caller_save_reg_set', HARD_REG_SET),
    ('x_reg_alloc_order', c_int * 53),
    ('x_inv_reg_alloc_order', c_int * 53),
    ('x_reg_class_contents', HARD_REG_SET * 27),
    ('x_class_only_fixed_regs', c_bool * 27),
    ('x_reg_class_size', c_uint * 27),
    ('x_reg_class_subclasses', reg_class * 27 * 27),
    ('x_reg_class_subunion', reg_class * 27 * 27),
    ('x_reg_class_superunion', reg_class * 27 * 27),
    ('x_reg_names', STRING * 53),
]
htab_hash = CFUNCTYPE(hashval_t, c_void_p)
htab_eq = CFUNCTYPE(c_int, c_void_p, c_void_p)
htab_del = CFUNCTYPE(None, c_void_p)
htab_trav = CFUNCTYPE(c_int, POINTER(c_void_p), c_void_p)
htab_alloc = CFUNCTYPE(c_void_p, size_t, size_t)
htab_free = CFUNCTYPE(None, c_void_p)
htab_alloc_with_arg = CFUNCTYPE(c_void_p, c_void_p, size_t, size_t)
htab_free_with_arg = CFUNCTYPE(None, c_void_p, c_void_p)
htab._fields_ = [
    ('hash_f', htab_hash),
    ('eq_f', htab_eq),
    ('del_f', htab_del),
    ('entries', POINTER(c_void_p)),
    ('size', size_t),
    ('n_elements', size_t),
    ('n_deleted', size_t),
    ('searches', c_uint),
    ('collisions', c_uint),
    ('alloc_f', htab_alloc),
    ('free_f', htab_free),
    ('alloc_arg', c_void_p),
    ('alloc_with_arg_f', htab_alloc_with_arg),
    ('free_with_arg_f', htab_free_with_arg),
    ('size_prime_index', c_uint),
]

# values for enumeration 'insert_option'
insert_option = c_int # enum
class expanded_location(Structure):
    pass
expanded_location._fields_ = [
    ('file', STRING),
    ('line', c_int),
    ('column', c_int),
    ('sysp', c_bool),
]

# values for enumeration 'unspec'
unspec = c_int # enum

# values for enumeration 'unspecv'
unspecv = c_int # enum

# values for enumeration 'internal_fn'
internal_fn = c_int # enum

# values for enumeration 'ipa_ref_use'
ipa_ref_use = c_int # enum

# values for enumeration 'ipa_ref_type'
ipa_ref_type = c_int # enum
class ipa_ref_ptr_u(Union):
    pass
ipa_ref_ptr_u._fields_ = [
    ('cgraph_node', POINTER(cgraph_node)),
    ('varpool_node', POINTER(varpool_node)),
]
class ipa_ref(Structure):
    pass
ipa_ref._fields_ = [
    ('refering', ipa_ref_ptr_u),
    ('refered', ipa_ref_ptr_u),
    ('stmt', gimple),
    ('refered_index', c_uint),
    ('refering_type', ipa_ref_type, 1),
    ('refered_type', ipa_ref_type, 1),
    ('use', ipa_ref_use, 2),
]
ipa_ref_t = ipa_ref
ipa_ref_ptr = POINTER(ipa_ref)
class VEC_ipa_ref_t_none(Structure):
    pass
class VEC_ipa_ref_t_base(Structure):
    pass
VEC_ipa_ref_t_base._fields_ = [
    ('num', c_uint),
    ('alloc', c_uint),
    ('vec', ipa_ref_t * 1),
]
VEC_ipa_ref_t_none._fields_ = [
    ('base', VEC_ipa_ref_t_base),
]
VEC_ipa_ref_t_gc._fields_ = [
    ('base', VEC_ipa_ref_t_base),
]
class VEC_ipa_ref_ptr_none(Structure):
    pass
class VEC_ipa_ref_ptr_base(Structure):
    pass
VEC_ipa_ref_ptr_base._fields_ = [
    ('num', c_uint),
    ('alloc', c_uint),
    ('vec', ipa_ref_ptr * 1),
]
VEC_ipa_ref_ptr_none._fields_ = [
    ('base', VEC_ipa_ref_ptr_base),
]
VEC_ipa_ref_ptr_heap._fields_ = [
    ('base', VEC_ipa_ref_ptr_base),
]
class pex_obj(Structure):
    pass
pex_obj._fields_ = [
]
class pex_time(Structure):
    pass
pex_time._fields_ = [
    ('user_seconds', c_ulong),
    ('user_microseconds', c_ulong),
    ('system_seconds', c_ulong),
    ('system_microseconds', c_ulong),
]
line_map_realloc = CFUNCTYPE(c_void_p, c_void_p, size_t)
class line_maps(Structure):
    pass
line_maps._fields_ = [
    ('maps', POINTER(line_map)),
    ('allocated', c_uint),
    ('used', c_uint),
    ('cache', c_uint),
    ('last_listed', c_int),
    ('depth', c_uint),
    ('trace_includes', c_bool),
    ('highest_location', source_location),
    ('highest_line', source_location),
    ('max_column_hint', c_uint),
    ('reallocator', line_map_realloc),
]

# values for enumeration 'mode_class'
mode_class = c_int # enum
_obstack_chunk._fields_ = [
    ('limit', STRING),
    ('prev', POINTER(_obstack_chunk)),
    ('contents', c_char * 4),
]
class gcc_options(Structure):
    pass
gcc_options._pack_ = 4
gcc_options._fields_ = [
    ('x_frame_larger_than_size', c_longlong),
    ('x_larger_than_size', c_longlong),
    ('x_exit_after_options', c_bool),
    ('x_flag_dump_all_passed', c_bool),
    ('x_flag_opts_finished', c_bool),
    ('x_flag_warn_unused_result', c_bool),
    ('x_use_gnu_debug_info_extensions', c_bool),
    ('x_warn_frame_larger_than', c_bool),
    ('x_warn_larger_than', c_bool),
    ('x_help_enum_printed', STRING),
    ('x_help_printed', STRING),
    ('x_main_input_basename', STRING),
    ('x_main_input_filename', STRING),
    ('x_debug_info_level', debug_info_levels),
    ('x_write_symbols', debug_info_type),
    ('x_debug_struct_generic', debug_struct_file * 3),
    ('x_debug_struct_ordinary', debug_struct_file * 3),
    ('x_graph_dump_format', graph_dump_types),
    ('x_flag_stack_check', stack_check_type),
    ('x_user_vect_verbosity_level', vect_verbosity_levels),
    ('x_param_values', POINTER(c_int)),
    ('x_flag_complex_method', c_int),
    ('x_flag_debug_asm', c_int),
    ('x_flag_dump_rtl_in_asm', c_int),
    ('x_flag_evaluation_order', c_int),
    ('x_flag_gen_aux_info', c_int),
    ('x_flag_generate_lto', c_int),
    ('x_flag_print_asm_name', c_int),
    ('x_flag_shlib', c_int),
    ('x_ix86_isa_flags', c_int),
    ('x_main_input_baselength', c_int),
    ('x_optimize', c_int),
    ('x_optimize_fast', c_int),
    ('x_optimize_size', c_int),
    ('x_rtl_dump_and_exit', c_int),
    ('x_target_flags', c_int),
    ('x_help_columns', c_uint),
    ('x_initial_max_fld_align', c_uint),
    ('x_flag_instrument_functions_exclude_files', c_void_p),
    ('x_flag_instrument_functions_exclude_functions', c_void_p),
    ('x_help_flag', c_int),
    ('x_flag_preprocess_only', c_int),
    ('x_warn_abi', c_int),
    ('x_warn_address', c_int),
    ('x_warn_aggregate_return', c_int),
    ('x_warn_array_bounds', c_int),
    ('x_warn_assign_intercept', c_int),
    ('x_warn_attributes', c_int),
    ('x_warn_bad_function_cast', c_int),
    ('x_warn_cxx_compat', c_int),
    ('x_warn_cxx0x_compat', c_int),
    ('x_warn_cast_align', c_int),
    ('x_warn_cast_qual', c_int),
    ('x_warn_char_subscripts', c_int),
    ('x_warn_clobbered', c_int),
    ('x_warn_conversion', c_int),
    ('x_warn_conversion_null', c_int),
    ('x_warn_coverage_mismatch', c_int),
    ('x_warn_cpp', c_int),
    ('x_warn_ctor_dtor_privacy', c_int),
    ('x_warn_declaration_after_statement', c_int),
    ('x_warn_deprecated', c_int),
    ('x_warn_deprecated_decl', c_int),
    ('x_warn_disabled_optimization', c_int),
    ('x_warn_div_by_zero', c_int),
    ('x_warn_double_promotion', c_int),
    ('x_warn_ecpp', c_int),
    ('x_warn_empty_body', c_int),
    ('x_warn_enum_compare', c_int),
    ('x_warnings_are_errors', c_int),
    ('x_extra_warnings', c_int),
    ('x_flag_extraneous_semicolon', c_int),
    ('x_flag_fatal_errors', c_int),
    ('x_warn_float_equal', c_int),
    ('x_warn_format_contains_nul', c_int),
    ('x_warn_format_extra_args', c_int),
    ('x_warn_format_nonliteral', c_int),
    ('x_warn_format_security', c_int),
    ('x_warn_format_y2k', c_int),
    ('x_warn_format_zero_length', c_int),
    ('x_warn_ignored_qualifiers', c_int),
    ('x_warn_implicit', c_int),
    ('x_warn_implicit_function_declaration', c_int),
    ('x_warn_implicit_int', c_int),
    ('x_warn_init_self', c_int),
    ('x_warn_inline', c_int),
    ('x_warn_int_to_pointer_cast', c_int),
    ('x_warn_invalid_offsetof', c_int),
    ('x_warn_jump_misses_init', c_int),
    ('x_warn_logical_op', c_int),
    ('x_warn_long_long', c_int),
    ('x_warn_main', c_int),
    ('x_warn_missing_braces', c_int),
    ('x_warn_missing_declarations', c_int),
    ('x_warn_missing_field_initializers', c_int),
    ('x_warn_missing_format_attribute', c_int),
    ('x_warn_missing_noreturn', c_int),
    ('x_warn_missing_parameter_type', c_int),
    ('x_warn_missing_prototypes', c_int),
    ('x_warn_mudflap', c_int),
    ('x_warn_nested_externs', c_int),
    ('x_warn_noexcept', c_int),
    ('x_warn_nontemplate_friend', c_int),
    ('x_warn_nonvdtor', c_int),
    ('x_warn_nonnull', c_int),
    ('x_warn_old_style_cast', c_int),
    ('x_warn_old_style_declaration', c_int),
    ('x_warn_old_style_definition', c_int),
    ('x_flag_newer', c_int),
    ('x_warn_overflow', c_int),
    ('x_warn_overlength_strings', c_int),
    ('x_warn_overloaded_virtual', c_int),
    ('x_warn_override_init', c_int),
    ('x_warn_packed', c_int),
    ('x_warn_packed_bitfield_compat', c_int),
    ('x_warn_padded', c_int),
    ('x_warn_parentheses', c_int),
    ('x_warn_pmf2ptr', c_int),
    ('x_warn_pointer_arith', c_int),
    ('x_warn_pointer_sign', c_int),
    ('x_warn_pointer_to_int_cast', c_int),
    ('x_warn_pragmas', c_int),
    ('x_warn_property_assign_default', c_int),
    ('x_warn_protocol', c_int),
    ('x_warn_psabi', c_int),
    ('x_warn_redundant_decls', c_int),
    ('x_flag_redundant', c_int),
    ('x_warn_reorder', c_int),
    ('x_warn_return_type', c_int),
    ('x_warn_selector', c_int),
    ('x_warn_sequence_point', c_int),
    ('x_warn_shadow', c_int),
    ('x_warn_sign_compare', c_int),
    ('x_warn_sign_conversion', c_int),
    ('x_warn_sign_promo', c_int),
    ('x_warn_stack_protect', c_int),
    ('x_warn_strict_aliasing', c_int),
    ('x_warn_strict_null_sentinel', c_int),
    ('x_warn_strict_overflow', c_int),
    ('x_warn_strict_prototypes', c_int),
    ('x_warn_strict_selector_match', c_int),
    ('x_warn_suggest_attribute_const', c_int),
    ('x_warn_suggest_attribute_noreturn', c_int),
    ('x_warn_suggest_attribute_pure', c_int),
    ('x_warn_switch', c_int),
    ('x_warn_switch_default', c_int),
    ('x_warn_switch_enum', c_int),
    ('x_warn_sync_nand', c_int),
    ('x_warn_synth', c_int),
    ('x_warn_system_headers', c_int),
    ('x_warn_traditional', c_int),
    ('x_warn_traditional_conversion', c_int),
    ('x_warn_trampolines', c_int),
    ('x_warn_type_limits', c_int),
    ('x_warn_undeclared_selector', c_int),
    ('x_warn_uninitialized', c_int),
    ('x_warn_unsafe_loop_optimizations', c_int),
    ('x_warn_unsuffixed_float_constants', c_int),
    ('x_warn_unused', c_int),
    ('x_warn_unused_but_set_parameter', c_int),
    ('x_warn_unused_but_set_variable', c_int),
    ('x_warn_unused_function', c_int),
    ('x_warn_unused_label', c_int),
    ('x_warn_unused_parameter', c_int),
    ('x_warn_unused_result', c_int),
    ('x_warn_unused_value', c_int),
    ('x_warn_unused_variable', c_int),
    ('x_warn_vla', c_int),
    ('x_warn_volatile_register_var', c_int),
    ('x_warn_write_strings', c_int),
    ('x_aux_info_file_name', STRING),
    ('x_aux_base_name', STRING),
    ('x_dump_base_name', STRING),
    ('x_dump_dir_name', STRING),
    ('x_flag_pic', c_int),
    ('x_flag_pie', c_int),
    ('x_flag_abi_version', c_int),
    ('x_flag_access_control', c_int),
    ('x_align_functions', c_int),
    ('x_align_jumps', c_int),
    ('x_align_labels', c_int),
    ('x_align_loops', c_int),
    ('x_flag_no_asm', c_int),
    ('x_flag_assert', c_int),
    ('x_flag_associative_math', c_int),
    ('x_flag_asynchronous_unwind_tables', c_int),
    ('x_flag_auto_inc_dec', c_int),
    ('x_flag_bootstrap_classes', c_int),
    ('x_flag_bounds_check', c_int),
    ('x_flag_branch_on_count_reg', c_int),
    ('x_flag_branch_probabilities', c_int),
    ('x_flag_branch_target_load_optimize', c_int),
    ('x_flag_branch_target_load_optimize2', c_int),
    ('x_flag_btr_bb_exclusive', c_int),
    ('x_flag_no_builtin', c_int),
    ('x_common_deferred_options', c_void_p),
    ('x_flag_caller_saves', c_int),
    ('x_flag_check_data_deps', c_int),
    ('x_flag_check_new', c_int),
    ('x_flag_check_references', c_int),
    ('x_flag_combine_stack_adjustments', c_int),
    ('x_flag_no_common', c_int),
    ('x_flag_compare_debug', c_int),
    ('x_flag_compare_debug_opt', STRING),
    ('x_flag_compare_elim_after_reload', c_int),
    ('x_flag_conserve_space', c_int),
    ('x_flag_conserve_stack', c_int),
    ('x_max_constexpr_depth', c_int),
    ('x_flag_cprop_registers', c_int),
    ('x_flag_crossjumping', c_int),
    ('x_flag_cse_follow_jumps', c_int),
    ('x_flag_cx_fortran_rules', c_int),
    ('x_flag_cx_limited_range', c_int),
    ('x_flag_data_sections', c_int),
    ('x_flag_dce', c_int),
    ('x_flag_deduce_init_list', c_int),
    ('x_flag_defer_pop', c_int),
    ('x_flag_delayed_branch', c_int),
    ('x_flag_delete_null_pointer_checks', c_int),
    ('x_flag_devirtualize', c_int),
    ('x_flag_diagnostics_show_option', c_int),
    ('x_flag_dse', c_int),
    ('x_flag_dump_final_insns', STRING),
    ('x_flag_dump_go_spec', STRING),
    ('x_flag_dump_noaddr', c_int),
    ('x_flag_dump_unnumbered', c_int),
    ('x_flag_dump_unnumbered_links', c_int),
    ('x_flag_dwarf2_cfi_asm', c_int),
    ('x_flag_early_inlining', c_int),
    ('x_flag_elide_constructors', c_int),
    ('x_flag_eliminate_dwarf2_dups', c_int),
    ('x_flag_debug_only_used_symbols', c_int),
    ('x_flag_eliminate_unused_debug_types', c_int),
    ('x_flag_emit_class_debug_always', c_int),
    ('x_flag_emit_class_files', c_int),
    ('x_flag_enable_icf_debug', c_int),
    ('x_flag_enforce_eh_specs', c_int),
    ('x_flag_exceptions', c_int),
    ('x_flag_excess_precision_cmdline', excess_precision),
    ('x_flag_expensive_optimizations', c_int),
    ('x_flag_filelist_file', c_int),
    ('x_flag_finite_math_only', c_int),
    ('x_flag_float_store', c_int),
    ('x_flag_new_for_scope', c_int),
    ('x_flag_force_classes_archive_check', c_int),
    ('x_flag_forward_propagate', c_int),
    ('x_flag_fp_contract_mode', fp_contract_mode),
    ('x_flag_friend_injection', c_int),
    ('x_flag_no_function_cse', c_int),
    ('x_flag_function_sections', c_int),
    ('x_flag_gcse', c_int),
    ('x_flag_gcse_after_reload', c_int),
    ('x_flag_gcse_las', c_int),
    ('x_flag_gcse_lm', c_int),
    ('x_flag_gcse_sm', c_int),
    ('x_flag_no_gnu_keywords', c_int),
    ('x_flag_gnu89_inline', c_int),
    ('x_flag_graphite', c_int),
    ('x_flag_graphite_identity', c_int),
    ('x_flag_guess_branch_prob', c_int),
    ('x_flag_hash_synchronization', c_int),
    ('x_flag_no_ident', c_int),
    ('x_flag_if_conversion', c_int),
    ('x_flag_if_conversion2', c_int),
    ('x_flag_implement_inlines', c_int),
    ('x_flag_implicit_inline_templates', c_int),
    ('x_flag_implicit_templates', c_int),
    ('x_flag_indirect_classes', c_int),
    ('x_flag_indirect_dispatch', c_int),
    ('x_flag_indirect_inlining', c_int),
    ('x_flag_inhibit_size_directive', c_int),
    ('x_flag_no_inline', c_int),
    ('x_flag_inline_functions', c_int),
    ('x_flag_inline_functions_called_once', c_int),
    ('x_flag_inline_small_functions', c_int),
    ('x_flag_instrument_function_entry_exit', c_int),
    ('x_flag_ipa_cp', c_int),
    ('x_flag_ipa_cp_clone', c_int),
    ('x_flag_ipa_matrix_reorg', c_int),
    ('x_flag_ipa_profile', c_int),
    ('x_flag_ipa_pta', c_int),
    ('x_flag_ipa_pure_const', c_int),
    ('x_flag_ipa_reference', c_int),
    ('x_flag_ipa_sra', c_int),
    ('x_flag_ipa_struct_reorg', c_int),
    ('x_flag_ira_algorithm', ira_algorithm),
    ('x_flag_ira_loop_pressure', c_int),
    ('x_flag_ira_region', ira_region),
    ('x_flag_ira_share_save_slots', c_int),
    ('x_flag_ira_share_spill_slots', c_int),
    ('x_flag_ira_verbose', c_int),
    ('x_flag_ivopts', c_int),
    ('x_flag_jni', c_int),
    ('x_flag_jump_tables', c_int),
    ('x_flag_keep_inline_dllexport', c_int),
    ('x_flag_keep_inline_functions', c_int),
    ('x_flag_keep_static_consts', c_int),
    ('x_flag_lax_vector_conversions', c_int),
    ('x_flag_leading_underscore', c_int),
    ('x_flag_loop_block', c_int),
    ('x_flag_loop_flatten', c_int),
    ('x_flag_loop_interchange', c_int),
    ('x_flag_loop_parallelize_all', c_int),
    ('x_flag_loop_strip_mine', c_int),
    ('x_flag_lto_compression_level', c_int),
    ('x_flag_lto_partition_1to1', c_int),
    ('x_flag_lto_partition_balanced', c_int),
    ('x_flag_lto_partition_none', c_int),
    ('x_flag_lto_report', c_int),
    ('x_flag_lto', STRING),
    ('x_flag_ltrans', c_int),
    ('x_ltrans_output_list', STRING),
    ('x_flag_errno_math', c_int),
    ('x_flag_max_errors', c_int),
    ('x_mem_report', c_int),
    ('x_flag_merge_constants', c_int),
    ('x_flag_merge_debug_strings', c_int),
    ('x_flag_modulo_sched', c_int),
    ('x_flag_modulo_sched_allow_regmoves', c_int),
    ('x_flag_move_loop_invariants', c_int),
    ('x_flag_ms_extensions', c_int),
    ('x_flag_mudflap', c_int),
    ('x_flag_mudflap_ignore_reads', c_int),
    ('x_flag_nil_receivers', c_int),
    ('x_flag_non_call_exceptions', c_int),
    ('x_flag_no_nonansi_builtin', c_int),
    ('x_flag_nothrow_opt', c_int),
    ('x_flag_objc_abi', c_int),
    ('x_flag_objc_call_cxx_cdtors', c_int),
    ('x_flag_objc_direct_dispatch', c_int),
    ('x_flag_objc_exceptions', c_int),
    ('x_flag_objc_gc', c_int),
    ('x_flag_objc_nilcheck', c_int),
    ('x_flag_objc_sjlj_exceptions', c_int),
    ('x_flag_objc1_only', c_int),
    ('x_flag_omit_frame_pointer', c_int),
    ('x_flag_openmp', c_int),
    ('x_flag_regmove', c_int),
    ('x_flag_optimize_sibling_calls', c_int),
    ('x_flag_optimize_sci', c_int),
    ('x_flag_pack_struct', c_int),
    ('x_flag_partial_inlining', c_int),
    ('x_flag_pcc_struct_return', c_int),
    ('x_flag_peel_loops', c_int),
    ('x_flag_no_peephole', c_int),
    ('x_flag_peephole2', c_int),
    ('x_flag_plan9_extensions', c_int),
    ('x_post_ipa_mem_report', c_int),
    ('x_pre_ipa_mem_report', c_int),
    ('x_flag_predictive_commoning', c_int),
    ('x_flag_prefetch_loop_arrays', c_int),
    ('x_flag_pretty_templates', c_int),
    ('x_profile_flag', c_int),
    ('x_profile_arc_flag', c_int),
    ('x_flag_profile_correction', c_int),
    ('x_profile_data_prefix', STRING),
    ('x_flag_profile_use', c_int),
    ('x_flag_profile_values', c_int),
    ('x_flag_reciprocal_math', c_int),
    ('x_flag_record_gcc_switches', c_int),
    ('x_flag_reduced_reflection', c_int),
    ('x_flag_rename_registers', c_int),
    ('x_flag_reorder_blocks', c_int),
    ('x_flag_reorder_blocks_and_partition', c_int),
    ('x_flag_reorder_functions', c_int),
    ('x_flag_replace_objc_classes', c_int),
    ('x_go_require_return_statement', c_int),
    ('x_flag_rerun_cse_after_loop', c_int),
    ('x_flag_resched_modulo_sched', c_int),
    ('x_flag_rounding_math', c_int),
    ('x_flag_rtti', c_int),
    ('x_flag_sched_critical_path_heuristic', c_int),
    ('x_flag_sched_dep_count_heuristic', c_int),
    ('x_flag_sched_group_heuristic', c_int),
    ('x_flag_schedule_interblock', c_int),
    ('x_flag_sched_last_insn_heuristic', c_int),
    ('x_flag_sched_pressure', c_int),
    ('x_flag_sched_rank_heuristic', c_int),
    ('x_flag_schedule_speculative', c_int),
    ('x_flag_sched_spec_insn_heuristic', c_int),
    ('x_flag_schedule_speculative_load', c_int),
    ('x_flag_schedule_speculative_load_dangerous', c_int),
    ('x_flag_sched_stalled_insns', c_int),
    ('x_flag_sched_stalled_insns_dep', c_int),
    ('x_sched_verbose_param', c_int),
    ('x_flag_sched2_use_superblocks', c_int),
    ('x_flag_schedule_insns', c_int),
    ('x_flag_schedule_insns_after_reload', c_int),
    ('x_flag_section_anchors', c_int),
    ('x_flag_sel_sched_pipelining', c_int),
    ('x_flag_sel_sched_pipelining_outer_loops', c_int),
    ('x_flag_sel_sched_reschedule_pipelined', c_int),
    ('x_flag_selective_scheduling', c_int),
    ('x_flag_selective_scheduling2', c_int),
    ('x_flag_short_double', c_int),
    ('x_flag_short_enums', c_int),
    ('x_flag_short_wchar', c_int),
    ('x_flag_show_column', c_int),
    ('x_flag_signaling_nans', c_int),
    ('x_flag_signed_bitfields', c_int),
    ('x_flag_signed_char', c_int),
    ('x_flag_signed_zeros', c_int),
    ('x_flag_single_precision_constant', c_int),
    ('x_flag_split_ivs_in_unroller', c_int),
    ('x_flag_split_stack', c_int),
    ('x_flag_split_wide_types', c_int),
    ('x_flag_stack_protect', c_int),
    ('x_flag_stack_usage', c_int),
    ('x_flag_detailed_statistics', c_int),
    ('x_flag_store_check', c_int),
    ('x_flag_strict_aliasing', c_int),
    ('x_flag_strict_enums', c_int),
    ('x_flag_strict_overflow', c_int),
    ('x_flag_strict_volatile_bitfields', c_int),
    ('x_flag_syntax_only', c_int),
    ('x_flag_test_coverage', c_int),
    ('x_flag_thread_jumps', c_int),
    ('x_flag_threadsafe_statics', c_int),
    ('x_time_report', c_int),
    ('x_flag_tls_default', tls_model),
    ('x_flag_toplevel_reorder', c_int),
    ('x_flag_tracer', c_int),
    ('x_flag_trapping_math', c_int),
    ('x_flag_trapv', c_int),
    ('x_flag_tree_bit_ccp', c_int),
    ('x_flag_tree_builtin_call_dce', c_int),
    ('x_flag_tree_ccp', c_int),
    ('x_flag_tree_ch', c_int),
    ('x_flag_tree_copy_prop', c_int),
    ('x_flag_tree_copyrename', c_int),
    ('x_flag_tree_cselim', c_int),
    ('x_flag_tree_dce', c_int),
    ('x_flag_tree_dom', c_int),
    ('x_flag_tree_dse', c_int),
    ('x_flag_tree_forwprop', c_int),
    ('x_flag_tree_fre', c_int),
    ('x_flag_tree_loop_distribute_patterns', c_int),
    ('x_flag_tree_loop_distribution', c_int),
    ('x_flag_tree_loop_if_convert', c_int),
    ('x_flag_tree_loop_if_convert_stores', c_int),
    ('x_flag_tree_loop_im', c_int),
    ('x_flag_tree_loop_ivcanon', c_int),
    ('x_flag_tree_loop_optimize', c_int),
    ('x_flag_tree_live_range_split', c_int),
    ('x_flag_tree_parallelize_loops', c_int),
    ('x_flag_tree_phiprop', c_int),
    ('x_flag_tree_pre', c_int),
    ('x_flag_tree_pta', c_int),
    ('x_flag_tree_reassoc', c_int),
    ('x_flag_tree_scev_cprop', c_int),
    ('x_flag_tree_sink', c_int),
    ('x_flag_tree_slp_vectorize', c_int),
    ('x_flag_tree_sra', c_int),
    ('x_flag_tree_switch_conversion', c_int),
    ('x_flag_tree_ter', c_int),
    ('x_flag_tree_vect_loop_version', c_int),
    ('x_flag_tree_vectorize', c_int),
    ('x_flag_tree_vrp', c_int),
    ('x_flag_unit_at_a_time', c_int),
    ('x_flag_unroll_all_loops', c_int),
    ('x_flag_unroll_loops', c_int),
    ('x_flag_unsafe_loop_optimizations', c_int),
    ('x_flag_unsafe_math_optimizations', c_int),
    ('x_flag_unswitch_loops', c_int),
    ('x_flag_unwind_tables', c_int),
    ('x_flag_use_atomic_builtins', c_int),
    ('x_flag_use_boehm_gc', c_int),
    ('x_flag_use_cxa_atexit', c_int),
    ('x_flag_use_cxa_get_exception_ptr', c_int),
    ('x_flag_use_divide_subroutine', c_int),
    ('x_flag_var_tracking', c_int),
    ('x_flag_var_tracking_assignments', c_int),
    ('x_flag_var_tracking_assignments_toggle', c_int),
    ('x_flag_var_tracking_uninit', c_int),
    ('x_flag_variable_expansion_in_unroller', c_int),
    ('x_flag_vect_cost_model', c_int),
    ('x_flag_verbose_asm', c_int),
    ('x_flag_visibility_ms_compat', c_int),
    ('x_default_visibility', symbol_visibility),
    ('x_flag_value_profile_transformations', c_int),
    ('x_flag_weak', c_int),
    ('x_flag_web', c_int),
    ('x_flag_whole_program', c_int),
    ('x_flag_working_directory', c_int),
    ('x_flag_wpa', c_int),
    ('x_flag_wrapv', c_int),
    ('x_flag_zee', c_int),
    ('x_flag_zero_initialized_in_bss', c_int),
    ('x_flag_zero_link', c_int),
    ('x_dwarf_version', c_int),
    ('x_flag_gen_declaration', c_int),
    ('x_dwarf_strict', c_int),
    ('x_flag_gtoggle', c_int),
    ('x_imultiarch', STRING),
    ('x_plugindir_string', STRING),
    ('x_ix86_abi_string', STRING),
    ('x_ix86_align_funcs_string', STRING),
    ('x_ix86_align_jumps_string', STRING),
    ('x_ix86_align_loops_string', STRING),
    ('x_flag_android', c_int),
    ('x_ix86_arch_string', STRING),
    ('x_ix86_asm_string', STRING),
    ('x_linux_libc', c_int),
    ('x_ix86_branch_cost_string', STRING),
    ('x_ix86_cmodel_string', STRING),
    ('x_flag_dispatch_scheduler', c_int),
    ('x_flag_fentry', c_int),
    ('x_ix86_force_drap', c_int),
    ('x_ix86_fpmath_string', STRING),
    ('x_ix86_incoming_stack_boundary_string', STRING),
    ('x_ix86_section_threshold_string', STRING),
    ('x_ix87_precision_string', STRING),
    ('x_ix86_preferred_stack_boundary_string', STRING),
    ('x_ix86_regparm_string', STRING),
    ('x_ix86_sse2avx', c_int),
    ('x_ix86_force_align_arg_pointer', c_int),
    ('x_ix86_stringop_string', STRING),
    ('x_ix86_tls_dialect_string', STRING),
    ('x_ix86_tune_string', STRING),
    ('x_ix86_veclibabi_string', STRING),
    ('x_asm_file_name', STRING),
    ('x_pass_exit_codes', c_int),
    ('x_pedantic', c_int),
    ('x_flag_pedantic_errors', c_int),
    ('x_use_pipes', c_int),
    ('x_print_file_name', STRING),
    ('x_print_multi_directory', c_int),
    ('x_print_multi_lib', c_int),
    ('x_print_multi_os_directory', c_int),
    ('x_print_multiarch', c_int),
    ('x_print_prog_name', STRING),
    ('x_print_search_dirs', c_int),
    ('x_print_sysroot', c_int),
    ('x_print_sysroot_headers_suffix', c_int),
    ('x_quiet_flag', c_int),
    ('x_report_times', c_int),
    ('x_flag_undef', c_int),
    ('x_verbose_flag', c_int),
    ('x_version_flag', c_int),
    ('x_inhibit_warnings', c_int),
    ('x_wrapper_string', STRING),
    ('frontend_set_flag_associative_math', c_bool),
    ('frontend_set_flag_cx_limited_range', c_bool),
    ('frontend_set_flag_finite_math_only', c_bool),
    ('frontend_set_flag_errno_math', c_bool),
    ('frontend_set_flag_reciprocal_math', c_bool),
    ('frontend_set_flag_rounding_math', c_bool),
    ('frontend_set_flag_signaling_nans', c_bool),
    ('frontend_set_flag_signed_zeros', c_bool),
    ('frontend_set_flag_trapping_math', c_bool),
    ('frontend_set_flag_unsafe_math_optimizations', c_bool),
]

# values for enumeration 'opt_code'
opt_code = c_int # enum

# values for enumeration 'ld_plugin_status'
ld_plugin_status = c_int # enum

# values for enumeration 'ld_plugin_api_version'
ld_plugin_api_version = c_int # enum

# values for enumeration 'ld_plugin_output_file_type'
ld_plugin_output_file_type = c_int # enum
class ld_plugin_input_file(Structure):
    pass
ld_plugin_input_file._fields_ = [
    ('name', STRING),
    ('fd', c_int),
    ('offset', off_t),
    ('filesize', off_t),
    ('handle', c_void_p),
]
class ld_plugin_symbol(Structure):
    pass
ld_plugin_symbol._pack_ = 4
ld_plugin_symbol._fields_ = [
    ('name', STRING),
    ('version', STRING),
    ('def', c_int),
    ('visibility', c_int),
    ('size', uint64_t),
    ('comdat_key', STRING),
    ('resolution', c_int),
]

# values for enumeration 'ld_plugin_symbol_kind'
ld_plugin_symbol_kind = c_int # enum

# values for enumeration 'ld_plugin_symbol_visibility'
ld_plugin_symbol_visibility = c_int # enum
ld_plugin_claim_file_handler = CFUNCTYPE(ld_plugin_status, POINTER(ld_plugin_input_file), POINTER(c_int))
ld_plugin_all_symbols_read_handler = CFUNCTYPE(ld_plugin_status)
ld_plugin_cleanup_handler = CFUNCTYPE(ld_plugin_status)
ld_plugin_register_claim_file = CFUNCTYPE(ld_plugin_status, ld_plugin_claim_file_handler)
ld_plugin_register_all_symbols_read = CFUNCTYPE(ld_plugin_status, ld_plugin_all_symbols_read_handler)
ld_plugin_register_cleanup = CFUNCTYPE(ld_plugin_status, ld_plugin_cleanup_handler)
ld_plugin_add_symbols = CFUNCTYPE(ld_plugin_status, c_void_p, c_int, POINTER(ld_plugin_symbol))
ld_plugin_get_input_file = CFUNCTYPE(ld_plugin_status, c_void_p, POINTER(ld_plugin_input_file))
ld_plugin_release_input_file = CFUNCTYPE(ld_plugin_status, c_void_p)
ld_plugin_get_symbols = CFUNCTYPE(ld_plugin_status, c_void_p, c_int, POINTER(ld_plugin_symbol))
ld_plugin_add_input_file = CFUNCTYPE(ld_plugin_status, STRING)
ld_plugin_add_input_library = CFUNCTYPE(ld_plugin_status, STRING)
ld_plugin_set_extra_library_path = CFUNCTYPE(ld_plugin_status, STRING)
ld_plugin_message = CFUNCTYPE(ld_plugin_status, c_int, STRING)

# values for enumeration 'ld_plugin_level'
ld_plugin_level = c_int # enum

# values for enumeration 'ld_plugin_tag'
ld_plugin_tag = c_int # enum
class ld_plugin_tv(Structure):
    pass
class N12ld_plugin_tv5DOT_101E(Union):
    pass
N12ld_plugin_tv5DOT_101E._fields_ = [
    ('tv_val', c_int),
    ('tv_string', STRING),
    ('tv_register_claim_file', ld_plugin_register_claim_file),
    ('tv_register_all_symbols_read', ld_plugin_register_all_symbols_read),
    ('tv_register_cleanup', ld_plugin_register_cleanup),
    ('tv_add_symbols', ld_plugin_add_symbols),
    ('tv_get_symbols', ld_plugin_get_symbols),
    ('tv_add_input_file', ld_plugin_add_input_file),
    ('tv_message', ld_plugin_message),
    ('tv_get_input_file', ld_plugin_get_input_file),
    ('tv_release_input_file', ld_plugin_release_input_file),
    ('tv_add_input_library', ld_plugin_add_input_library),
    ('tv_set_extra_library_path', ld_plugin_set_extra_library_path),
]
ld_plugin_tv._fields_ = [
    ('tv_tag', ld_plugin_tag),
    ('tv_u', N12ld_plugin_tv5DOT_101E),
]
ld_plugin_onload = CFUNCTYPE(ld_plugin_status, POINTER(ld_plugin_tv))
class pointer_map_t(Structure):
    pass
pointer_map_t._fields_ = [
]

# values for enumeration 'prediction'
prediction = c_int # enum

# values for enumeration 'diagnostic_prefixing_rule_t'
diagnostic_prefixing_rule_t = c_int # enum
class chunk_info(Structure):
    pass
chunk_info._fields_ = [
    ('prev', POINTER(chunk_info)),
    ('args', STRING * 60),
]
class output_buffer(Structure):
    pass
output_buffer._fields_ = [
    ('formatted_obstack', obstack),
    ('chunk_obstack', obstack),
    ('obstack', POINTER(obstack)),
    ('cur_chunk_array', POINTER(chunk_info)),
    ('stream', POINTER(FILE)),
    ('line_length', c_int),
    ('digit_buffer', c_char * 128),
]
pp_flags = c_uint

# values for enumeration 'pp_padding'
pp_padding = c_int # enum
class pp_wrapping_mode_t(Structure):
    pass
pp_wrapping_mode_t._fields_ = [
    ('rule', diagnostic_prefixing_rule_t),
    ('line_cutoff', c_int),
]
printer_fn = CFUNCTYPE(c_bool, POINTER(pretty_printer), POINTER(text_info), STRING, c_int, c_bool, c_bool, c_bool)
pretty_print_info._fields_ = [
    ('buffer', POINTER(output_buffer)),
    ('prefix', STRING),
    ('padding', pp_padding),
    ('maximum_length', c_int),
    ('indent_skip', c_int),
    ('wrapping', pp_wrapping_mode_t),
    ('format_decoder', printer_fn),
    ('emitted_prefix', c_bool),
    ('need_newline', c_bool),
    ('translate_identifiers', c_bool),
]

# values for enumeration 'real_value_class'
real_value_class = c_int # enum
real_value._fields_ = [
    ('cl', c_uint, 2),
    ('decimal', c_uint, 1),
    ('sign', c_uint, 1),
    ('signalling', c_uint, 1),
    ('canonical', c_uint, 1),
    ('uexp', c_uint, 26),
    ('sig', c_ulong * 5),
]
class real_format(Structure):
    pass
real_format._fields_ = [
    ('encode', CFUNCTYPE(None, POINTER(real_format), POINTER(c_long), POINTER(real_value))),
    ('decode', CFUNCTYPE(None, POINTER(real_format), POINTER(real_value), POINTER(c_long))),
    ('b', c_int),
    ('p', c_int),
    ('pnan', c_int),
    ('emin', c_int),
    ('emax', c_int),
    ('signbit_ro', c_int),
    ('signbit_rw', c_int),
    ('round_towards_zero', c_bool),
    ('has_sign_dependent_rounding', c_bool),
    ('has_nans', c_bool),
    ('has_inf', c_bool),
    ('has_denorm', c_bool),
    ('has_signed_zero', c_bool),
    ('qnan_msb_set', c_bool),
    ('canonical_nan_lsbs_set', c_bool),
]

# values for unnamed enumeration
class sbitmap_iterator(Structure):
    pass
sbitmap_iterator._fields_ = [
    ('ptr', POINTER(c_ulong)),
    ('size', c_uint),
    ('word_num', c_uint),
    ('bit_num', c_uint),
    ('word', c_ulong),
]
class int_list(Structure):
    pass
int_list._fields_ = [
]
libi_uhostptr_t = c_ulong
libi_shostptr_t = c_long
splay_tree_key = libi_uhostptr_t
splay_tree_value = libi_uhostptr_t
class splay_tree_node_s(Structure):
    pass
splay_tree_node = POINTER(splay_tree_node_s)
splay_tree_compare_fn = CFUNCTYPE(c_int, splay_tree_key, splay_tree_key)
splay_tree_delete_key_fn = CFUNCTYPE(None, splay_tree_key)
splay_tree_delete_value_fn = CFUNCTYPE(None, splay_tree_value)
splay_tree_foreach_fn = CFUNCTYPE(c_int, splay_tree_node, c_void_p)
splay_tree_allocate_fn = CFUNCTYPE(c_void_p, c_int, c_void_p)
splay_tree_deallocate_fn = CFUNCTYPE(None, c_void_p, c_void_p)
splay_tree_node_s._fields_ = [
    ('key', splay_tree_key),
    ('value', splay_tree_value),
    ('left', splay_tree_node),
    ('right', splay_tree_node),
]
class splay_tree_s(Structure):
    pass
splay_tree_s._fields_ = [
    ('root', splay_tree_node),
    ('comp', splay_tree_compare_fn),
    ('delete_key', splay_tree_delete_key_fn),
    ('delete_value', splay_tree_delete_value_fn),
    ('allocate', splay_tree_allocate_fn),
    ('deallocate', splay_tree_deallocate_fn),
    ('allocate_data', c_void_p),
]
splay_tree = POINTER(splay_tree_s)
ht_identifier_ptr = POINTER(ht_identifier)
class ht(Structure):
    pass
hash_table = ht
hashnode = POINTER(ht_identifier)

# values for enumeration 'ht_lookup_option'
ht_lookup_option = c_int # enum
ht._fields_ = [
    ('stack', obstack),
    ('entries', POINTER(hashnode)),
    ('alloc_node', CFUNCTYPE(hashnode, POINTER(hash_table))),
    ('alloc_subobject', CFUNCTYPE(c_void_p, size_t)),
    ('nslots', c_uint),
    ('nelements', c_uint),
    ('pfile', POINTER(cpp_reader)),
    ('searches', c_uint),
    ('collisions', c_uint),
    ('entries_owned', c_bool),
]
ht_cb = CFUNCTYPE(c_int, POINTER(cpp_reader), hashnode, c_void_p)
class VEC_gimple_gc(Structure):
    pass
class ssa_operands(Structure):
    pass
class ssa_operand_memory_d(Structure):
    pass
ssa_operands._fields_ = [
    ('operand_memory', POINTER(ssa_operand_memory_d)),
    ('operand_memory_index', c_uint),
    ('ssa_operand_mem_size', c_uint),
    ('ops_active', c_bool),
    ('free_defs', POINTER(def_optype_d)),
    ('free_uses', POINTER(use_optype_d)),
]
gimple_df._fields_ = [
    ('referenced_vars', htab_t),
    ('modified_noreturn_calls', POINTER(VEC_gimple_gc)),
    ('ssa_names', POINTER(VEC_tree_gc)),
    ('vop', tree),
    ('escaped', pt_solution),
    ('decls_to_pointers', POINTER(pointer_map_t)),
    ('free_ssanames', tree),
    ('default_defs', htab_t),
    ('syms_to_rename', bitmap),
    ('in_ssa_p', c_uint, 1),
    ('ipa_pta', c_uint, 1),
    ('ssa_operands', ssa_operands),
]
class htab_iterator(Structure):
    pass
htab_iterator._fields_ = [
    ('htab', htab_t),
    ('slot', POINTER(c_void_p)),
    ('limit', POINTER(c_void_p)),
]
ptr_info_def._fields_ = [
    ('pt', pt_solution),
    ('align', c_uint),
    ('misalign', c_uint),
]

# values for enumeration 'need_phi_state'
need_phi_state = c_int # enum
var_ann_d._fields_ = [
    ('base_var_processed', c_uint, 1),
    ('used', c_uint, 1),
    ('need_phi_state', need_phi_state, 2),
    ('is_heapvar', c_uint, 1),
    ('base_index', c_uint),
    ('current_def', tree),
]
class immediate_use_iterator_d(Structure):
    pass
ssa_use_operand_t = ssa_use_operand_d
immediate_use_iterator_d._fields_ = [
    ('imm_use', POINTER(ssa_use_operand_t)),
    ('end_p', POINTER(ssa_use_operand_t)),
    ('iter_node', ssa_use_operand_t),
    ('next_imm_name', POINTER(ssa_use_operand_t)),
]
imm_use_iterator = immediate_use_iterator_d
var_ann_t = POINTER(var_ann_d)
class int_tree_map(Structure):
    pass
int_tree_map._fields_ = [
    ('uid', c_uint),
    ('to', tree),
]
class referenced_var_iterator(Structure):
    pass
referenced_var_iterator._fields_ = [
    ('hti', htab_iterator),
]
class omp_region(Structure):
    pass
omp_region._fields_ = [
    ('outer', POINTER(omp_region)),
    ('inner', POINTER(omp_region)),
    ('next', POINTER(omp_region)),
    ('entry', basic_block),
    ('exit', basic_block),
    ('cont', basic_block),
    ('ws_args', POINTER(VEC_tree_gc)),
    ('type', gimple_code),
    ('sched_kind', omp_clause_schedule_kind),
    ('is_combined_parallel', c_bool),
]
class _edge_var_map(Structure):
    pass
_edge_var_map._fields_ = [
    ('result', tree),
    ('def', tree),
    ('locus', source_location),
]
edge_var_map = _edge_var_map
class VEC_edge_var_map_base(Structure):
    pass
VEC_edge_var_map_base._fields_ = [
    ('num', c_uint),
    ('alloc', c_uint),
    ('vec', edge_var_map * 1),
]
class VEC_edge_var_map_none(Structure):
    pass
VEC_edge_var_map_none._fields_ = [
    ('base', VEC_edge_var_map_base),
]
class VEC_edge_var_map_heap(Structure):
    pass
VEC_edge_var_map_heap._fields_ = [
    ('base', VEC_edge_var_map_base),
]
edge_var_map_vector = POINTER(VEC_edge_var_map_heap)
walk_use_def_chains_fn = CFUNCTYPE(c_bool, tree, gimple, c_void_p)
class affine_iv(Structure):
    pass
affine_iv._fields_ = [
    ('base', tree),
    ('step', tree),
    ('no_overflow', c_bool),
]
class tree_niter_desc(Structure):
    pass
tree_niter_desc._fields_ = [
    ('assumptions', tree),
    ('may_be_zero', tree),
    ('niter', tree),
    ('max', double_int),
    ('control', affine_iv),
    ('bound', tree),
    ('cmp', tree_code),
]

# values for enumeration 'ev_direction'
ev_direction = c_int # enum
transform_callback = CFUNCTYPE(None, POINTER(loop), c_void_p)

# values for enumeration 'move_pos'
move_pos = c_int # enum
class pre_expr_d(Structure):
    pass
pre_expr_d._fields_ = [
]
class mem_address(Structure):
    pass
mem_address._fields_ = [
    ('symbol', tree),
    ('base', tree),
    ('index', tree),
    ('step', tree),
    ('offset', tree),
]
class affine_tree_combination(Structure):
    pass
affine_tree_combination._fields_ = [
]
class ao_ref_s(Structure):
    pass
ao_ref_s._pack_ = 4
ao_ref_s._fields_ = [
    ('ref', tree),
    ('base', tree),
    ('offset', c_longlong),
    ('size', c_longlong),
    ('max_size', c_longlong),
    ('ref_alias_set', alias_set_type),
    ('base_alias_set', alias_set_type),
]
ao_ref = ao_ref_s
def_operand_p = POINTER(tree)
use_operand_p = POINTER(ssa_use_operand_t)
def_optype_d._fields_ = [
    ('next', POINTER(def_optype_d)),
    ('def_ptr', POINTER(tree)),
]
def_optype_p = POINTER(def_optype_d)
use_optype_d._fields_ = [
    ('next', POINTER(use_optype_d)),
    ('use_ptr', ssa_use_operand_d),
]
use_optype_p = POINTER(use_optype_d)
ssa_operand_memory_d._fields_ = [
    ('next', POINTER(ssa_operand_memory_d)),
    ('mem', c_char * 1),
]

# values for enumeration 'ssa_op_iter_type'
ssa_op_iter_type = c_int # enum
class ssa_operand_iterator_d(Structure):
    pass
ssa_operand_iterator_d._fields_ = [
    ('done', c_bool),
    ('iter_type', ssa_op_iter_type),
    ('defs', def_optype_p),
    ('uses', use_optype_p),
    ('phi_i', c_int),
    ('num_phi', c_int),
    ('phi_stmt', gimple),
]
ssa_op_iter = ssa_operand_iterator_d

# values for enumeration 'tree_code_class'
tree_code_class = c_int # enum

# values for enumeration 'alias_diag_flags'
alias_diag_flags = c_int # enum
class alias_pair(Structure):
    pass
alias_pair._fields_ = [
    ('decl', tree),
    ('target', tree),
    ('emitted_diags', c_int),
]
class VEC_alias_pair_base(Structure):
    pass
VEC_alias_pair_base._fields_ = [
    ('num', c_uint),
    ('alloc', c_uint),
    ('vec', alias_pair * 1),
]
class VEC_alias_pair_none(Structure):
    pass
VEC_alias_pair_none._fields_ = [
    ('base', VEC_alias_pair_base),
]
class VEC_alias_pair_gc(Structure):
    pass
VEC_alias_pair_gc._fields_ = [
    ('base', VEC_alias_pair_base),
]

# values for enumeration 'tree_node_structure_enum'
tree_node_structure_enum = c_int # enum
class constructor_elt_d(Structure):
    pass
constructor_elt_d._fields_ = [
    ('index', tree),
    ('value', tree),
]
constructor_elt = constructor_elt_d
class VEC_constructor_elt_none(Structure):
    pass
class VEC_constructor_elt_base(Structure):
    pass
VEC_constructor_elt_base._fields_ = [
    ('num', c_uint),
    ('alloc', c_uint),
    ('vec', constructor_elt * 1),
]
VEC_constructor_elt_none._fields_ = [
    ('base', VEC_constructor_elt_base),
]
VEC_constructor_elt_gc._fields_ = [
    ('base', VEC_constructor_elt_base),
]
die_struct._fields_ = [
]
priority_type = c_ushort
tree_statement_list_node._fields_ = [
    ('prev', POINTER(tree_statement_list_node)),
    ('next', POINTER(tree_statement_list_node)),
    ('stmt', tree),
]

# values for enumeration 'tree_index'
tree_index = c_int # enum

# values for enumeration 'integer_type_kind'
integer_type_kind = c_int # enum

# values for enumeration 'ptrmemfunc_vbit_where_t'
ptrmemfunc_vbit_where_t = c_int # enum
class attribute_spec(Structure):
    pass
attribute_spec._fields_ = [
    ('name', STRING),
    ('min_length', c_int),
    ('max_length', c_int),
    ('decl_required', c_bool),
    ('type_required', c_bool),
    ('function_type_required', c_bool),
    ('handler', CFUNCTYPE(tree, POINTER(tree), tree, tree, c_int, POINTER(c_bool))),
]

# values for enumeration 'attribute_flags'
attribute_flags = c_int # enum
class record_layout_info_s(Structure):
    pass
record_layout_info_s._fields_ = [
    ('t', tree),
    ('offset', tree),
    ('offset_align', c_uint),
    ('bitpos', tree),
    ('record_align', c_uint),
    ('unpacked_align', c_uint),
    ('prev_field', tree),
    ('pending_statics', POINTER(VEC_tree_gc)),
    ('remaining_in_alignment', c_int),
    ('packed_maybe_necessary', c_int),
]
record_layout_info = POINTER(record_layout_info_s)

# values for enumeration 'size_type_kind'
size_type_kind = c_int # enum
class function_args_iterator(Structure):
    pass
function_args_iterator._fields_ = [
    ('next', tree),
]

# values for enumeration 'operand_equal_flag'
operand_equal_flag = c_int # enum
pointer_set_t._fields_ = [
]
symbol_alias_set_t = pointer_set_t
walk_tree_fn = CFUNCTYPE(tree, POINTER(tree), POINTER(c_int), c_void_p)
walk_tree_lh = CFUNCTYPE(tree, POINTER(tree), POINTER(c_int), CFUNCTYPE(tree, POINTER(tree), POINTER(c_int), c_void_p), c_void_p, POINTER(pointer_set_t))

# values for enumeration 'tree_node_kind'
tree_node_kind = c_int # enum
class tree_map_base(Structure):
    pass
tree_map_base._fields_ = [
    ('from', tree),
]
class tree_map(Structure):
    pass
tree_map._fields_ = [
    ('base', tree_map_base),
    ('hash', c_uint),
    ('to', tree),
]
class tree_decl_map(Structure):
    pass
tree_decl_map._fields_ = [
    ('base', tree_map_base),
    ('to', tree),
]
class tree_int_map(Structure):
    pass
tree_int_map._fields_ = [
    ('base', tree_map_base),
    ('to', c_uint),
]
class tree_priority_map(Structure):
    pass
tree_priority_map._fields_ = [
    ('base', tree_map_base),
    ('init', priority_type),
    ('fini', priority_type),
]
class call_expr_arg_iterator_d(Structure):
    pass
call_expr_arg_iterator_d._fields_ = [
    ('t', tree),
    ('n', c_int),
    ('i', c_int),
]
call_expr_arg_iterator = call_expr_arg_iterator_d
class const_call_expr_arg_iterator_d(Structure):
    pass
const_call_expr_arg_iterator_d._fields_ = [
    ('t', const_tree),
    ('n', c_int),
    ('i', c_int),
]
const_call_expr_arg_iterator = const_call_expr_arg_iterator_d
class vec_swallow_trailing_semi(Structure):
    pass
vec_swallow_trailing_semi._fields_ = [
]
VEC_tree_gc._fields_ = [
    ('base', VEC_tree_base),
]
VEC_tree_heap._fields_ = [
    ('base', VEC_tree_base),
]
class VEC_gimple_none(Structure):
    pass
class VEC_gimple_base(Structure):
    pass
VEC_gimple_base._fields_ = [
    ('num', c_uint),
    ('alloc', c_uint),
    ('vec', gimple * 1),
]
VEC_gimple_none._fields_ = [
    ('base', VEC_gimple_base),
]
VEC_gimple_heap._fields_ = [
    ('base', VEC_gimple_base),
]
VEC_gimple_gc._fields_ = [
    ('base', VEC_gimple_base),
]
gimple_p = POINTER(gimple)
class VEC_gimple_p_base(Structure):
    pass
VEC_gimple_p_base._fields_ = [
    ('num', c_uint),
    ('alloc', c_uint),
    ('vec', gimple_p * 1),
]
class VEC_gimple_p_none(Structure):
    pass
VEC_gimple_p_none._fields_ = [
    ('base', VEC_gimple_p_base),
]
class VEC_gimple_p_heap(Structure):
    pass
VEC_gimple_p_heap._fields_ = [
    ('base', VEC_gimple_p_base),
]
class VEC_gimple_seq_base(Structure):
    pass
VEC_gimple_seq_base._fields_ = [
    ('num', c_uint),
    ('alloc', c_uint),
    ('vec', gimple_seq * 1),
]
class VEC_gimple_seq_none(Structure):
    pass
VEC_gimple_seq_none._fields_ = [
    ('base', VEC_gimple_seq_base),
]
class VEC_gimple_seq_gc(Structure):
    pass
VEC_gimple_seq_gc._fields_ = [
    ('base', VEC_gimple_seq_base),
]
class VEC_gimple_seq_heap(Structure):
    pass
VEC_gimple_seq_heap._fields_ = [
    ('base', VEC_gimple_seq_base),
]
class VEC_rtx_none(Structure):
    pass
class VEC_rtx_base(Structure):
    pass
VEC_rtx_base._fields_ = [
    ('num', c_uint),
    ('alloc', c_uint),
    ('vec', rtx * 1),
]
VEC_rtx_none._fields_ = [
    ('base', VEC_rtx_base),
]
class VEC_rtx_heap(Structure):
    pass
VEC_rtx_heap._fields_ = [
    ('base', VEC_rtx_base),
]
class VEC_rtx_gc(Structure):
    pass
VEC_rtx_gc._fields_ = [
    ('base', VEC_rtx_base),
]
class VEC_char_base(Structure):
    pass
VEC_char_base._fields_ = [
    ('num', c_uint),
    ('alloc', c_uint),
    ('vec', c_char * 1),
]
class VEC_char_none(Structure):
    pass
VEC_char_none._fields_ = [
    ('base', VEC_char_base),
]
class VEC_char_heap(Structure):
    pass
VEC_char_heap._fields_ = [
    ('base', VEC_char_base),
]
uchar = c_ubyte
class VEC_uchar_none(Structure):
    pass
class VEC_uchar_base(Structure):
    pass
VEC_uchar_base._fields_ = [
    ('num', c_uint),
    ('alloc', c_uint),
    ('vec', uchar * 1),
]
VEC_uchar_none._fields_ = [
    ('base', VEC_uchar_base),
]
class VEC_uchar_heap(Structure):
    pass
VEC_uchar_heap._fields_ = [
    ('base', VEC_uchar_base),
]
VEC_uchar_gc._fields_ = [
    ('base', VEC_uchar_base),
]
class VEC_int_base(Structure):
    pass
VEC_int_base._fields_ = [
    ('num', c_uint),
    ('alloc', c_uint),
    ('vec', c_int * 1),
]
class VEC_int_none(Structure):
    pass
VEC_int_none._fields_ = [
    ('base', VEC_int_base),
]
class VEC_int_heap(Structure):
    pass
VEC_int_heap._fields_ = [
    ('base', VEC_int_base),
]
class VEC_unsigned_base(Structure):
    pass
VEC_unsigned_base._fields_ = [
    ('num', c_uint),
    ('alloc', c_uint),
    ('vec', c_uint * 1),
]
class VEC_unsigned_none(Structure):
    pass
VEC_unsigned_none._fields_ = [
    ('base', VEC_unsigned_base),
]
class VEC_unsigned_heap(Structure):
    pass
VEC_unsigned_heap._fields_ = [
    ('base', VEC_unsigned_base),
]
size_t = c_uint
__all__ = ['__int16_t', 'CTI_WIDEST_UINT_LIT_TYPE',
           'splay_tree_value', 'UHQmode',
           'VEC_qualified_typedef_usage_t_none', 'GIMPLE_OMP_RETURN',
           'sfk_copy_constructor', 'OPT_msahf', 'OPT_SPECIAL_unknown',
           '__s16', 'EMPTY_CLASS_EXPR', 'linkage_kind',
           'BUILT_IN_FSCANF', 'GIMPLE_EH_DISPATCH', 'BCS_TRY_BLOCK',
           'umode_t', 'UNSPEC_BLENDV', 'OPT_Tbss_', 'GIMPLE_LABEL',
           'gt_ggc_e_15rtx_def_barrier', 'VISIBILITY_INTERNAL',
           'UNSPECV_STACK_PROBE', 'BUILT_IN_FREXP', 'OMP_SECTION',
           'N15pthread_mutex_t17__pthread_mutex_s4DOT_12E',
           '_SC_PASS_MAX', 'stringop_alg', 'ICR_RETURN',
           '_PC_SOCK_MAXBUF', 'UNSPEC_LD_MPIC', '__codecvt_partial',
           'PLUGIN_INFO', 'TI_BOOLEAN_TRUE', 'OPT_Wswitch',
           'tree_decl_map', 'OPT_fbranch_count_reg', 'ipa_opt_pass_d',
           '_CS_POSIX_V6_LP64_OFF64_CFLAGS', 'cl_option',
           'need_phi_state', 'UNSPEC_FRNDINT_FLOOR',
           'OPT_fcheck_array_temporaries', 'OPT_Tdata',
           'OPT_Wdouble_promotion', 'OPT_fvisibility_', 'et_node',
           'V8QImode', 'BUILT_IN_POPCOUNT',
           'gt_ggc_e_30rtx_def_unsigned_fract_convert',
           'OPT_Wjavadoc', 'fstream', '_SC_STREAMS', 'dom_state',
           'gt_ggc_e_25VEC_deferred_locations_gc', 'EXIT_EXPR',
           'UNSPEC_CALL_NEEDS_VZEROUPPER', 'CPP_DL_ICE',
           'BUILT_IN_FETCH_AND_SUB_16', 'NTV_ANSWER',
           'TI_INTEGER_PTR_TYPE', '_SC_CLK_TCK',
           'OPT_fconvert_little_endian', 'CTI_WCHAR_ARRAY_TYPE',
           'OPT_Xlinker', 'BUILT_IN_FETCH_AND_SUB_N',
           'gt_ggc_e_19dw_cfi_oprnd_struct', 'REDUC_MIN_EXPR',
           'TS_COMMON', '_PC_2_SYMLINKS', 'VEC_UNPACK_FLOAT_LO_EXPR',
           'gt_ggc_e_21VEC_const_char_p_base', 'LDPK_WEAKUNDEF',
           'gt_e_P9mem_attrs4htab', 'OPT_frerun_cse_after_loop',
           'PROCESSOR_PENTIUM4', 'DK_UNSPECIFIED', 'UNSPEC_FNSTSW',
           'BUILT_IN_FETCH_AND_SUB_4', 'BUILT_IN_FETCH_AND_SUB_2',
           'BUILT_IN_FETCH_AND_SUB_1', '__sighandler_t',
           '_SC_NL_ARGMAX', 'X86_TUNE_FOUR_JUMP_LIMIT',
           'BUILT_IN_FETCH_AND_SUB_8', 'CPTK_IS_ENUM',
           'gt_ggc_e_11align_stack', '__mpz_struct',
           'gt_ggc_e_11eh_region_d', 'CPTI_KEYED_CLASSES',
           'DINFO_USAGE_DIR_USE', 'ds_const',
           'gt_ggc_e_11eh_region_u', 'GSS_OMP_ATOMIC_STORE',
           'VEC_temp_slot_p_gc', 'uint_least16_t',
           'N7siginfo4DOT_304DOT_33E', 'VEC_rtx_base',
           'TEMPLATE_INFO', 'RID_IS_ENUM', 'CLD_DUMPED', 'u_char',
           'plugin_argument', '__be64', 'V8SFmode', 'tmpl_spec_kind',
           'pointer_set_t', 'LAST_GSS_ENUM', 'cdk_function',
           'MIN_MODE_VECTOR_INT', 'itk_char',
           'gt_ggc_e_20gimple_statement_try', 'V1DImode',
           'omp_clause_subcode', 'gt_ggc_e_23rtx_def_strict_low_part',
           'gt_ggc_e_18dw_loc_list_struct', 'OPT_Wpsabi',
           'OPT_Wpmf_conversions', 'CPP_NUMBER', '_ISlower',
           'ak_protected', 'ino_t', 'OPT_m3dnow',
           'TEMPLATE_TEMPLATE_PARM', '_PC_VDISABLE',
           'VEC_tree_pair_s_base', 'OPT_ftest_coverage',
           'attribute_flags', 'OPT_fvisibility_inlines_hidden',
           'CTI_SIGNED_SIZE_TYPE', 'TI_LONG_DOUBLE_PTR_TYPE',
           'gt_ggc_e_20rtx_def_const_vector', 'CPP_ATSIGN',
           'TI_FILEPTR_TYPE', 'tree', 'OPT_mbranch_cost_',
           'lang_decl_u3', 'ira_region', 'OPT_fgcse_after_reload',
           'BCS_FN_BODY', 'ptrmem_cst_t', 'iovec', 'sig_atomic_t',
           '__u8', 'omp_region', 'UNSPECV_EMMS', '_SC_SSIZE_MAX',
           'CPP_OPEN_BRACE', 'TS_DECL_WITH_VIS',
           'OPT_fltrans_output_list_', 'OPT_mvzeroupper', 'COImode',
           'OPT_Wint_to_pointer_cast', 'BUILT_IN_ISLESS',
           'CTI_UINT_FAST32_TYPE', '_SC_XOPEN_XCU_VERSION', 'GSS_TRY',
           'CPTK_IS_EMPTY', 'gt_ggc_e_16rtx_def_sequence',
           'UNSPECV_XCHG', 'OPT_mieee_fp', 'cgraph_edge_hook_list',
           'gt_ggc_e_13nb_iter_bound', 'gt_ggc_e_15c_spot_bindings',
           '_SC_THREAD_DESTRUCTOR_ITERATIONS', 'OPT_fconvert_native',
           '_SC_BC_STRING_MAX', 'diagnostic_finalizer_fn', 'itk_long',
           'OPT_Wsign_compare',
           'gt_e_SP9tree_node17splay_tree_node_s', 'CPP_HASH',
           'gt_ggc_e_6answer', 'gt_ggc_e_9c_binding',
#           'basic_stringbuf<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t>>', 
'die_struct', 'gt_ggc_e_13VEC_tree_none',
           'gt_ggc_e_8tree_int', 'BUILT_IN_BSWAP32', '_sch_isblank',
           'gt_ggc_e_20rtx_def_unsigned_fix', 'LSHIFT_EXPR',
           'CPO_CONVERSION', '_CS_POSIX_V6_LP64_OFF64_LDFLAGS',
           'EXPR_PACK_EXPANSION', 'ICV_THIRD_IN_FOR', 'UTQmode',
           'CPP_LAST_EQ', 'BUILT_IN_MD', 'ggc_root_tab',
           'BUILT_IN_ROUND', 'gt_ggc_e_11cgraph_edge',
           'BUILT_IN_GOMP_LOOP_STATIC_NEXT', 'OPT_ffree_form',
           '_IO_FILE_plus', 'LAST_TS_ENUM', 'CLK_STDC1X',
           'c_common_resword', 'FULL_BUILTIN_STACK_CHECK',
           'BUILT_IN_ISBLANK', 'DINFO_LEVEL_VERBOSE',
           'LDPR_RESOLVED_IR', 'LDPK_DEF', 'COMPARE_G_EXPR',
           'OPT_ftree_bit_ccp', 'CCGCmode', 'VEC_edge_var_map_base',
           'UNSPEC_TRUNC_NOOP', '_CS_V6_WIDTH_RESTRICTED_ENVS',
           'NE_EXPR', 'gt_ggc_e_16rtx_def_addr_vec',
           'OPT_fpcc_struct_return', 'FP_TOP_SSE_REGS',
           'gt_ggc_e_25VEC_ident_data_tuple_base',
           'gt_ggc_e_9rtvec_def', 'TARGET_CPU_DEFAULT_core2',
           'ICV_LEFT_OF_COMMA', 'BUILT_IN_FMOD', 'TRAP_TRACE',
           'TI_VA_LIST_GPR_COUNTER_FIELD', 'UNSPEC_PSIGN',
           'PRED_OPCODE_POSITIVE', 'greg_t', 'CPTI_LANG_NAME_C',
           'CPTI_EMPTY_EXCEPT_SPEC', 'gimple_vec', 'cxx0x',
           'BUILT_IN_STRPBRK', 'tree_optimization_option',
           'OPT_ftree_dse', 'gt_ggc_e_15rtx_def_trap_if',
           'OPT_mtune_', 'OPT_Wsynth', 'OPT_Xpreprocessor',
           '_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS', 'OPT_Wlogical_op',
           'gt_ggc_e_17rtx_def_insn_list', 'BUILT_IN_LOG1PF',
           'X86_TUNE_USE_HIMODE_FIOP', 'BUILT_IN_LOG1PL', 'itk_none',
           'TI_VOID_LIST_NODE', 'ICV_SECOND_OF_COND', '_SC_RTSIG_MAX',
           'BUILT_IN_ERF', 'itk_unsigned_short', 'UNSPEC_AESIMC',
           '_PC_FILESIZEBITS', 'PLUGIN_GGC_END', 'BUILT_IN_ISNAN',
           'TS_DECL_WRTL', 'BUILT_IN_NAND_AND_FETCH_N',
           'OPT_Wmissing_noreturn', 'VEC_cgraph_node_set_gc',
           'ARGUMENT_PACK_SELECT', 'BUILT_IN_NAND_AND_FETCH_4',
           'gt_ggc_e_13tree_ssa_name', 'BUILT_IN_NAND_AND_FETCH_2',
           'BUILT_IN_NAND_AND_FETCH_1', 'OPT_wrapper',
           'BUILT_IN_NAND_AND_FETCH_8', 'TAKEN', 'BUILT_IN_MEMPCPY',
           'OPT_Wvariadic_macros', 'gt_ggc_e_8typeinfo',
           'BUILT_IN_ASINF', 'BUILT_IN_ASINH', 'V16SImode',
           'BUILT_IN_ASINL', '__kernel_ssize_t', 'OPT_Wtrigraphs',
           'gt_ggc_e_13VEC_gimple_gc', 'TI_SAT_DQ_TYPE', '_SC_FIFO',
           'RID_SAT', 'TARGET_CPU_DEFAULT_k8',
           'gt_ggc_e_12c_label_vars', 'BUILT_IN_STRNCAT_CHK',
           'OPT_mrecip', 'ulong', 'gt_ggc_e_16VEC_eh_region_gc',
           'UNSPEC_PSHUFB', 'gt_ggc_e_13ipa_ref_ptr_u', 'ds_long',
           'GSI_CONTINUE_LINKING', 'TI_DQ_TYPE',
           'OPT_maccumulate_outgoing_args', 'OPT_fshort_wchar',
           'OPT_Wforbidden', 'BUILT_IN_EXECV', 'N7siginfo4DOT_30E',
           'gimplify_ctx', 'OPT_funswitch_loops', 'BIT_NOT_EXPR',
           'BUILT_IN_EXECL', 'UNSPEC_RSQRT', 'RID_OFFSETOF',
           'BUILT_IN_LOG2F', 'BUILT_IN_LOG2L', 'TI_SAT_USACCUM_TYPE',
           'PARM_DECL', '_SC_PII', 'DK_DEBUG',
           'RID_C99_FUNCTION_NAME', 'diagnostic_t', 'move_pos',
           'htab_free', 'OPT_Wformat', 'RID_VIRTUAL', '_sch_islower',
           'gt_ggc_e_17rtx_def_cond_exec', 'Lmid_t',
           'gt_ggc_e_15tree_omp_clause', 'BUILT_IN_SETJMP_RECEIVER',
           'gt_ggc_e_29gimple_statement_omp_sections', 'DK_ERROR',
           '_CS_XBS5_ILP32_OFFBIG_LINTFLAGS',
           'LDPT_ADD_INPUT_LIBRARY', 'SI_ASYNCIO',
           'OPT_feliminate_dwarf2_dups', 'OPT_fsched_stalled_insns_',
           'IR_GIMPLE', 'timezone', 'sc_extern', 'TI_UQQ_TYPE',
           'imaxdiv_t', '__RLIMIT_OFILE', 'REAL_CST', 'stringbuf',
           'lang_decl_parm', 'FIXED_CST', 'gt_ggc_e_9phi_arg_d',
           'gt_ggc_e_13rtx_def_minus', 'CLASS_REFERENCE_EXPR',
           'OPT_print_search_dirs', 'gt_ggc_e_12rtx_def_umax',
           'UNCONSTRAINED_ARRAY_TYPE', 'BUILT_IN_STRCPY',
           'tf_warning_or_error', 'useconds_t', 'TARGET_EXPR',
           'OPT_fipa_cp', 'VEC_varpool_node_ptr_heap',
           'gt_ggc_e_12lpt_decision', 'TI_SACCUM_TYPE',
           'gt_ggc_e_23VEC_call_site_record_gc', '_ISpunct',
           'ERROR_MARK',
           'BUILT_IN_GOMP_LOOP_ULL_ORDERED_RUNTIME_NEXT',
           'gt_ggc_e_23VEC_cp_class_binding_gc', 'tree_overload',
           'BUILT_IN_ISLESSGREATER', 'tree_target_option',
           'wifstream', 'OPT_mdispatch_scheduler', '__s8',
           'gt_e_P12tree_int_map4htab', 'gimple_statement_omp_for',
           'OPT_Wunused_thrown', 'ssa_operands', 'OPT_lang_asm',
           'OPT_Wdisabled_optimization', '_SC_NZERO',
           'sorted_fields_type', 'BIT_AND_EXPR',
           '_SC_NPROCESSORS_CONF', 'RANGE_FOR_STMT',
           'VEC_cp_class_binding_gc', 'OPT_Tdata_',
           'OPT_finstrument_functions_exclude_file_list_',
           'save_macro_data', 'GIMPLE_OMP_ATOMIC_LOAD',
           'gt_ggc_e_26rtx_def_unsigned_sat_fract', 'BUILT_IN_CPOWL',
           'IFN_LOAD_LANES', 'OPT_Wreturn_type', 'BUILT_IN_CPOWF',
           '__le16', 'ATTR_FLAG_ARRAY_NEXT', 'OPT_mlwp',
           'OPT_pthread', 'BUILT_IN_COPYSIGNL',
           'VEC_varpool_node_ptr_none', 'BUILT_IN_COPYSIGNF',
           'CLD_TRAPPED', 'gt_ggc_e_14rtx_def_ss_neg',
           'RID_HAS_NOTHROW_CONSTRUCTOR', 'OPT_ffree_line_length_',
           '_obstack_chunk', 'OPT_fmax_identifier_length_',
           'N8sigevent4DOT_45E', 'OPT_fcheck_new', 'CPO_COMPARISON',
           'gt_ggc_e_16VEC_tinfo_s_base', 'gt_ggc_e_14gimple_bb_info',
           'BUILT_IN_LOGBF', 'X86_TUNE_SSE_LOAD0_BY_PXOR',
           'UNSPECV_SLWP_INTRINSIC',
           'OPT_feliminate_unused_debug_symbols', 'BUILT_IN_LOGBL',
           'CASE_LABEL_EXPR', 'ld_plugin_status', 'CCmode',
           'TAG_DEFN', 'daddr_t', 'OPT_ftracer', '_SC_2_LOCALEDEF',
           'OPT_Wsuppress', 'OPT_fdefault_real_8', 'OPT_isysroot',
           'normalized_C', 'UNSPEC_LFENCE', '_SC_WORD_BIT',
           'gt_ggc_e_10ptrmem_cst', 'XCOFF_DEBUG',
           'gt_ggc_e_13dw_cfi_struct', 'OMP_CLAUSE_NUM_THREADS',
           'CLASS_METHOD_DECL', 'OPT_Wbad_function_cast', 'tree_type',
           'OPT_Walign_commons', 'u_int8_t', 'rtx_def',
           'BUILT_IN_INDEX', 'NODE_FREQUENCY_NORMAL',
           'BUILT_IN_MEMCMP', 'TS_CP_BASELINK',
           'PRED_LOOP_ITERATIONS_GUESSED', 'splay_tree_key',
           'BUILT_IN_STRCPY_CHK', 'OPT_fdump_fortran_original',
           'TRY_BLOCK', 'X86_TUNE_PROMOTE_QIMODE', '__kernel_fd_set',
           'RID_COMPLEX', 'VEC_call_site_record_base', 'tree_int_map',
           'CATCH_EXPR', 'OPT_fcompile_resource_',
           'gt_ggc_e_15tree_identifier', 'OPT_ftree_sink',
           'OPT_mvect8_ret_in_mem', 'TS_CP_PTRMEM',
           'BUILT_IN_FETCH_AND_XOR_16', '_sch_isupper',
           'CIF_MAX_INLINE_INSNS_AUTO_LIMIT',
           'BUILT_IN_GOMP_ATOMIC_START',
           'gt_ggc_e_21gimple_statement_base',
           'OPT_Wstrict_selector_match', 'sk_try',
           'gt_ggc_e_11pt_solution', '_SC_PII_OSI_M',
           'OPT_Wampersand', 'OPT_Wdiv_by_zero', 'MODE_UFRACT',
           'OMP_CLAUSE_DEFAULT_UNSPECIFIED', 'RID_EXTERN',
           'OPT_femit_struct_debug_reduced', 'BUILT_IN_ILOGBF',
           'gt_ggc_e_12VEC_rtx_base', 'BUILT_IN_ILOGBL',
           'CATEGORY_IMPLEMENTATION_TYPE', 'BUILT_IN_LOG', 'TFmode',
           'cp_lvalue_kind_flags', 'BUILT_IN_GOMP_LOOP_END',
           'OPT_Wstatic_receiver', 'TI_SQ_TYPE', 'BUILT_IN_SAVEREGS',
           '_SC_GETGR_R_SIZE_MAX', 'LDPT_REGISTER_CLEANUP_HOOK',
           'OPT_no_integrated_cpp', '_CS_XBS5_LP64_OFF64_LINTFLAGS',
           'rvc_normal', 'asm_dialect', 'RID_AT_CLASS',
           'omp_clause_default_kind', '__useconds_t', 'V4HImode',
           'LABEL_EXPR', 'MAX_MODE_COMPLEX_FLOAT',
           'gt_ggc_e_22VEC_alias_set_entry_gc', 'gt_handle_reorder',
           '_sch_ispunct', '_IO_cookie_io_functions_t',
           '_SC_RE_DUP_MAX', 'OPT_Wmissing_format_attribute',
           'NEGATE_EXPR', 'OPT_Wvla', 'OPT_fsplit_ivs_in_unroller',
           'gt_ggc_e_20VEC_basic_block_base', 'UNSPEC_VCVTPH2PS',
           'ld_plugin_get_input_file', 'OPT_Wformat_zero_length',
           'splay_tree_s', 'SI_SIGIO', 'ld_plugin_level',
           'CTI_FUNCTION_NAME_DECL', 'V16QImode', 'OPT_Wformat_',
           'USAmode', 'BUILT_IN_ATANF', 'X86_TUNE_PAD_SHORT_FUNCTION',
           'tree_lambda_expr', 'BUILT_IN_GOMP_SINGLE_COPY_END',
           'gt_ggc_e_21VEC_eh_landing_pad_gc', 'BUILT_IN_ATANL',
           'OPT_print_sysroot', 'BUILT_IN_ATANH',
           'N13cp_declarator4DOT_894DOT_92E',
           'gt_e_P16constexpr_fundef4htab', '_CS_GNU_LIBC_VERSION',
           'BUILT_IN_TANF', 'gt_ggc_e_16cl_target_option',
           'BUILT_IN_TANL', '_CS_POSIX_V7_ILP32_OFF32_CFLAGS',
           'gt_ggc_e_11rtx_def_mod', 'TI_PUBLIC',
           'OPT_faux_classpath', 'UNSPEC_AESDECLAST',
           'cl_optimization', 'BUILT_IN_STRNCPY_CHK',
           '_SC_2_PBS_MESSAGE', 'UNSPEC_FYL2XP1', 'cpp0x_warn_str',
           'PRED_FPOPCODE', 'OPT_frandom_seed_',
           'OPT_femit_class_debug_always', 'TS_SSA_NAME',
           'binding_entry_s', 'splay_tree_delete_key_fn',
           'gt_ggc_e_10vcall_insn',
           'gt_ggc_e_24lazy_hex_fp_value_struct', 'OPT_fshow_column',
           'eh_status', 'fixed_value', 'CLD_EXITED',
           '_SC_MAPPED_FILES', 'lv_increment', 'X86_TUNE_PAD_RETURNS',
           'gt_ggc_e_11rtx_def_ffs', 'TI_UTA_TYPE',
           'POSTDECREMENT_EXPR', 'gt_ggc_e_23rtx_def_symbol_subunion',
           'clk_class', 'OPT_ftree_loop_ivcanon',
           'BUILT_IN_FRAME_ADDRESS', '_CS_LFS64_LIBS',
           'BUILT_IN_VFPRINTF', '__RLIM_NLIMITS',
           'X86_TUNE_USE_VECTOR_FP_CONVERTS', 'BUILT_IN_STRNDUP',
           'OPT_fbootstrap_classes', '_SC_UIO_MAXIOV',
           'BUILT_IN_GOMP_CRITICAL_END', 'OPT_Wlarger_than_',
           'PRED_TREE_POINTER', 'CPP_MOD_EQ', 'hashval_t',
           'AVAIL_UNSET', 'gt_ggc_e_20indirect_string_node',
           'NEED_PHI_STATE_UNKNOWN', 'BREAK_STMT', 'UNSPEC_EXTRQ',
           'OPT_ftree_vect_loop_version', 'lto_file_decl_data',
           'pthread_mutexattr_t', 'RTLD_DL_SYMENT',
           'OMP_CLAUSE_DEFAULT_PRIVATE', 'RID_AT_IMPLEMENTATION',
           'gt_ggc_e_18VEC_vcall_entry_gc', 'BUILT_IN_FETCH_AND_OR_8',
           'BUILT_IN_FETCH_AND_OR_1', 'BUILT_IN_FETCH_AND_OR_2',
           'BUILT_IN_FETCH_AND_OR_4', 'SEGV_MAPERR',
           'OMP_CLAUSE_DEFAULT_SHARED',
           '_CS_POSIX_V6_ILP32_OFF32_CFLAGS', 'varpool_node_ptr',
           'ldiv_t', 'BUILT_IN_REMQUOF', 'GIMPLE_TRY_CATCH',
           'gt_ggc_e_12dcall_struct', 'BUILT_IN_FETCH_AND_OR_N',
           'BUILT_IN_IMAXABS', 'dk_no_check', 'FDESC_EXPR',
           'VEC_qualified_typedef_usage_t_gc', 'CPTI_TERMINATE',
           'gt_ggc_e_30VEC_deferred_access_check_base',
           'OPT_Wenum_compare', '_SC_V7_LP64_OFF64',
           'CPTI_IN_CHARGE_IDENTIFIER', 'LDPV_DEFAULT',
           '__kernel_mqd_t', 'TS_RESULT_DECL', 'BUILT_IN_VPRINTF_CHK',
           '__le32', 'OPT_fira_share_spill_slots',
           'N17ssa_use_operand_d4DOT_72E',
           'OPT_fobjc_direct_dispatch', 'OPT_undef', 'FOR_STMT',
           'PRED_COMBINED', 'fb_rvalue', 'REG_EFL', 'UNSPEC_VPERMIL',
           'OPT_fpack_derived', 'int_tree_map', 'CPP_W_LONG_LONG',
           'VMS_DEBUG', '_SC_V7_ILP32_OFFBIG',
           'splay_tree_deallocate_fn', 'AGGR_INIT_EXPR',
           'VEC_uchar_gc', 'TI_FLOAT_PTR_TYPE',
           '_SC_LEVEL3_CACHE_LINESIZE', '_SC_XBS5_LP64_OFF64',
           'CPTI_VTT_PARM_TYPE', 'OPT_fprefetch_loop_arrays',
           'BUILT_IN_TRAP', 'TS_OMP_CLAUSE', 'BUILT_IN_SPRINTF',
           'NON_LVALUE_EXPR', 'OPT_fgcse_sm',
           'BUILT_IN_GOMP_LOOP_GUIDED_NEXT', 'RID_INT128',
           'OPT_fomit_frame_pointer', 'OPT_fgo_prefix_',
           'gt_ggc_e_12tree_int_cst', '_SC_LEVEL1_DCACHE_SIZE',
           'TI_LACCUM_TYPE', 'BUILT_IN_GOMP_PARALLEL_START',
           '_SC_PRIORITIZED_IO', 'HANDLER',
           'OPT_fsched_dep_count_heuristic', 'SBITSIZETYPE',
           'CTI_CHAR16_ARRAY_TYPE', 'OMP_CLAUSE_DEFAULT_FIRSTPRIVATE',
           'BUILT_IN_GOMP_ATOMIC_END', 'OPT_traditional_cpp',
           'OPT_fobjc_std_objc1', 'MAX_MODE_VECTOR_FRACT',
           'CPTI_LANG_NAME_JAVA', '_SC_2_PBS_LOCATE',
           'FLOAT_INT_SSE_REGS', 'OPT_iquote', 'CTI_CHAR16_TYPE',
           'ld_plugin_symbol_visibility', 'BUILT_IN_TGAMMAL',
           'OPT_fgraphite', 'UNSPEC_VPERMIL2', 'OPT_fwrapv',
           'pointer_map_t', '__nlink_t', 'TI_SAT_UHA_TYPE',
           'FLOOR_DIV_EXPR', 'gmp_randalg_t', 'RID_DFLOAT32',
           'edge_var_map_vector', 'SLOT_CW_MASK_PM', 'mcontext_t',
#           'basic_istringstream<char,std::char_traits<char>,std::allocator<char>     >', 
'OPT_frepo', 'cpp_buffer', 'LDPT_GET_INPUT_FILE',
           'MODIFY_EXPR', 'CPP_EQ_EQ', 'call_site_record', 'MS_ABI',
           'tree_list', 'ptrmemfunc_vbit_in_delta',
           'PLUGIN_FINISH_UNIT', 'BUILT_IN_CTZIMAX',
           'gt_ggc_e_10rtx_def_ge', 'BUILT_IN_TGAMMA',
           'gt_e_P17module_htab_entry4htab', 'RID_STATIC_ASSERT',
           'gt_ggc_e_7c_token', 'const_gimple_seq_node',
           '_SC_2_FORT_DEV', '_SC_FILE_SYSTEM', 'BUILT_IN_LLROUND',
           'OPT_fdse', 'UNSPEC_SET_GOT_OFFSET',
           'OPT_fcombine_stack_adjustments', 'stringstream',
           'CTI_WINT_TYPE', 'gt_ggc_e_10stmt_group',
           '_SC_THREAD_PROCESS_SHARED', 'CATEGORY_INTERFACE_TYPE',
           'RLIMIT_STACK', 'CPP_W_BUILTIN_MACRO_REDEFINED',
           'gt_e_P10spec_entry4htab', '__io_seek_fn', 'hashnode',
           'BUILT_IN_SIGNBITD64', 'gt_ggc_e_17VEC_tree_int_base',
           'PLUGIN_ATTRIBUTES', '_SC_V7_LPBIG_OFFBIG',
           'gt_ggc_e_15c_goto_bindings', 'BUILT_IN_VSNPRINTF_CHK',
           'GT_EXPR', 'EXCESS_PRECISION_EXPR', 'LDPS_OK',
           'gt_ggc_e_29VEC_cp_default_arg_entry_base',
           'OPT_mpush_args', 'int_least16_t',
           'CTI_UNSIGNED_PTRDIFF_TYPE', 'BUILT_IN_CSIN', 'OPT_ff2c',
           'MAX_MODE_VECTOR_FLOAT', 'OPT_ftree_dce',
           'gt_ggc_e_18rtx_def_symbol_ref', 'RTLD_DI_TLS_DATA',
           'N7siginfo4DOT_304DOT_35E', 'OPT_ffree_line_length_none',
           'P_ALL', 'UNSPECV_ALIGN',
           'N13cp_declarator4DOT_894DOT_90E', 'OPT_fdbg_cnt_list',
           'TS_CP_TPI', 'CTI_UINT_FAST64_TYPE', 'stmt_tree',
           'bk_ambig', 'OPT_fexec_charset_', 'cpp_builtin_type',
           'uint_fast32_t', 'OPT_fsched_spec', 'CTI_INTPTR_TYPE',
           'BUILT_IN_EH_POINTER', 'ld_plugin_add_symbols',
           'PTRMEM_CST', 'gimple_statement_omp_parallel',
           'MAX_386_ENTITIES', 'COMPLEX_CST', 'OPT_k8', 'ds_complex',
           'tm', 'gt_ggc_e_13rtx_def_value', 'ipa_ref_use',
           'SSE_REGS', 'RID_DO', 'RID_TYPENAME', 'BUILT_IN_CREAL',
           'cgraph_node_hook_list', 'gt_ggc_e_15rtx_def_us_mult',
           '_IO_jump_t', 'UNSPEC_DEF_CFA',
           'gt_ggc_e_16eh_landing_pad_d', 'OPT_ggdb',
           'BUILT_IN_TOASCII', 'clk_objc', 'MINUS_EXPR',
           'BUILT_IN_SIGNIFICANDF', 'VEC_varpool_node_set_gc',
           'IF_STMT', 'section', '_SC_UINT_MAX',
           'BUILT_IN_NEXTAFTERL', 'varpool_node_set',
           'OPT_SPECIAL_input_file', '_sch_iscntrl', '_SC_2_PBS',
           'CALL_EXPR', 'CPP_DL_NOTE',
           'OPT_fguess_branch_probability', 'TI_OPTIMIZATION_DEFAULT',
           'CLD_KILLED', 'ce_if_block_t', '_ISdigit',
           'X86_TUNE_SCHEDULE', 'mp_limb_t', 'BUILT_IN_SSCANF',
           'DK_NOTE', 'CPP_OR', 'sc_auto',
           'gimple_statement_structure_enum',
           'gt_ggc_e_25gimple_statement_omp_task',
           'OPT_Wconversion_extra', 'RUSAGE_CHILDREN',
           'sfk_move_constructor', 'OPT_std_gnu__0x', 'UNSPEC_MOVNT',
           'AVAIL_AVAILABLE', 'gimple_statement_try',
           '__kernel_old_uid_t', 'LDPO_EXEC', 'RID_CONST',
           'TS_FUNCTION_DECL', '__kernel_uid16_t',
           'CTI_UINT_LEAST64_TYPE', 'pid_t',
#           'basic_stringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t>       >', 
           '_PC_MAX_INPUT', 'SWITCH_EXPR',
           'gt_ggc_e_16gfc_st_parameter', 'OPT_mfma',
           'RID_LAST_MODIFIER', 'gt_ggc_e_13VEC_loop_p_gc',
           'OPT_fkeep_inline_dllexport', 'RID_TYPEDEF', 'ICR_ASSIGN',
           'gt_e_P16cxx_int_tree_map4htab', 'BUILT_IN_RINTF',
           'REG_EDI', 'cgraph_node_set_iterator',
           'gt_ggc_e_20gimple_statement_asm', 'CM_SMALL', 'REG_EDX',
           'CPP_LSHIFT_EQ', 'tsk_none', 'gt_ggc_e_13rtx_def_float',
           'OPT_fcompare_debug', '_SC_LEVEL3_CACHE_ASSOC',
           'BUILT_IN_SIGNBIT', 'gt_ggc_e_15jump_func_value',
           'gt_ggc_e_16rtx_def_prefetch', 'initial_value_struct',
           'CPTI_DELETING_DTOR_IDENTIFIER', 'V1TImode',
           'BUILT_IN_ISWGRAPH', 'gt_ggc_e_21rtx_def_fract_convert',
           'CTI_CHAR_ARRAY_TYPE', 'gt_ggc_e_16incomplete_var_d',
           'OPT_mtls_dialect_', 'RID_AT_REQUIRED',
           'OPT_fuse_linker_plugin', 'gt_ggc_e_14rtx_def_ashift',
           '_SC_T_IOV_MAX', 'VECTOR_TYPE', 'overload_flags',
           'OPT_gstabs', 'gt_ggc_e_7rtx_def', 'EXACT_DIV_EXPR',
           'OPT_floop_block', '_CS_POSIX_V7_LP64_OFF64_LINTFLAGS',
           '_xmmreg', 'UNSPEC_SIN', 'gt_ggc_e_20rtx_def_zero_extract',
           '_PC_LINK_MAX', 'BUILT_IN_Y1L',
           'gimple_statement_omp_continue', 'BUILT_IN_Y1F',
           'VEC_ipa_replace_map_p_base', 'BUILT_IN_FETCH_AND_NAND_N',
           'OPT_fcond_mismatch', 'BUILT_IN_ISNAND32',
           'dk_no_deferred', 'OPT_fjump_tables', 'mp_ptr',
           '_SC_TRACE_NAME_MAX', 'CPP_DL_PEDWARN',
           'OPT_ffp_contract_', 'BUILT_IN_AND_AND_FETCH_16',
           'gt_ggc_e_19dw_loc_descr_struct',
           'BUILT_IN_GOMP_CRITICAL_NAME_START',
           'VMS_AND_DWARF2_DEBUG', 'PLUGIN_GGC_START',
           'UNBOUND_CLASS_TEMPLATE', 'GIMPLE_WITH_CLEANUP_EXPR',
           'BUILT_IN_DCGETTEXT', 'CTI_SAVED_FUNCTION_NAME_DECLS',
           'CPP_MOD', 'MUST_NOT_THROW_EXPR', 'tree_ssa_name',
           'OPT_dumpversion', 'BUILT_IN_FPUTS_UNLOCKED',
           'gt_ggc_e_20VEC_temp_slot_p_base',
           'OPT_Wctor_dtor_privacy', 'GIMPLE_CATCH',
           'gt_ggc_e_12rtx_def_mult', 'OPT_quiet',
           'OMP_CLAUSE_FIRSTPRIVATE', 'CPTI_CLASS_TYPE',
           '_SC_NL_LANGMAX', 'cgraph_node_set_element',
           'VEC_cxx_saved_binding_base', 'BUILT_IN_FMIN',
           'BUILT_IN_EXPECT', 'REPORT_VECTORIZED_LOCATIONS',
           'gimple_statement_omp_sections', 'OPT_nostartfiles',
           'CPTI_JAVA_BYTE_TYPE', 'CPP_WCHAR',
           'gt_ggc_e_15VEC_gimple_base', '_PC_NO_TRUNC',
           'GSI_SAME_STMT', 'ino64_t', 'VEC_unsigned_none',
           'gt_ggc_e_10rtx_def_eq', '_SC_SINGLE_PROCESS',
           'OMP_CLAUSE_COLLAPSE', 'mpz_srcptr', 'UNSPEC_XTRACT_EXP',
           'TI_VOID_TYPE', 'OPT_fcse_follow_jumps',
           'varpool_node_set_def', 'GIMPLE_OMP_PARALLEL',
           'tree_statement_list_node', 'lang_type',
           'OPT_fmodulo_sched',
           'gt_e_P23constant_descriptor_rtx4htab', 'BUILT_IN_CEIL',
           'COMPOUND_LITERAL_EXPR', 'gt_ggc_e_16string_pool_data',
           'cgraph_rtl_info',
#           'basic_ostringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t>    >', 
'gt_ggc_e_15basic_block_def',
           'gt_ggc_e_23VEC_eh_landing_pad_base',
           'gt_ggc_e_12VEC_uchar_gc', 'sk_scoped_enum',
           'OPT_Woverlength_strings', 'BIT_IOR_EXPR',
           'BUILT_IN_FETCH_AND_OR_16', 'gt_ggc_e_16tree_decl_common',
           'SI_TIMER', 'gt_ggc_e_18bitmap_element_def',
           'UNSPEC_XOP_UNSIGNED_CMP', 'BUILT_IN_SETJMP_DISPATCHER',
           'CTI_C99_FUNCTION_NAME_DECL', '_SC_DEVICE_SPECIFIC_R',
           'gt_ggc_e_17cxx_saved_binding', 'OPT_fgcse_lm',
           'stmt_tree_s', 'TARGET_CPU_DEFAULT_bdver1', 'V4SImode',
           'gt_ggc_e_12rtx_def_plus', 'OPT_msse',
           'gt_ggc_e_20rtx_def_const_string', 'OPT_nocpp',
           'IR_RTL_CFGRTL', 'TI_HQ_TYPE', 'OPT_Wformat_nonliteral',
           'TI_USACCUM_TYPE', 'LC_LEAVE', 'CPTI_CONST_TYPE_INFO_TYPE',
           'BUILT_IN_ISINF', 'BUILT_IN_PRINTF_UNLOCKED',
           'OPT_fcray_pointer', 'ld_plugin_input_file', 'ds_volatile',
           'UNSPEC_C2_FLAG', 'X86_TUNE_MEMORY_MISMATCH_STALL',
           'UNSPEC_PSADBW', 'OPT_Wlong_long', 'CPTI_JAVA_SHORT_TYPE',
           'DK_POP', 'gt_ggc_e_22VEC_prot_list_entry_gc',
           '__kernel_clockid_t', 'OPT_fstrict_volatile_bitfields',
           'none_type', 'CPTK_IS_POD', 'gt_ggc_e_10cpp_string',
           'wostringstream', 'OPT_Wredundant_modifiers',
           'gt_ggc_e_19c_common_identifier', 'CPTI_WCHAR_DECL',
           'gt_ggc_e_15throw_stmt_node', 'RID_AT_PROPERTY',
           'cp_declarator', 'MAX_MODE_FLOAT', 'plugin_init_func',
           'transform_callback', 'LDPT_NULL',
           'OPT_Wintf_non_inherited', 'V64QImode', '__intptr_t',
           'WIDEN_SUM_EXPR', 'OPT_Wcoverage_mismatch', 'RID_GOTO',
           'cgraph_node_set', '__u64', 'CPP_RSHIFT', 'BITSIZETYPE',
           'PRED_BUILTIN_EXPECT', 'ld_plugin_symbol_resolution',
           'X86_TUNE_DOUBLE_POP',
           'gt_ggc_e_23VEC_varpool_node_ptr_gc', 'cl_option_handlers',
           'CUMULATIVE_ARGS', 'gt_ggc_e_17rtx_def_vec_merge',
           'TI_UINTTI_TYPE', 'RID_CONSTCAST', 'V8HImode',
           'OPT_Wunused_private', 'VEC_tree_pair_s_gc',
           'BUILT_IN_STACK_RESTORE', 'CIF_ORIGINALLY_INDIRECT_CALL',
           'gt_ggc_e_14pending_weak_d', 'VEC_INTERLEAVE_LOW_EXPR',
           '_SC_LONG_BIT', 'gsi_iterator_update', 'V4DFmode',
           'TARGET_CPU_DEFAULT_pentium', 'MIN_EXPR',
           'call_expr_arg_iterator', 'ssa_op_iter_use',
           'gimple_statement_omp', 'OPT_frename_registers',
           'DEPS_USER', 'expr_status', '_cpp_hashnode_value',
           '_PC_MAX_CANON', 'EXCESS_PRECISION_FAST', 'OPT_fencoding_',
           'OPT_Wfinally', 'PLUS_NOMOD_EXPR', 'LDPT_ADD_INPUT_FILE',
           'mallinfo', 'gt_ggc_e_14bitmap_obstack',
           'X86_TUNE_AVX128_OPTIMAL', 'COMPLEX_EXPR', 'BT_LAST_USER',
           'FLOAT_SSE_REGS', 'SLOT_CW_CEIL', 'GSS_OMP_CRITICAL',
           'gt_ggc_e_20ipa_ancestor_jf_data', 'itk_short',
           'gt_pointer_walker', 'OPT_iwithprefixbefore',
           'RID_AT_PRIVATE', 'REG_EBP', '_sch_isidst',
           'OPT_fpch_preprocess', 'REG_EBX', 'WHILE_STMT',
           'VA_ARG_EXPR', 'NAMESPACE_DECL', 'register_t',
           'CLK_GNUCXX', 'OPT_flto_compression_level_',
           'gt_ggc_e_15prot_list_entry', 'rtvec', 'PROCESSOR_I386',
           'OPT_fprotect_parens', '_SC_UCHAR_MAX', 'CLK_STDC94',
           'OPT_specs_', 'CLK_STDC99', 'BUILT_IN_LLFLOORF',
           'TI_BITSIZE_ONE', 'ts_global', 'DEPS_NONE',
           'BUILT_IN_LLFLOORL', 'X86_TUNE_OPT_AGU',
           'gt_e_P28varpool_node_set_element_def4htab',
           'int_least8_t', 'gt_ggc_e_18rtx_def_code_label',
           'BUILT_IN_EXTEND_POINTER', 'NO_REGS', 'LDPR_UNDEF',
           'OPT_ftree_loop_distribution', 'TYPENAME_TYPE',
           '_SC_ATEXIT_MAX', 'ld_plugin_tv',
           'gt_e_P11heapvar_map4htab', 'CTI_SIG_ATOMIC_TYPE',
           'gt_types_enum', 'wint_t', 'OPT_fnonansi_builtins',
           'CPP_TOKEN_FLD_SOURCE', 'GIMPLE_GOTO',
           'TARGET_OPTION_NODE', 'BUILT_IN_FETCH_AND_XOR_N',
           'wiostream', 'wstringbuf', 'TI_SAT_SACCUM_TYPE', 'OPT_MD_',
           'BUILT_IN_FETCH_AND_XOR_8', 'BUILT_IN_FETCH_AND_XOR_4',
           'OPT_ftrapv', 'BUILT_IN_FETCH_AND_XOR_2',
           'BUILT_IN_FETCH_AND_XOR_1',
           'BUILT_IN_GOMP_LOOP_ULL_GUIDED_START', 'tree_default_arg',
           'VEC_edge_heap', 'OPT_fexpensive_optimizations', 'cmodel',
           'MODE_VECTOR_FLOAT', 'BUILT_IN_ISWDIGIT',
           'cookie_read_function_t', 'FPMATH_SSE',
           'TARGET_CPU_DEFAULT_btver1', 'blkcnt64_t',
           'OPT_fallow_leading_underscore', 'OPT_ftemplate_depth_',
           'itk_unsigned_long_long', 'BUILT_IN_ERFCF',
           'TARGET_CPU_DEFAULT_pentium_mmx',
           'TI_CURRENT_TARGET_PRAGMA',
           'gt_ggc_e_23VEC_cp_label_binding_gc',
           'MIN_MODE_VECTOR_ACCUM',
           'BUILT_IN_GOMP_LOOP_ULL_GUIDED_NEXT', 'tcc_unary',
           'RID_IS_CONVERTIBLE_TO', 'gt_ggc_e_15eh_region_u_try',
           'OPT_freg_struct_return', '_xsave_hdr',
           '_SC_ASYNCHRONOUS_IO', 'symbol_alias_set_t',
           '_SC_2_CHAR_TERM', 'gt_e_P15throw_stmt_node4htab',
           'tree_parm_decl', 'OPT_fcprop_registers',
           'OPT_fdata_sections', 'PROCESSOR_ATOM', 'DEBUG_EXPR_DECL',
           'gt_ggc_e_14rtx_def_ss_abs', 'NTV_BUILTIN',
           'TLS_MODEL_LOCAL_DYNAMIC', 'gt_ggc_e_14builtin_record',
           'temp_slot', 'GMP_RAND_ALG_DEFAULT', 'RID_LAST_CXX0X',
           'BUILT_IN_STRCASECMP', 'BB_REACHABLE', 'UNSPEC_SET_RIP',
           'OPT_Wsign_conversion', 'BUILT_IN_CLOG', 'BUILT_IN_ASINHF',
           'OPT_print_objc_runtime_info', 'VEC_basic_block_heap',
           'BUILT_IN_ASINHL', 'sigval_t', 'NT_ASSERTION', 'dk_static',
           'OPT_Wimplicit_function_declaration',
           'gimple_statement_with_ops_base', 'OPT_std_c1x',
           'OPT_mpreferred_stack_boundary_',
           'OPT_ftree_switch_conversion', 'ix86_entity', 'DREG',
           'RID_IS_UNION', 'TI_LLFRACT_TYPE', 'VEC_PACK_TRUNC_EXPR',
           'BUILT_IN_EH_RETURN', 'OPT_Wmissing_parameter_type',
           'mpz_t', 'UNSPEC_FMADDSUB', 'BUILT_IN_POPCOUNTLL',
           'BUILT_IN_SQRT', 'OPT_idirafter', 'IMPORTED_DECL',
           'cdk_array', 'RID_OPERATOR', '__RLIMIT_LOCKS',
           'BUILT_IN_STRFMON', 'tsubst_flags', 'ssa_use_operand_t',
           'ssa_use_operand_d', 'VISIBILITY_HIDDEN',
           'BUILT_IN_PARITYLL', 'OPT_fvar_tracking_assignments',
           'VEC_cp_label_binding_base', '_ISupper',
           'BUILT_IN_NAND128', 'FPE_FLTUND', '_SC_XOPEN_CRYPT',
           'gt_e_P9tree_nodeP9tree_node12splay_tree_s',
           'gcov_ctr_summary', 'gt_ggc_e_18tree_static_assert',
           'tree_template_info', 'OPT_ffloat_store',
           'UNSPEC_MACHOPIC_OFFSET', 'X86_TUNE_USE_SIMODE_FIOP',
           'OPT_m80387', 'OPT_include', 'TS_VEC', 'TRUTH_OR_EXPR',
           'REG_DS', 'CIF_UNLIKELY_CALL', 'gt_ggc_e_13named_section',
           'gt_ggc_e_7globals', 'OPT_ftree_phiprop', 'OPT_profile',
           'OPT_fvar_tracking', 'CPTI_CLEANUP_TYPE',
           'WARN_STRICT_OVERFLOW_ALL', 'node_type',
           'BUILT_IN_GOMP_PARALLEL_LOOP_STATIC_START',
           'gt_ggc_e_9gimple_df', 'OPT_Wredundant_decls',
           'UNSPEC_FSTCW', 'CPP_STRING', '_ymmh_state', 'OPT_gant',
           'BUILT_IN_GOMP_LOOP_ULL_ORDERED_STATIC_NEXT',
#           'basic_ifstream<char,std::char_traits<char> >',
           'TI_DFLOAT64_TYPE', 'CPP_DEREF',
           'gt_ggc_e_26gimple_type_leader_entry_s', 'opt_code',
           'pretty_print_info', 'RID_AUTO', 'cfg_hooks',
           'OPT_Wdiscouraged', 'gt_ggc_e_12rtx_def_umin',
           'CPTI_NULLPTR', 'PLUGIN_PASS_MANAGER_SETUP', 'ds_restrict',
           'RID_PUBLIC', 'gt_ggc_e_12splay_tree_s', 'OPT_pedantic',
           'tf_ptrmem_ok', 'OPT_Wtype_limits', 'OPT_isystem',
           'mpq_srcptr', '_SC_USER_GROUPS', 'gt_ggc_e_9lang_decl',
           'ts_current', '_SC_XOPEN_ENH_I18N',
           'OPT_fsingle_precision_constant', 'ofstream',
           'LDPR_PREEMPTED_REG', 'OMP_CLAUSE_SHARED', 'affine_iv',
           'function_subsections', 'tree_int_cst',
           'OPT_static_libgcj', 'OPT_static_libgcc',
           'PROCESSOR_COREI7_32', 'BUILT_IN_SINHL', 'REG_TRAPNO',
           'OPT_fdelete_null_pointer_checks', 'X86_TUNE_QIMODE_MATH',
           'gt_ggc_e_11rtx_def_cc0', 'BT_INCLUDE_LEVEL',
           'PROCESSOR_K8', 'OPT_Wunderflow', 'PROCESSOR_K6',
           'ao_ref_s', 'OPT_mpopcnt',
           'BUILT_IN_GOMP_LOOP_RUNTIME_NEXT', 'BUILT_IN_ISALPHA',
           'OPT_freciprocal_math', 'clock_t', 'OPT_auxbase_strip',
           'GF_CALL_FROM_THUNK', '_SC_PII_OSI_COTS', 'UNSPEC_FRNDINT',
           '_SC_OPEN_MAX', 'CPP_W_WARNING_DIRECTIVE', 'LDPL_FATAL',
           'BUILT_IN_GOMP_PARALLEL_SECTIONS_START', 'UNSPEC_REG_SAVE',
           'BUILT_IN_STRFTIME', 'UNSPEC_TLS_LD_BASE',
           'OPT_fall_intrinsics', 'bitmap_element_def',
           'TI_INTSI_TYPE', 'TI_COMPLEX_INTEGER_TYPE',
           '_SC_NETWORKING', '_SC_PRIORITY_SCHEDULING', 'tree_pair_p',
           'tree_pair_s', '_CS_V6_ENV', 'gregset_t', 't_kind',
           'PLUGIN_ALL_PASSES_END', 'gcov_type', 'BUILT_IN_CLOG10L',
           'stack_t', 'TS_TYPE', 'CCSmode', 'NOT_BUILT_IN',
           'UNSPEC_SINCOS_COS', 'BUILT_IN_VA_END',
           '_SC_C_LANG_SUPPORT_R', 'VEC_gimple_vec_base',
           'TI_SAT_USFRACT_TYPE', 'TRUTH_AND_EXPR',
           'gt_ggc_e_25tree_argument_pack_select', 'FPE_FLTRES',
           'ds_last', 'record_layout_info',
           'BUILT_IN_SUB_AND_FETCH_N', 'OPT_ffriend_injection',
           'HImode', 'RID_EXTENSION', 'OPT_Weffc__',
           '_PC_REC_XFER_ALIGN', 'GF_CALL_INTERNAL_FN',
           '_SC_LEVEL2_CACHE_SIZE', 'filebuf',
           'REPORT_UNVECTORIZED_LOCATIONS', 'tf_error',
           'SLOT_CW_FLOOR', 'FLOAT_EXPR', 'BUILT_IN_CPROJF',
           'BUILT_IN_CPROJL', 'MAX_MODE_COMPLEX_INT',
           'VEC_gimple_none', 'RID_COPY', 'impl_conv_void',
           'BUILT_IN_GOMP_LOOP_ULL_STATIC_START',
           'cp_tree_node_structure_enum', 'BUILT_IN_SUB_AND_FETCH_2',
           '__quad_t', 'BUILT_IN_SUB_AND_FETCH_4', 'CLK_ASM',
           'gt_ggc_e_23constant_descriptor_rtx', 'CCFPmode',
           '_SC_SEMAPHORES', 'MIN_MODE_UFRACT',
           'BUILT_IN_NEXTTOWARDF', 'stringop_strategy',
           'LDPT_GOLD_VERSION', 'BUILT_IN_POW10F', 'OPT_fira_region_',
           'pp_flags', 'gt_e_P7section4htab',
           'OPT_fdollars_in_identifiers', 'OPT_Wstrict_overflow',
           'gt_ggc_e_12rtx_def_udiv', 'tcc_vl_exp', 'GSS_OMP_FOR',
           'BUILT_IN_CSINL', 'OPT_fsignaling_nans', 'BUILT_IN_CSINH',
           'BUILT_IN_CSINF', 'TS_LIST', 'call_site_record_d',
           'OPT__target_help', 'N13cp_declarator4DOT_89E',
           'GIMPLE_OMP_ATOMIC_STORE', 'gt_ggc_e_17language_function',
           'OPT_print_libgcc_file_name',
           'X86_TUNE_EPILOGUE_USING_MOVE', 'OPT_Wunused_macros',
           'RID_FIRST_MODIFIER', 'VEC_basic_block_base',
           'OPT_ftree_ccp', '__sigset_t', 'ht_lookup_option',
           'RLIMIT_DATA', 'OPT_ftree_copyrename',
           'cgraph_2node_hook_list', 'OPT_fstats', 'OPT_fpeephole',
           '__kernel_nlink_t', 'TYPENAME_FLAG',
           'gt_ggc_e_24types_used_by_vars_entry',
           'gt_ggc_e_13scev_info_str', 'BUILT_IN_LLRINTL', 'ushort',
           'gt_e_P16var_loc_list_def4htab', 'BUILT_IN_INFD64',
           'gt_ggc_e_11frame_space', 'CLASS_IMPLEMENTATION_TYPE',
           'BUILT_IN_GOMP_LOOP_ULL_DYNAMIC_START',
           'UNSPEC_MEMORY_BLOCKAGE', 'CEIL_DIV_EXPR',
           'TLS_MODEL_LOCAL_EXEC', 'VEC_unsigned_heap',
           'BUILT_IN_CSQRTL', 'lv_addressof', 'obstack',
           'BUILT_IN_CSQRTF', 'gt_ggc_e_14lang_decl_base',
           'OPT_Wmudflap', 'gt_ggc_e_24VEC_mem_addr_template_gc',
           'BUILT_IN_SINHF', 'OPT_fvariable_expansion_in_unroller',
           'gt_ggc_e_16rtx_def_post_inc', 'RID_CXX_COMPAT_WARN',
           'MP_INT', '_SC_PAGESIZE', 'VEC_cxx_saved_binding_none',
           'OPT_fsigned_zeros', 'MIN_MODE_ACCUM',
           'gt_ggc_e_12varpool_node', 'CPP_GREATER',
           'profile_status_d', 'GIMPLE_SINGLE_RHS',
           'gt_ggc_e_16machine_function', 'gt_ggc_e_11rtx_def_gtu',
           'OPT_Wunused_argument', 'OPT_fconvert_swap',
           'OPT_Wjump_misses_init',
           'gt_ggc_e_25cgraph_indirect_call_info', 'TS_BINFO',
           'BUILT_IN_ACOSL', 'BUILT_IN_ACOSH', 'BUILT_IN_ACOSF',
           'N8_fpstate4DOT_51E', 'CTI_INT32_TYPE', 'BUILT_IN_ACOSHF',
           '__ino_t', 'gt_ggc_e_8tree_map', 'BUILT_IN_ACOSHL',
           'BUILT_IN_GOMP_ORDERED_END', 'OPT_save_temps_',
           'CPP_W_COMMENTS', 'BUILT_IN_AGGREGATE_INCOMING_ADDRESS',
           'RID_HAS_TRIVIAL_DESTRUCTOR', 'X86_TUNE_VECTORIZE_DOUBLE',
           'OPT_minline_all_stringops', 'unification_kind_t',
           'PROCESSOR_PENTIUMPRO', 'CPP0X_LAMBDA_EXPR',
           '__kernel_ino_t', 'OPT_fvar_tracking_uninit',
           '_PC_REC_INCR_XFER_SIZE', 'X86_TUNE_USE_INCDEC',
           'fallback_t', 'gt_ggc_e_3JCF', 'GF_PREDICT_TAKEN',
           'UNSPEC_DIV_ALREADY_SPLIT',
           'OPT_Wmissing_field_initializers', 'CPP0X_SCOPED_ENUMS',
           'sk_block', 'COMPOUND_EXPR', 'OPT_Wfinal_bound',
           '_G_fpos64_t', 'VEC_call_site_record_gc',
           'gt_e_P27cgraph_node_set_element_def4htab',
           'gt_ggc_e_11cxx_binding', '__pid_t', 'BUILT_IN_CACOSH',
           '__codecvt_ok', 'loop_1_byte',
           '_SC_THREAD_SPORADIC_SERVER', 'BUILT_IN_CACOSF',
           'processor_costs', 'OPT_femit_struct_debug_detailed_',
           'RID_IS_POD', 'OPT_ftime_report', 'PROCESSOR_max',
           'gt_ggc_e_26VEC_ipa_replace_map_p_base',
           'OPT_fassociative_math', 'DO_STMT',
           'gt_ggc_e_20varpool_node_set_def', 'VEC_gimple_p_none',
           'PLUGIN_OVERRIDE_GATE', '_SC_SIGNALS',
           'OPT_static_libgfortran', 'omp_clause_code',
           'gt_ggc_e_23temp_slot_address_entry', 'RID_FIRST_CXX0X',
           'gt_ggc_e_19_cpp_hashnode_value', 'PRED_CALL',
           'TI_SAT_LFRACT_TYPE', 'attribute_spec', 'OPT_gnatO',
           '__timezone_ptr_t', 'MAX_MODE_VECTOR_UFRACT',
           'FIXED_CONVERT_EXPR', 'BUILT_IN_BOOL_COMPARE_AND_SWAP_16',
           'ir_type', 'line_map_realloc',
           'gt_ggc_e_15binding_table_s', 'RID_WCHAR',
           'X86_TUNE_FAST_PREFIX', 'function', '_SC_BC_SCALE_MAX',
           'ssa_op_iter_def', 'TS_IDENTIFIER',
           'gt_ggc_e_16constexpr_fundef', 'BUILT_IN_VSPRINTF_CHK',
           '_ISprint', 'BUILT_IN_NONLOCAL_GOTO', 'NULL_EXPR',
           'LT_EXPR', 'OPT_iprefix', 'OPT_Wmissing_prototypes',
           'GSS_EH_FILTER', 'X86_ARCH_CMPXCHG', 'tree_decl_with_rtl',
           'CPP0X_AUTO', 'OPT_Wpacked_bitfield_compat',
           'NODE_FREQUENCY_HOT', '_SC_THREAD_ATTR_STACKSIZE',
           'BUILT_IN_CLOG10', '_SC_2_VERSION', 'language_function',
           'UNSPECV_PROLOGUE_USE', 'LROTATE_EXPR', 'CIF_N_REASONS',
           'REDUC_MAX_EXPR', 'BUILT_IN_CSINHF', 'DINFO_LEVEL_NONE',
           'OPT_Wnested_externs', 'BUILT_IN_CSINHL',
           'gt_ggc_e_11fixed_value', 'CPTI_ATEXIT',
           'c_language_function', 'GSS_WITH_OPS', 'CONJ_EXPR',
           'locale_t', 'SI_QUEUE', 'BUILT_IN_MODFF',
           'BUILT_IN_FPRINTF_CHK', 'UNION_TYPE', 'BUILT_IN_MODFL',
           'cp_label_binding', 'BUILT_IN_CBRTL', '_CS_V7_ENV',
           'BUILT_IN_CONJ', 'OPT_Wimplicit_int', 'BUILT_IN_CBRTF',
           'OPT_Wc__0x_compat', 'GENERIC_STACK_CHECK',
           'BUILT_IN_GOMP_LOOP_ULL_RUNTIME_START',
           'AVAIL_OVERWRITABLE', 'OPT_finline', 'BASELINK',
           'UNORDERED_EXPR', 'REPORT_ALIGNMENT',
           'gt_ggc_e_12lang_decl_ns', 'OPT_Wsystem_headers',
           'RID_PRIVATE', 'PROCESSOR_CORE2_32', 'pretty_printer',
           'BUILT_IN_ISGREATER', 'REDUC_PLUS_EXPR', 'BUILT_IN_SINCOS',
           'gt_ggc_e_12rtx_def_smax', 'GF_CALL_CANNOT_INLINE',
           'ucontext', '__priority_which_t', 'UNSPECV_RDGSBASE',
           'cdk_error', 'RECORD_TYPE', 'CPP_W_TRADITIONAL',
           'RID_IS_BASE_OF', '_SC_THREADS', 'ix86_fpcmp_strategy',
           '__gmp_randstate_struct', 'PLUGIN_START_UNIT',
           'TRUNC_MOD_EXPR', '_sch_isvsp', '_fpreg',
           'OPT_fnon_call_exceptions', 'TI_ULLACCUM_TYPE',
           'OPT_fmessage_length_', 'BUILT_IN_NEXTAFTER', 'POLL_PRI',
           'OPT_Wcpp', 'gt_ggc_e_29cp_unparsed_functions_entry_d',
           'OPT_fgo_dump_', 'BUILT_IN_FETCH_AND_AND_2',
           'BUILT_IN_FETCH_AND_AND_1', 'BUILT_IN_FETCH_AND_AND_4',
           'OPT_fuse_cxa_atexit', 'BUILT_IN_FETCH_AND_AND_8',
           'CIF_FUNCTION_NOT_CONSIDERED', 'ICV_CAST',
           'qualified_typedef_usage_s',
           'CPTK_HAS_TRIVIAL_CONSTRUCTOR',
           'qualified_typedef_usage_t', 'DBX_DEBUG',
           'BUILT_IN_REMAINDER', 'BUILT_IN_SETJMP_SETUP',
           'unrolled_loop', 'PRED_TREE_OPCODE_NONEQUAL',
           'OPT_fsched_critical_path_heuristic',
           'gt_ggc_e_13VEC_edge_base', 'b_kind',
           'OPT_fasynchronous_unwind_tables',
           'BUILT_IN_FETCH_AND_AND_N', 'gt_ggc_e_14macinfo_struct',
           'UNSPEC_MASKSTORE', 'wistream', 'BUILT_IN_STRCAT',
           '_SC_AIO_MAX', 'BB_IRREDUCIBLE_LOOP',
           'gt_ggc_e_18initial_value_pair', 'X86_TUNE_SINGLE_PUSH',
           'OPT_Wover_ann', 'VEC_ipa_opt_pass_base', 'base_access',
           'CTI_INT8_TYPE', 'OPT_mprefer_avx128',
           'BUILT_IN_GOMP_LOOP_ORDERED_DYNAMIC_NEXT', 'TS_CP_WRAPPER',
           'edge_iterator', '__u_int', 'CPP_SEMICOLON',
           'WARN_STRICT_OVERFLOW_CONDITIONAL', 'UNLT_EXPR',
           'BUILT_IN_SUB_AND_FETCH_16', 'OPT_fivopts',
           'OPT_Wenum_switch', 'RTLD_DI_SERINFO', 'sigval',
           'OPT_fsource_filename_', 'UNSPEC_FIST',
           'X86_TUNE_SSE_SPLIT_REGS',
           'BUILT_IN_GOMP_LOOP_DYNAMIC_NEXT', 'u_int16_t',
           'gt_ggc_e_20ltrans_partition_def', 'gt_ggc_e_8function',
           'gt_ggc_e_27VEC_pending_redefinition_gc',
           'BUILT_IN_GOMP_LOOP_ULL_ORDERED_GUIDED_NEXT',
           'BUILT_IN_POW', 'BUILT_IN_PARITYIMAX', '__mpf_struct',
           'gt_ggc_e_20VEC_die_arg_entry_gc', 'UNSPEC_TLSDESC',
           'OPT_fsigned_bitfields', 'gimple_statement_with_ops',
           'UI_TARGET', 'CLOBBERED_REGS', 'flock', 'LDPT_GET_SYMBOLS',
           'OPT_funsigned_bitfields', 'BUILT_IN_HUGE_VALF',
           'RANGE_EXPR', 'CIF_FUNCTION_NOT_INLINABLE',
           'BUILT_IN_HUGE_VALL',
#           'basic_ios<char,std::char_traits<char> >', 
           'OPT_gstabs_',
           'CTI_INT16_TYPE', '_SC_LEVEL1_ICACHE_LINESIZE',
           'BUILT_IN_SCALBNF', 'PLUGIN_REGISTER_GGC_ROOTS',
           'POLL_MSG', 'GTC_DIAG', 'BUILT_IN_APPLY',
           'MIN_MODE_VECTOR_UFRACT', 'TI_SAT_ULLACCUM_TYPE',
           'CPTI_PFN_IDENTIFIER', 'sk_function_parms',
           '_SC_SHARED_MEMORY_OBJECTS', 'OPT_fauto_inc_dec',
           '_PC_ALLOC_SIZE_MIN', 'CREG', 'CPP_LSHIFT',
           'OPT_fuse_boehm_gc', '_SC_PII_INTERNET', 'bitmap_head_def',
           '__pthread_slist_t', 'BUILT_IN_FWRITE_UNLOCKED',
           'GIMPLE_CALL', 'gt_ggc_e_22VEC_deferred_access_gc',
           'gt_ggc_e_15dwarf_file_data', 'CPTI_LANG_NAME_CPLUSPLUS',
           'RID_NULL', 'LDPT_MESSAGE', 'cp_binding_level',
           '_CS_XBS5_LPBIG_OFFBIG_LDFLAGS', 'sfk_constructor',
           'tf_warning', 'ba_quiet', 'BUILT_IN_AND_AND_FETCH_2',
           'BUILT_IN_AND_AND_FETCH_1', 'BUILT_IN_AND_AND_FETCH_4',
           'SLOT_CW_STORED', 'BUILT_IN_AND_AND_FETCH_8',
           'NUM_MACHINE_MODES', 'CPP_OTHER', 'UNSPEC_PCREL',
           '_SC_HOST_NAME_MAX', 'tree_function_decl', '_SC_TIMEOUTS',
           'uint64_t', 'TS_STRING', 'UI_DWARF2',
           'ld_plugin_register_cleanup', 'OPT_fworking_directory',
           'RTLD_DI_PROFILEOUT', '__rlim_t', 'RID_SIZEOF',
           '__kernel_off_t', 'BUILT_IN_VAL_COMPARE_AND_SWAP_N',
           'OPT_time', 'MAX_MODE_VECTOR_ACCUM', 'tree_label_decl',
           'BUILT_IN_TANHL', 'OPT_fextended_identifiers',
           'IX86_FPCMP_COMI', 'BUILT_IN_VAL_COMPARE_AND_SWAP_8',
           'ostream', 'BUILT_IN_VAL_COMPARE_AND_SWAP_1',
           'BUILT_IN_VAL_COMPARE_AND_SWAP_2',
           'BUILT_IN_VAL_COMPARE_AND_SWAP_4', 'tag_types',
           'BIT_FIELD_REF', 'OPT_Wproperty_assign_default',
           '_SC_PII_OSI_CLTS', 'OPT_Wmissing_declarations',
           'POLL_OUT', 'BUILT_IN_SCALB', 'clk_cxx', 'TI_FLOAT_TYPE',
           'OMP_PARALLEL', 'BUILT_IN_CREALL', 'BUILT_IN_CREALF',
           'OPT_Wmissing_include_dirs', 'OPT_Wfallthrough',
           'CDI_DOMINATORS', 'OPT_mfancy_math_387',
           'gt_pointer_operator', '_SC_TRACE_LOG', 'OPT_fpermissive',
           'ds_inline', 'gt_ggc_e_17rtx_def_us_ashift',
           '_CS_XBS5_LPBIG_OFFBIG_LIBS', 'rtl_bb_info',
           'gt_ggc_e_12rtx_def_note', 'LDPS_BAD_HANDLE', 'FPE_FLTSUB',
           'BUILT_IN_PRINTF', 'gt_ggc_e_8tree_exp',
           'X86_TUNE_USE_XCHGB', 'X86_TUNE_PUSH_MEMORY', 'sc_none',
           'BImode', 'RID_HAS_NOTHROW_COPY', 'cdk_ptrmem',
           'BUILT_IN_LRINT', 'OPT_fregmove',
           'BUILT_IN_GOMP_LOOP_END_NOWAIT', 'OPT_finit_integer_',
           'BUILT_IN_POPCOUNTL', 'tsk_invalid_member_spec',
           'BUILT_IN_CEXPI', 'BUILT_IN_CEXPL', 'TI_PID_TYPE',
           'CLD_CONTINUED', 'BUILT_IN_CEXPF', 'CONVERT_EXPR',
           'OPT_mfsgsbase', 'OPT_fexcess_precision_', 'VEC_rtx_heap',
           'OPT_Woverride_init', 'Dl_serinfo', 'LDPT_OUTPUT_NAME',
           'GIMPLE_UNARY_RHS', 'SSIZETYPE', 'cp_decl_spec',
           'PRED_LOOP_BRANCH', 'lang_decl', 'BUILT_IN_FPUTS',
           'BUILT_IN_FMAF', 'gt_ggc_e_16var_loc_list_def',
           'BUILT_IN_FMAL', 'X86_TUNE_USE_FFREEP', 'TS_CP_OVERLOAD',
           'BUILT_IN_FPUTC', 'OPT_Wsynthetic_access',
           '_SC_MULTI_PROCESS', 'BUILT_IN_FMAX', 'VEC_UNPACK_LO_EXPR',
           'gt_ggc_e_10die_struct', 'CPP_PRAGMA_EOL',
           '_SC_V6_LPBIG_OFFBIG', 'CTI_DEFAULT_FUNCTION_TYPE',
           'X86_TUNE_SLOW_IMUL_IMM32_MEM', 'RID_SETTER',
           'BUILT_IN_CARG', 'CPP_NAME', 'gt_ggc_e_14rtx_def_concat',
           'RID_VOID', '__suseconds_t', 'OPT_std_gnu1x', 'TRAIT_EXPR',
           'OPT_mstringop_strategy_', '_SC_DELAYTIMER_MAX', 'loff_t',
           'gimple_statement_base', 'URSHIFT_EXPR', 'RESULT_DECL',
           'htab_trav', 'BUILT_IN_CSQRT', 'plf_mask', 'lang_type_u',
           'OPT_fautomatic', 'ld_plugin_cleanup_handler',
           'X86_TUNE_LAST', 
           #'basic_filebuf<char,std::char_traits<char>         >', 
           'MAX_EXPR', 'OPT_nodefaultlibs', 'CPP_MINUS_MINUS',
           'POLL_HUP', 'uint_fast64_t',
           'gt_ggc_e_22pending_redefinition_d', 'line_map',
           'OPT_fhosted', 'RID_ASSIGN', 'gimplify_status',
           'stringop_algs', 'pthread_condattr_t', 'pthread_once_t',
           '__uint32_t', '_SC_XBS5_ILP32_OFF32', 'vec_kind',
           'BUILT_IN_FREXPL', 'BCS_NO_SCOPE', 'OPT_fdump_unnumbered',
           'DOT_PROD_EXPR', 'BUILT_IN_FREXPF', 'mp_bitcnt_t',
           'alloc_zone', 'gt_ggc_e_16rtx_def_subunion',
           'TYPE_KIND_LAST',
           'gt_ggc_e_32VEC_qualified_typedef_usage_t_gc',
           '_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS', 'tree_index',
           'OPT_fcompare_elim', '__id_t', 'fp_contract_mode',
           'BUILT_IN_LGAMMA_R', 'gt_ggc_e_20gimple_statement_wce',
           'OPT_msseregparm', 'UNSPEC_DP', 'BUILT_IN_ISWSPACE',
           'CP_ID_KIND_UNQUALIFIED_DEPENDENT',
           'OPT_fmove_loop_invariants', 'fpregset_t',
           'affine_tree_combination', 'TS_CP_GENERIC',
           'gt_ggc_e_15rtx_def_ss_mult', 'OPT_malign_functions_',
           'OPT_Woverflow', 'BUILT_IN_LOGF', 'UNSPEC_F2XM1',
           'BUILT_IN_LOGB', 'OPT_Wunsafe_loop_optimizations',
           'OPT_Wpragmas', 'BUILT_IN_LOGL',
           'gt_ggc_e_13tree_decl_map', 'BUILT_IN_FPRINTF', 'CPP_EQ',
           'LAMBDA_EXPR', 'gt_ggc_e_19eh_region_u_allowed',
           'UNSPEC_EXTRQI', 'OPT_fdump_final_insns',
           '_SC_LEVEL2_CACHE_ASSOC', 'RID_ADDR_SPACE_15',
           'RID_ADDR_SPACE_14', 'RID_ADDR_SPACE_13',
           'RID_ADDR_SPACE_12', 'RID_ADDR_SPACE_11', 'FPE_FLTDIV',
           'TI_INTEGER_ONE', 'RID_WHILE', 'MIN_MODE_COMPLEX_FLOAT',
           'TI_SAT_UACCUM_TYPE', '_SC_THREAD_ROBUST_PRIO_INHERIT',
           'BUILT_IN_SCALBLN', 'ASSERT_EXPR', 'OPT_fPIE', 'OPT_fPIC',
           'TS_REAL_CST', 'N14pthread_cond_t4DOT_15E',
           'OPT_Wunused_function',
           'gt_e_P9tree_nodeP9tree_node17splay_tree_node_s',
           'BUILT_IN_LOG2', 'BUILT_IN_REALLOC',
           'TARGET_CPU_DEFAULT_k6', 'X86_TUNE_SLOW_IMUL_IMM8',
           'OPT_fltrans', 'CPP_TOKEN_FLD_NONE',
           'gt_ggc_e_21deferred_access_check',
           'X86_TUNE_PARTIAL_FLAG_REG_STALL', 'OPT_std_f2003',
           'BUILT_IN_STPCPY', 'OPT_std_f2008', 'CTI_INT_ARRAY_TYPE',
           'BUILT_IN_SUB_AND_FETCH_1', '__u_quad_t', 'tree_type_decl',
           'cxx_binding', 'BUILT_IN_ISGREATEREQUAL',
           'FP_SECOND_SSE_REGS', 'debug_struct_file', 'def_optype_d',
           'gt_ggc_e_16rtx_def_popcount', 'BUILT_IN_SUB_AND_FETCH_8',
           'pp_none', 'TS_INT_CST', 'OPT_fclasspath_', 'def_optype_p',
           'OPT_Wpointer_sign', 'OPT_fdisable_assertions_',
           'gt_ggc_e_11cpp_macro_u', 'N7siginfo4DOT_304DOT_31E',
           'OPT_fcx_fortran_rules', 'BUILT_IN_POW10L', 'fpmath_unit',
           'NOEXCEPT_EXPR', '_G_int16_t', 'cpp_num_part',
           'OPT_fif_conversion', 'BUILT_IN_NEXTTOWARDL',
           'BUILT_IN_CEILL', 'BUILT_IN_CEILF', 'VEC_gimple_p_base',
           'HARD_REG_ELT_TYPE', 'use_operand_p',
           'N13cp_declarator4DOT_894DOT_94E',
           'gt_ggc_e_21gimple_statement_bind',
           'gt_ggc_e_11tree_pair_s', 'BUILT_IN_SCANF',
           'gt_ggc_e_23VEC_ident_data_tuple_gc', 'CPP_PRAGMA',
           '_SC_MEMLOCK', 'timespec', 'RID_REGISTER', 'use_optype_p',
           '_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS',
           '_SC_PII_INTERNET_STREAM', 'BUILT_IN_DREMF', 'LTGT_EXPR',
           'BUILT_IN_DREML', 'GIMPLE_OMP_TASK', 'va_list',
           'class_type', '_xstate', 'sbitmap', '_SC_TRACE_INHERIT',
           'DK_LAST_DIAGNOSTIC_KIND', '__u_long', 'ira_algorithm',
           'UNSPEC_XTRACT_FRACT', 'TEMPLATE_ID_EXPR',
           'BUILT_IN_NAND_AND_FETCH_16', '__kernel_sighandler_t',
           'CLD_STOPPED', 'PLUS_EXPR', 'UNSPEC_SP_TLS_SET',
           'V16SFmode', 'rlim_t', 'real_format',
           'gt_ggc_e_15rtx_def_compare', 'RID_FIRST_ADDR_SPACE',
           'u_quad_t', 'TARGET_CPU_DEFAULT_athlon_sse',
           'gt_ggc_e_16lang_type_header', 'uint_least32_t',
           '__int8_t', 'gt_ggc_e_19c_language_function', 'sigstack',
           'BUILT_IN_FFSIMAX', '_SC_SPORADIC_SERVER',
           'gt_ggc_e_20VEC_tree_pair_s_base', '_SC_PII_SOCKET',
           'gt_ggc_e_14lang_tree_node',
           'gt_ggc_e_26VEC_c_goto_bindings_p_base',
           'gt_ggc_e_13incoming_args', 'OPT_ftls_model_',
           'gt_ggc_e_16tree_result_decl', 'OPT_mred_zone',
           'TI_SAT_ULFRACT_TYPE', 'OPT_funsafe_loop_optimizations',
           'TI_SAT_SFRACT_TYPE', 'OPT_mfp_ret_in_387',
           'rep_prefix_1_byte', 'uint', 'DYNAMIC_CAST_EXPR',
           'ITIMER_PROF', 'flock64', 'BUILT_IN_ISWPRINT',
           'BUILT_IN_ROUNDL', 'OMP_CLAUSE_COPYPRIVATE',
           'NEED_PHI_STATE_NO', 'gt_ggc_e_18treetreehash_entry',
           'OPT_pass_exit_codes', 'BUILT_IN_BZERO',
           'symbol_visibility', 'RID_AT_PROTECTED', 'VEC_tree_gc',
           'OPT_fobjc_gc', 'TEMPLATE_DECL', 'gt_ggc_e_9tree_base',
           'ld_plugin_onload', 'lang_decl_min', 'OPT_frandom_seed',
           'CPTK_IS_STD_LAYOUT', 'RLIMIT_AS', 'BB_MODIFIED',
           '_sch_isidnum', 'OPT_funderscoring', 'CEIL_MOD_EXPR',
           'BUILT_IN_NEXT_ARG', 'PROCESSOR_BDVER1',
           'TRUTH_ANDIF_EXPR', 'libcall', '__fd_mask', 'CM_LARGE',
           'RID_IS_LITERAL_TYPE', 'OPT_Wunused_dummy_argument',
           'UI_NONE', 'DTOR_FLAG',
           'DIAGNOSTICS_SHOW_PREFIX_EVERY_LINE',
           'BUILT_IN_GOMP_CRITICAL_NAME_END', 'LDPR_RESOLVED_DYN',
           'uint_least8_t', 'VEC_gimple_vec_none', 'BUILT_IN_CCOSF',
           'BUILT_IN_CCOSL', 'BUILT_IN_CCOSH',
           'gt_ggc_e_15cgraph_rtl_info', 'VEC_cp_class_binding_base',
           'gt_ggc_e_14rtx_def_ss_div', 'OPT_ftree_vectorize',
           'OPT_flto_report', 'tree_common', 'VEC_cgraph_edge_p_base',
           'ix86_tune_indices', 'pthread_attr_t',
           'gt_ggc_e_13VEC_tree_base', 'gt_ggc_e_12vcall_struct',
           'ARRAY_REF', 'RID_AT_ENCODE',
           'OPT_fdiagnostics_show_option', 'BUILT_IN_GAMMA_R',
           'PRED_GOTO', 'gimple_statement_wce', 'TS_CP_DEFAULT_ARG',
           'gt_ggc_e_21VEC_msgref_entry_base', 'DOM_NONE',
           'FPE_FLTOVF', 'LEGACY_REGS', 'OPT_Wout_of_date',
           'sc_register', 'VEC_ipa_ref_t_none', 'sigvec',
           'OPT_Wspecial_param_hiding',
           'gt_ggc_e_19dw_val_struct_union', 'BUILT_IN_CTZ',
           'OPT_Wuncheck', 'operand_equal_flag', 'BUILT_IN_PARITY',
           'OPT_malign_jumps_', 'tcc_constant',
           'OPT_fdiagnostics_show_location_', 'lv_assign',
           'referenced_var_iterator', 'X86_TUNE_FUSE_CMP_AND_BRANCH',
           '_CS_XBS5_ILP32_OFF32_CFLAGS', 'X86_ARCH_CMOVE',
           'OPT_std_c99', 'OPTIMIZATION_NODE', 'RID_READWRITE',
           'OPT_std_c90', 'MODE_VECTOR_INT', 'BUILT_IN_CATAN',
           'tf_keep_type_decl', 'BUILT_IN_FINITED32',
           'gt_ggc_e_15VEC_loop_p_base', 'cgraph_asm_node',
           'OPT_muclibc', 'CTI_CHAR32_TYPE',
           'NODE_FREQUENCY_EXECUTED_ONCE', 'OMP_CLAUSE_DEFAULT_NONE',
           'WIDEN_MULT_EXPR', 'PROCESSOR_AMDFAM10',
           '_CS_XBS5_ILP32_OFFBIG_LDFLAGS', '__RLIMIT_RSS',
           'const_gimple_seq', 'OPT_Waggregate_return', 'DK_ICE',
           'OPT_ftree_parallelize_loops_', '_PC_ASYNC_IO',
           'BUILT_IN_FREE', 'PRED_COLD_FUNCTION', 'RID_NULLPTR',
           'N12ld_plugin_tv5DOT_101E', 'cpp_token_u', '_sch_isbasic',
           'OPT_mf16c', 'clk_objcxx', '__uint16_t',
           'OPT_Wunused_value', 'OPT_Wassert_identifier',
           'ts_within_enclosing_non_class', 'LC_RENAME',
           'BUILT_IN_ISASCII', 'gt_ggc_e_19machine_frame_state',
           'BUILT_IN_CLEAR_CACHE', 'THROW_EXPR',
           'gt_ggc_e_21template_parm_index_s',
           'gt_ggc_e_17rtx_def_ss_ashift', 'OPT_extdirs',
           'gt_ggc_e_12lang_decl_u3',
           'gt_ggc_e_22rtx_def_unsigned_float', 'X86_ARCH_CMPXCHG8B',
           'CCCmode', 'basic_block_def', 'c_common_identifier',
           'DWARF2_DEBUG', 'gt_e_P12object_block4htab',
           '_CS_POSIX_V7_ILP32_OFFBIG_LIBS', 'sigcontext',
           'MODE_FRACT', 'gt_e_P11cgraph_node4htab', 'TRAP_BRKPT',
           'ICV_RIGHT_OF_COMMA', 'WITH_SIZE_EXPR', 'BUILT_IN_REMQUOL',
           'OPT_nostdlib', 'sfk_deleting_destructor',
           'EH_FILTER_EXPR', 'tcc_type', 'UNSPECV_CLFLUSH', 'CDImode',
           'OPT_Wmissing_braces', 'wostream',
           'gt_ggc_e_19cgraph_node_set_def', 'TS_PARM_DECL',
           'ILL_PRVREG', 'alias_set_type', 'ALIGNOF_EXPR',
           'gt_ggc_e_22rtx_def_float_truncate',
           'gt_ggc_e_14dw_attr_struct', '__RLIMIT_SIGPENDING',
           'CTI_INT_FAST8_TYPE', 'UNSPEC_GOTTPOFF',
           'OPT_SPECIAL_program_name', 'plugin_callback_func',
           '_SC_CLOCK_SELECTION', 'gt_ggc_e_12tree_complex',
           'cgraph_edge_p', 'BUILT_IN_LLRINTF', 'BUILT_IN_ISINFL',
           'OPT_traditional', 'ak_public', 'CPTK_IS_BASE_OF',
           'BUILT_IN_ISINFF', 'BT_SPECLINE',
           'gt_ggc_e_16hashed_attribute', 'ICR_CONVERTING',
           'template_parm_index_s', 'pt_solution', '_SC_SHRT_MIN',
           'OPT_ffixed_line_length_', 'NO_DEBUG', 'BT_FILE',
           'OPT_floop_parallelize_all', 'BUILT_IN_CASIN',
           'BUILT_IN_MALLOC', 'BUILT_IN_LONGJMP', 'RID_IS_CLASS',
           'BUILT_IN_FFSLL',
           'BUILT_IN_GOMP_LOOP_ULL_ORDERED_DYNAMIC_START',
           'VEC_alias_pair_none', 'OPT_Warray_temporaries',
           'OPT_flto', '_PC_NAME_MAX', 'gt_ggc_e_17cgraph_thunk_info',
           'VEC_deferred_access_check_base', 'diagnostic_context',
           'OPT_ftree_loop_if_convert_stores', 'bitmap',
           'PRED_CONTINUE', 'TS_VECTOR',
           'gt_e_P15dwarf_file_data4htab',
           'gt_ggc_e_22cached_dw_loc_list_def', 'gimple_df',
           'gt_ggc_e_14cp_token_value',
           'gt_ggc_e_22gimple_statement_catch',
           '_CS_GNU_LIBPTHREAD_VERSION', 'gt_ggc_e_11saved_scope',
           'temp_slot_p', 'OPT_foutput_class_dir_',
           'gt_ggc_e_18ipa_member_ptr_cst', '_PC_SYNC_IO', 'CPTI_MAX',
           'cp_tree_index', 'BUILT_IN__EXIT', '_G_uint32_t',
           'pex_obj', 'TLS_DIALECT_SUN', 'UNSPECV_NOPS',
           'OPT_dumpmachine', 'UNLE_EXPR', 'OPT_fprofile_arcs',
           'OPT_mno_align_stringops', 'BUILT_IN_LLABS',
           'UNSPECV_BLOCKAGE', 'gt_ggc_e_12fake_union_1',
           'OPT_fmerge_constants', 'OPT_fstrict_overflow',
           'TI_SAT_QQ_TYPE', 'CTI_UINTPTR_TYPE',
           'GF_OMP_PARALLEL_COMBINED', 'gt_ggc_e_9cpp_macro',
           'AVAIL_NOT_AVAILABLE', 'BUILT_IN_STRRCHR', '_CS_LFS_LIBS',
           'BUILT_IN_MEMSET', 'BUILT_IN_STRLEN',
           'CTI_INT_FAST16_TYPE', 'CIF_BODY_NOT_AVAILABLE',
           'TI_UINT32_TYPE', 'OPT_funroll_all_loops', 'BUILT_IN_CLZL',
           'cpp_comment', 'BUILT_IN_OR_AND_FETCH_2', 'tf_conv',
           'UNSPEC_PCMPESTR', 'VECTOR_CST', 'RTLD_DI_LINKMAP',
           'V16HImode', 'gt_ggc_e_29gimple_statement_omp_continue',
           'RID_FIRST_AT', 'OPT_fuse_cxa_get_exception_ptr', 'rlimit',
           'SSA_NAME', '__sig_atomic_t', 'pre_expr_d', 'CPTI_DCAST',
           'BUILT_IN_OR_AND_FETCH_8', '_SC_XOPEN_REALTIME_THREADS',
           'gt_ggc_e_17rtx_constant_pool', 'TI_BITSIZE_UNIT',
           'gimple_statement_omp_atomic_store', 'hash_table',
           'UNSPECV_LWPINS_INTRINSIC', 'gt_ggc_e_11rtx_def_leu',
           'BUILT_IN_NORMAL',
           'BUILT_IN_GOMP_LOOP_ORDERED_RUNTIME_NEXT', 'OPT_shared',
           'QUAL_UNION_TYPE', 'gt_ggc_e_22dw_val_vms_delta_union',
           'VEC_tree_pair_s_none', 'OPT_Wnon_virtual_dtor',
           'gt_ggc_e_14rtx_def_parity', '_SC_LEVEL2_CACHE_LINESIZE',
           '_SC_FD_MGMT', 'ILL_ILLTRP', 'OPT_mstackrealign',
           'X86_TUNE_PROMOTE_HIMODE_IMUL', 'DINFO_LEVEL_NORMAL',
           'gt_ggc_e_17tree_exp_subunion', 'access_kind',
           'libi_shostptr_t', 'X86_TUNE_BRANCH_PREDICTION_HINTS',
           'lang_decl_base', 'VEC_basic_block_gc',
#           'allocator<wchar_t>', 
           'PROCESSOR_ATHLON',
           'BUILT_IN_VA_COPY', 'UNSPEC_MFENCE', 'DK_IGNORED',
           'MAX_MODE_CLASS', 'RLIMIT_CORE',
           'gt_ggc_e_14pubname_struct', 'clk_ordinary',
           'BUILT_IN_INF', 'BUILT_IN_POPCOUNTIMAX',
           'RID_AT_SYNTHESIZE', 'IPA_REF_ADDR',
           'OPT_finline_functions', 'bitmap_element',
           '_CS_POSIX_V6_ILP32_OFFBIG_LIBS', 'int_fast32_t',
           'MAX_MODE_PARTIAL_INT',
           '_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS',
           'STATIC_BUILTIN_STACK_CHECK', 'gt_ggc_e_13varasm_status',
           'FPMATH_387', 'gtc_mode', 'UNSPECV_SPLIT_STACK_RETURN',
           '_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS', '_SC_BARRIERS',
           'GIMPLE_ASSIGN', 'DINFO_USAGE_NUM_ENUMS',
           'gt_ggc_e_18lto_tree_ref_table',
           'ld_plugin_all_symbols_read_handler', 'VEC_gimple_seq_gc',
           'plugin_name_args', 'gt_ggc_e_13ht_identifier',
           'BUILT_IN_COSL', 'BUILT_IN_COSH', 'BUILT_IN_COSF',
           'VEC_varpool_node_set_none', '__clockid_t',
           'VEC_uchar_none', 'OPT_fexceptions', 'OPT_Wfield_hiding',
           'MODE_CC', 'sk_for', 'ds_signed', 'REG_UESP',
           'inline_summary', 'RID_FOR', 'OPT_falign_loops_',
           'Dl_info', 'CPTI_CTOR_IDENTIFIER', 'RID_AT_TRY',
           'CTI_WCHAR_TYPE', 'OPT_Waddress', 'OPT_Wstatic_access',
           'BT_FIRST_USER', 'RID_AT_SYNCHRONIZED',
           'ld_plugin_claim_file_handler', 'CPP_W_UNUSED_MACROS',
           'gt_ggc_e_17rtx_def_sat_fract', 'CTI_UINT16_TYPE',
           'itk_long_long', 'OPT_fpie', 'OPT_fpic', 'OPT_fjni',
           'ce_if_block', 'gt_ggc_e_21named_label_use_entry',
           'pthread_barrierattr_t', 'UNSPEC_FIST_CEIL',
           'linenum_type', 'TARGET_CPU_DEFAULT_k6_2',
           'TARGET_CPU_DEFAULT_k6_3', 'RTLD_DI_CONFIGADDR',
           '_SC_READER_WRITER_LOCKS', '__RLIMIT_RTTIME',
           'CPTI_NOEXCEPT_TRUE_SPEC', 'BUILT_IN_J0F', 'BUILT_IN_TAN',
           'TCmode', 'BUILT_IN_J0L', 'gt_ggc_e_15rtx_def_us_plus',
           'CLK_GNUC99', 'OPT_gvms', 'expr_list_kind',
           'BUILT_IN_PREFETCH', 'X86_TUNE_READ_MODIFY',
           '_CS_POSIX_V7_ILP32_OFF32_LDFLAGS', 'deferring_kind',
           'X86_TUNE_UNROLL_STRLEN', 'tree_type_symtab', 'RID_INOUT',
           'RTLD_DI_ORIGIN', 'CIF_OVERWRITABLE', 'libi_uhostptr_t',
           'CPP_W_MISSING_INCLUDE_DIRS',
           'gt_ggc_e_16rtx_def_parallel', 'BUILT_IN_OR_AND_FETCH_N',
           'CPTI_JAVA_CHAR_TYPE', '__fsfilcnt_t', 'UNSPEC_TLS_IE_SUN',
           'TS_BASE', 'CPP_SCOPE', 'd_kind', 'BUILT_IN_CASINH',
           'BUILT_IN_CASINL', 'gt_ggc_e_13dw_fde_struct',
           'BUILT_IN_CASINF', 'X86_TUNE_HIMODE_MATH',
           'gt_ggc_e_12lang_decl_fn', 'DEFAULT_ARG',
           'gt_ggc_e_12rtx_def_smin', 'CTI_PRETTY_FUNCTION_NAME_DECL',
           'OPT_Wsign_promo', '_SC_PII_INTERNET_DGRAM', 'CPP_LESS_EQ',
           'OPT_fsched_stalled_insns_dep', 'OPT_pie',
           'OPT_fshort_enums', 'OPT_foperator_names',
           'OPT_fcall_saved_', 'OPT_fgcse_las', 'PROCESSOR_GENERIC64',
           'SLOT_TEMP', '_CS_LFS_LINTFLAGS', 'C_MAYBE_CONST_EXPR',
           'CIF_REDEFINED_EXTERN_INLINE', 'pthread_barrier_t',
           'cxx_scope', 'priority_type', '_SC_XBS5_LPBIG_OFFBIG',
           'CP_ID_KIND_QUALIFIED', 'OPT_march_', 'STMT_STMT',
           'gt_ggc_e_14constexpr_call', 'TI_SAT_UTQ_TYPE',
           'BUILT_IN_GOMP_LOOP_RUNTIME_START', 'OPT_ftrapping_math',
           'gt_ggc_e_19gfc_intrinsic_map_t', 'BUILT_IN_ASIN',
           'TI_UINT64_TYPE', 'BT_TIMESTAMP', 'RID_SWITCH',
           'RID_AT_PROTOCOL', 'LDPO_REL', 'cxx_dialect',
           'RID_ATTRIBUTE', 'OPT_fprofile_values',
           'BUILT_IN_SPRINTF_CHK', 'OMP_MASTER', 'RID_AT_PUBLIC',
           'gt_ggc_e_23rtx_def_unspec_volatile', 'prediction',
           'gimple', 'gt_ggc_e_12rtx_def_insn', 'lang_decl_fn',
           'ssa_op_iter_type', 'double_int', 'CM_32', 'RID_STATIC',
           '_SC_THREAD_STACK_MIN', 'OPT_std_iso9899_199409',
           '_SC_MONOTONIC_CLOCK', 'LOOP_EXPR', '__RLIMIT_NICE',
           'OPT_fvar_tracking_assignments_toggle',
           'gt_ggc_e_12hashed_entry', 'debug_info_levels',
           'gt_ggc_e_21VEC_method_entry_base', 'PREDICT_EXPR',
           'timeval', 'BUILT_IN_SIN', 'gt_ggc_e_9reg_attrs',
           'gimple_statement_omp_task', 'OPT_Wenum_identifier',
           'gt_ggc_e_17constructor_elt_d', 'OPT_ftree_slp_vectorize',
           'DINFO_USAGE_IND_USE', 'BUILT_IN_LFLOOR', 'LANG_TYPE',
           'PROCESSOR_I486', '_SC_NGROUPS_MAX', 'OPT_fdce',
           '__pthread_mutex_s', 'CTI_INT_FAST64_TYPE', 'DK_SORRY',
           'gimple_statement_eh_filter', 'visibility_flags',
           'unspecv', 'DECL_EXPR', 'CSImode', 'BUILT_IN_ABS',
           '__loff_t', 'OPT_msse4_1', 'N8sigevent4DOT_454DOT_46E',
           'unwind_info_type', 'RSHIFT_EXPR', 'clk_packed',
           'rep_prefix_4_byte', 'sfk_conversion',
           'OPT_tno_android_ld', 'TI_UINTDI_TYPE', 'CCFPUmode',
           'UNSPECV_RDTSCP', 'TI_BOOLEAN_TYPE',
           'gt_ggc_e_22VEC_die_arg_entry_base', 'REG_ESI',
           'gt_ggc_e_18VEC_tree_gc_vec_gc', 'fd_mask',
           'OMP_CLAUSE_UNTIED', 'CTI_UINT32_TYPE',
           'gt_e_P13tree_decl_map4htab', '_sch_isalpha', '__s64',
           'gt_ggc_e_10tree_check', 'GENERAL_REGS', 'SCEV_KNOWN',
           'VEC_gimple_vec_heap', 'OPT_fmax_array_constructor_',
           'siginfo_t', '__kernel_gid32_t',
           'BUILT_IN_GOMP_LOOP_ORDERED_GUIDED_START', 'SDmode',
           'VEC_cgraph_node_ptr_gc', 'gt_ggc_e_11rtx_def_xor',
           'UNSPEC_DTPOFF', 'OPT_fstack_limit_symbol_', 'streambuf',
           'CPP_W_CXX_OPERATOR_NAMES', 'RID_CHAR',
           'gt_ggc_e_18control_flow_graph', 'OPT_fipa_sra',
           'gt_ggc_e_4htab', 'gt_ggc_e_22VEC_constructor_elt_gc',
           'OPT_mandroid', 'BUILT_IN_EXP10', 'TI_SAT_UQQ_TYPE',
           'OVERLOAD', 'TI_UHA_TYPE', 'sfk_copy_assignment',
           'gt_ggc_e_12rtx_def_umod', 'OPT_fmax_stack_var_size_',
           '_PC_REC_MAX_XFER_SIZE', 'OPT_nostdinc__', 'loop',
           'UHAmode', 'GF_CALL_TAILCALL', 'OPT_Wreorder',
           'int_fast16_t', 'gt_ggc_e_15tree_trait_expr',
           'OPT_std_c__98', 'OPT_m64', 'TI_SAT_DA_TYPE',
           'BUILT_IN_CXA_END_CLEANUP', 'debug_info_usage',
           'TS_LABEL_DECL', '_sch_isprint', 'TI_INTDI_TYPE',
           'BUILT_IN_ISPRINT', 'gt_ggc_e_23die_symbol_or_type_node',
           'BUILT_IN_GOMP_LOOP_ULL_ORDERED_RUNTIME_START',
           'tree_var_decl', 'OPT_Wpointer_arith',
           '_SC_MESSAGE_PASSING', 'TRUNC_DIV_EXPR',
           'CPTI_ABORT_FNDECL', 'UNSPECV_RDPMC', 'CP_ID_KIND_NONE',
           '_SC_TRACE_USER_EVENT_MAX', 'OPT_fgnu89_inline',
           'OPT_frecursive', 'OPT_fobjc_abi_version_', 'itk_int',
           'immediate_use_iterator_d', 'CLK_CXX0X',
           'gt_ggc_e_17stack_local_entry', 'BUILT_IN_CACOSHL',
           'BUILT_IN_CACOSHF', 'IR_RTL_CFGLAYOUT',
           'gt_ggc_e_22VEC_cgraph_node_ptr_gc', 'BUILT_IN_ILOGB',
           'BUILT_IN_VSSCANF', 'fd_set', 'CHImode',
           'OPT_Wstrict_aliasing', 'OPT_mfentry',
           'X86_TUNE_ZERO_EXTEND_WITH_AND', 'tree_const_decl',
           'tcc_exceptional', 'OPT_fdefault_integer_8',
           'OPT_fsched_stalled_insns', 'HQmode', 'UNSPEC_INSERTQ',
           'RID_ACCUM', 'RTLD_DI_LMID', 'BUILT_IN_MEMCPY_CHK',
           'VEC_varpool_node_set_base', 'BUILT_IN_FMA',
           'gt_ggc_e_18gimple_statement_d',
           'BUILT_IN_LOCK_RELEASE_16',
           'LDPT_REGISTER_CLAIM_FILE_HOOK', 'cp_declarator_kind',
           'mem_address', 'BLOCK', 'QImode', 'cp_storage_class',
           'OPT_fplugin_arg_', 'PRED_UNCONDITIONAL', '__be32',
           'VEC_alias_pair_gc', 'VEC_tree_none',
           'gt_ggc_e_16rtx_def_truncate', 'VEC_gimple_gc',
           'CONST_CAST_EXPR', 'tcc_declaration', '_SC_SAVED_IDS',
           'OPT_fgcse', 'TI_INTEGER_ZERO', 'OPT_std_gnu90',
           'size_type_kind', 'OPT_std_gnu99', 'tree_exp',
           'OPT_nostdinc', 'gt_ggc_e_22VEC_pubname_entry_base',
           'OPT_Wstrict_null_sentinel',
           'OPT_ftree_vectorizer_verbose_', 'base_access_flags',
           'I387_FLOOR', 'OPT_fthread_jumps', 'TI_BITSIZE_ZERO',
           'TRY_FINALLY_EXPR', 'varpool_node_set_element',
           '_CS_LFS64_CFLAGS', 'OPT_Wassign_intercept', 'alias_pair',
           'ELK_FUNC_CAST', 'CPP_DL_WARNING',
           'gt_ggc_e_18VEC_dcall_entry_gc', 'BT_DATE',
           'BUILT_IN_CACOSL', '__rlimit_resource', 'GF_ASM_INPUT',
           'V2DFmode', 'CPP_W_INVALID_PCH',
           'gt_ggc_e_15rtx_def_pre_inc',
           'gt_ggc_e_16tree_default_arg', '_SC_THREAD_KEYS_MAX',
           'BUILT_IN_MEMPCPY_CHK', 'gt_ggc_e_15deferred_access',
           'wfstream', 'BT_BASE_FILE', '__kernel_timer_t',
           'ROUND_DIV_EXPR', 'OPT_ffast_math', '__rusage_who_t',
           'OPT_posix', 'gt_ggc_e_25VEC_call_site_record_base',
           'tree_node', 'OPT_mveclibabi_', 'OPT_remap', 'dk_dynamic',
           'VEC_rtx_gc', 'template_parm_index', 'RID_CLASS',
           'GIMPLE_EH_FILTER', 'OBJ_TYPE_REF', '__socklen_t',
           'OPT_fsigned_char', '_SC_LEVEL3_CACHE_SIZE',
           'gimple_statement_d', '__kernel_uid32_t',
           'RO_ARRAY_INDEXING', 'VEC_char_base', 'integer_type_kind',
           'PLACEHOLDER_EXPR', 'BUILT_IN_ISUNORDERED',
           '_SC_XOPEN_LEGACY', '_SC_BC_DIM_MAX', 'TS_CP_IDENTIFIER',
           'UNSPECV_WRGSBASE', '_CS_XBS5_ILP32_OFF32_LIBS',
#           'basic_string<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t>       >', 
           'OPT_fcommon', 'OPT_fsplit_stack',
           'gt_ggc_e_29VEC_pending_redefinition_base',
           'X86_TUNE_SINGLE_POP', 'OPT_symbolic',
           'CPTI_THIS_IDENTIFIER', 'gt_ggc_e_15rtx_def_ordered',
           'REPORT_DR_DETAILS', 'VEC_gimple_seq_heap',
           'TI_UINTQI_TYPE', '_SC_V6_ILP32_OFFBIG', 'V32HImode',
           '_CS_LFS_LDFLAGS', 'normalized_KC',
           'GF_CALL_RETURN_SLOT_OPT', 'sk_template_spec',
           'USING_DECL', 'gt_ggc_e_15lang_identifier', '__pid_type',
           'cpp_normalize_level', 'BUILT_IN_ISDIGIT', '_G_fpos_t',
           'CTI_INT_LEAST16_TYPE', 'CPP_CHAR',
           'X86_TUNE_SPLIT_LONG_MOVES', 'gt_ggc_e_14rtx_def_rotate',
           'OPT_fresolution_', 'TLS_DIALECT_GNU',
           'TEMPLATE_TYPE_PARM', '_PC_CHOWN_RESTRICTED',
           'OPT_faccess_control', 'OPT_fopenmp', 'RID_IF',
           'uint_fast8_t', 'SSE_FIRST_REG', 'BUILT_IN_J0', 'RID_NEW',
           'gt_ggc_e_29gimple_statement_omp_parallel',
           'BUILT_IN_GOMP_PARALLEL_LOOP_DYNAMIC_START',
           'gt_ggc_e_11rtx_def_set', 'OPT_no_canonical_prefixes',
           'gt_ggc_e_15target_libfuncs', 'OPT_Wformat_security',
           'TI_SAT_LLFRACT_TYPE', 'node_frequency', 'int_list',
           'CPP_LAST_PUNCTUATOR', 'diagnostic_prefixing_rule_t',
           'IRA_REGION_MIXED', 'GSS_WITH_MEM_OPS_BASE',
           '_SC_STREAM_MAX', 'int_least64_t', '_sch_isspace',
           'RID_TRY', 'ILL_BADSTK', 'BUILT_IN_BSWAP64',
           'TI_SAT_HA_TYPE', 'VAR_DECL', 'UNSPEC_SP_SET',
           'TI_VA_LIST_TYPE', 'OPT_fcrossjumping', 'FIX_TRUNC_EXPR',
           'VEC_cgraph_edge_p_none', 'CTI_TRUTHVALUE_TYPE',
           '_SC_EQUIV_CLASS_MAX', 'timer_t',
           'gt_ggc_e_21rtx_def_note_subunion', 'TS_TYPE_DECL',
           'BUILT_IN_JN', 'DINFO_STRUCT_FILE_BASE',
           'tree_constructor', 'f_owner_ex', 'TI_SAT_HQ_TYPE',
           'CP_ID_KIND_TEMPLATE_ID', 'REAL_TYPE',
           'cp_lambda_default_capture_mode_type', 'ORDERED_EXPR',
           'POLL_IN', 'OPT_msse4_2', 'uchar', 'debug_info_type',
           'gt_ggc_e_7tinfo_s', 'BUILT_IN_EMUTLS_GET_ADDRESS',
           'gt_ggc_e_18tree_template_info', 'diagnostic_info',
           'ALIAS_DIAG_NONE', 'DIAGNOSTICS_SHOW_PREFIX_ONCE',
           '_CS_XBS5_ILP32_OFF32_LINTFLAGS', 'UNSPEC_PFRSQIT1',
           'CPP_EOF', 'BUILT_IN_EH_RETURN_DATA_REGNO', 'key_t',
           'UDQmode', 'X86_TUNE_SSE_PARTIAL_REG_DEPENDENCY',
           'RID_NAMESPACE', 'gt_ggc_e_21gimple_statement_call',
           'ITIMER_VIRTUAL', 'MODE_VECTOR_UFRACT', 'OPT_mabm',
           'COMPARE_L_EXPR', 'ds_unsigned', 'OPT_Wswitch_default',
           'OPT_print_file_name_', 'gt_ggc_e_13ivarref_entry',
           'gt_e_P20indirect_string_node4htab', 'REALIGN_LOAD_EXPR',
           'FUNCTION_DECL', 'gt_ggc_e_15binding_entry_s',
           'OPT_Winvalid_offsetof', 'UNSPEC_INSERTPS', 'sc_static',
           'COND_EXPR', 'STRING_CST', 'gt_ggc_e_17rtx_def_expr_list',
           'gimplify_omp_ctx', 'gt_ggc_e_10rtx_def_ne',
           'gt_ggc_e_20VEC_tree_gc_vec_base', 'sc_mutable',
           'htab_iterator', 'TYPEID_EXPR',
           'gt_ggc_e_17splay_tree_node_s', 'GF_PLF_1', 'GF_PLF_2',
           'MAX_TREE_CODES', 'GIMPLE_BINARY_RHS',
#           'basic_stringstream<char,std::char_traits<char>,std::allocator<char>       >', 
           'itk_unsigned_int128',
#           'basic_ofstream<wchar_t,std::char_traits<wchar_t> >',
           '_SC_DEVICE_SPECIFIC', 'ld_plugin_output_file_type',
           'int_fast64_t', 'REG_ESP',
           'gt_ggc_e_26gimple_statement_eh_filter',
           'gt_ggc_e_16cp_binding_level', 'OPT_Wcharacter_truncation',
           'iostream', 'BUILT_IN_ISLESSEQUAL', 'V4QImode',
           'GIMPLE_OMP_SECTIONS_SWITCH', 'BUILT_IN_CIMAGL',
           'BUILT_IN_CIMAGF', 'OMP_CLAUSE_SCHEDULE_DYNAMIC',
           'CTI_UNDERLYING_WCHAR_TYPE', 'TI_MAX',
           'gt_ggc_e_18tree_decl_with_rtl', 'X86_TUNE_USE_LEAVE',
           'FP_SECOND_REG', 'BUILT_IN_EXPL', 'BUILT_IN_EXPF',
           '_SC_MEMLOCK_RANGE', 'REPORT_SLP',
           'gt_ggc_e_18VEC_eh_region_base', 'gt_ggc_e_10real_value',
           'ld_plugin_tag', '_SC_THREAD_THREADS_MAX',
           '_SC_LOGIN_NAME_MAX', 'PREDECREMENT_EXPR',
           'RID_AT_INTERFACE', 'BUILT_IN_DREM', 'OPT_mglibc',
           'TI_LLACCUM_TYPE', 'BUILT_IN_LLFLOOR', 'OPT_fstrict_enums',
           '__uint8_t', '_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS',
           '__be16', 'OPT_fsaw_java_file', 'gt_ggc_e_11VEC_tree_gc',
           'OPT_funwind_tables', 'VEC_PACK_SAT_EXPR',
           'CPTK_IS_POLYMORPHIC', 'BUILT_IN_EXP2', '_SC_CHILD_MAX',
           'OPT_fnothrow_opt', 'bk_same_type',
           'MAX_MODE_DECIMAL_FLOAT', '__kernel_ipc_pid_t',
           'GIMPLE_PHI', 'ipa_ref', 'CPP_DOT_STAR', 'CPP_AND',
           'TI_UTQ_TYPE', 'VEC_ipa_ref_t_gc', '_SC_SCHAR_MIN',
           'gt_ggc_e_15tree_label_decl', 'CIF_UNSPECIFIED',
           'BUILT_IN_COS', 'GSS_WITH_MEM_OPS', 'GSS_ASM',
           'gt_ggc_e_20VEC_dcall_entry_base', 'TYPE_DECL',
           '_SC_NL_TEXTMAX', 'BUILT_IN_EH_FILTER',
           'ALIAS_DIAG_TO_EXTERN', 'OPT_fmodulo_sched_allow_regmoves',
           'TARGET_CPU_DEFAULT_athlon', 'SI_ASYNCNL',
           'gt_ggc_e_19VEC_method_entry_gc',
           'gt_ggc_e_24VEC_c_goto_bindings_p_gc', 'V2TImode',
           'BUILT_IN_STRCMP', 'bitmap_descriptor', 'OPT_fmax_errors_',
           'UNSPECV_VZEROALL', 'TRUTH_ORIF_EXPR', 'UNSPECV_MONITOR',
           'INDEX_REGS', 'GIMPLE_OMP_SINGLE',
           'BUILT_IN_GOMP_LOOP_ULL_ORDERED_STATIC_START',
           'HARD_REG_SET', '__kernel_old_dev_t', 'int_fast8_t',
           'MIN_MODE_RANDOM', 'ptr_info_def', 'CPP_DEREF_STAR',
           'F_OWNER_PGRP', 'gt_ggc_e_11rtx_def_geu',
           'BUILT_IN_ISFINITE', 'bitmap_obstack', 'N4wait4DOT_22E',
           '_SC_THREAD_PRIORITY_SCHEDULING',
           'OPT_fdisable_assertions', 'OPT_mms_bitfields',
           'WIDEN_MULT_MINUS_EXPR', 'UNSPECV_RDFSBASE',
           'VEC_cgraph_node_ptr_base', '_SC_SYNCHRONIZED_IO',
           'gt_types_enum_last', 'TYPE_EXPR', 'DINFO_USAGE_DFN',
           'BUILT_IN_GOMP_SECTIONS_END_NOWAIT', 'CPP_PLUS',
           'gt_ggc_e_8rtl_data', 'CPP_W_ENDIF_LABELS', 'sigaction',
           'sig_t', 'ld_plugin_symbol_kind',
           '_CS_XBS5_LPBIG_OFFBIG_CFLAGS', 'caddr_t',
           'gt_ggc_e_18comdat_type_struct', 'VEC_LSHIFT_EXPR',
           'const_varpool_node_set_element', 'UNSPEC_MS_TO_SYSV_CALL',
           'cgraph_local_info', 'CM_SMALL_PIC',
           'OPT_felide_constructors', 'OPT_fplan9_extensions',
           '__compar_d_fn_t', 'BUILT_IN_VSNPRINTF',
           'CTI_CONST_STRING_TYPE', 'SQmode', 'tf_no_access_control',
           'BUILT_IN_NANS', 'BUILT_IN_NANF',
           'TARGET_CPU_DEFAULT_prescott', 'BUILT_IN_NANL',
           'OPT_mpclmul', 'UNSPEC_SCAS', 'PRED_DS_THEORY',
           'OPT_Wunused_label',
           'BUILT_IN_GOMP_PARALLEL_LOOP_RUNTIME_START',
           'cp_decl_specifier_seq', 'cgraph_node_set_element_def',
           'RID_ENUM', 'RLIMIT_NOFILE', 'VEC_constructor_elt_base',
           'DELETE_EXPR', 'BUILT_IN_CEXPIF', 'OPT_Wall_deprecation',
           'BUILT_IN_CEXPIL', 'gt_ggc_e_20rtx_def_float_extend',
           'OPT_ftree_pre', 'const_edge', '__mpq_struct',
           'OPT_fipa_struct_reorg', 'UNSPEC_MPSADBW',
           'BUILT_IN_LGAMMA', '_SC_SYSTEM_DATABASE_R',
           'ipa_replace_map_p', 'gt_ggc_e_8edge_def',
           'deferred_access_check', 'REG_GS',
           'gt_ggc_e_11emit_status', 'gt_ggc_e_15VEC_tree_int_gc',
           'GIMPLE_OMP_ORDERED', 'CTI_INT_LEAST32_TYPE', 'GS_ERROR',
           'GSS_EH_CTRL', 'VEC_deferred_access_check_none',
           'CIF_TARGET_OPTION_MISMATCH', 'ssa_op_iter_none',
           'random_data', 'gt_note_pointers', 'P_PGID',
           '_SC_USER_GROUPS_R', 'RID_HAS_VIRTUAL_DESTRUCTOR',
           '_CS_POSIX_V7_LP64_OFF64_LIBS', 'GIMPLE_OMP_FOR',
           'V2QImode', 'MP_RAT', 'OPT_Wpacked',
           'gt_e_SP9tree_node12splay_tree_s', '_SC_2_UPE',
           'varpool_node_set_iterator', 'sk_omp', 'OPT_cpp',
           'BLKmode', 'impl_conv_rhs', 'UNSPECV_CLD',
           'RTLD_DI_TLS_MODID', 'BUILT_IN_INFD128',
           'ix86_arch_indices', 'OPT_Wall_javadoc',
           'CPTI_DELTA_IDENTIFIER', 'gt_ggc_e_5loops', 'RID_INLINE',
           'RID_AT_THROW', 'RID_GETTER', 'gt_ggc_e_10rtx_def_le',
           'CPP_CLOSE_PAREN', 'gt_ggc_e_10rtx_def_lt',
           'BUILT_IN_ADD_AND_FETCH_N',
           'OPT_fsched_stalled_insns_dep_',
           'BUILT_IN_ADD_AND_FETCH_8', 'VEC_basic_block_none',
           'BUILT_IN_ADD_AND_FETCH_1', 'BUILT_IN_ADD_AND_FETCH_2',
#           'basic_fstream<wchar_t,std::char_traits<wchar_t> >',
           'BUILT_IN_ADD_AND_FETCH_4', 'gimple_debug_subcode',
           'gt_e_P21pending_abstract_type4htab', 'BUILT_IN_ISALNUM',
           'gt_ggc_e_11tree_string', 'NOT_TAKEN',
           'OPT_Wsequence_point', 'LDPR_UNKNOWN', 'OMP_CLAUSE_IF',
           '__kernel_key_t', '_SC_SHRT_MAX', 'ba_check',
           'lv_decrement', 'gt_e_P23temp_slot_address_entry4htab',
           '__gid_t', 'CAST_EXPR',
           'gt_e_P20lto_symtab_entry_def4htab', '__daddr_t',
           '__RLIMIT_MEMLOCK', 'var_ann_t', 'insert_option',
           'X86_ARCH_LAST', 'BUILT_IN_VFPRINTF_CHK', 'ht', 'ce_exact',
           'gt_ggc_e_7section', 'UNSPEC_RCP', 'OPT_Wempty_block',
           'TS_TRANSLATION_UNIT_DECL', 'OPT_fsel_sched_pipelining',
           'ds_short', 'tree_decl_non_common', 'GSS_PHI',
           'BUILT_IN_COMPLEX_DIV_MIN', 'RTLD_DL_LINKMAP', 'N_TTYPES',
           'CPTK_IS_UNION', 'TARGET_CPU_DEFAULT_pentiumpro',
           'gt_ggc_e_20rtx_def_asm_operands',
           'BUILT_IN_GOMP_LOOP_ORDERED_DYNAMIC_START', 'XCmode',
           'c_fileinfo', 'VEC_ipa_replace_map_p_none',
           'CPTK_HAS_NOTHROW_CONSTRUCTOR', 'BUILT_IN_CLASSIFY_TYPE',
           'gimple_statement_call', 'stat', 'BUILT_IN_EH_COPY_VALUES',
           'OPT_m8bit_idiv', 'V2HImode', '__RLIMIT_MSGQUEUE',
           'rtx_constant_pool', 'SCOPE_REF',
           'gt_ggc_e_30gimple_statement_with_ops_base',
           'BUILT_IN_LCEILF', 'BUILT_IN_LCEILL',
           '_CS_POSIX_V7_LP64_OFF64_LDFLAGS', 'OPT_fobjc_exceptions',
           'BUILT_IN_FMODL', 'diagnostic_starter_fn',
           'BUILT_IN_FMODF', 'walk_tree_fn',
           'BUILT_IN_BOOL_COMPARE_AND_SWAP_N', 'const_gimple',
           'operator_name_info_t', 'UNSPEC_PCLMUL', 'splay_tree',
           '__FILE', 'gt_ggc_e_20rtx_def_const_double',
           'OPT_fextdirs_', 'BUILT_IN_FDIM',
           'BUILT_IN_BOOL_COMPARE_AND_SWAP_8', 'ds_first',
           'BUILT_IN_BOOL_COMPARE_AND_SWAP_4',
           'BUILT_IN_BOOL_COMPARE_AND_SWAP_2',
           'BUILT_IN_BOOL_COMPARE_AND_SWAP_1', 'BUILT_IN_COPYSIGN',
           'GIMPLE_RESX', 'MIN_MODE_VECTOR_UACCUM', 'uint_fast16_t',
           'N7siginfo4DOT_304DOT_32E', 'TI_UINTHI_TYPE',
           'DINFO_STRUCT_FILE_SYS', 'SIGEV_NONE',
           'gt_ggc_e_17reg_saved_in_data', 'TLS_MODEL_NONE',
           'gimple_seq_node_d', 'TI_SAT_USA_TYPE', 'UNSPECV_MWAIT',
           'ATTR_FLAG_TYPE_IN_PLACE', 'OPT_mmmx',
           'gt_e_P14type_assertion4htab', 'CPP0X_EXPLICIT_CONVERSION',
#           'basic_streambuf<wchar_t,std::char_traits<wchar_t> >',
           '_SC_XOPEN_VERSION', 'MODE_INT',
           'gimple_statement_omp_critical', 'ptrmemfunc_vbit_in_pfn',
           'gt_ggc_e_21ipa_pass_through_data',
           'CPP_TOKEN_FLD_TOKEN_NO', 'mode_class',
           'VEC_ipa_ref_t_base', 'cp_class_binding',
           'walk_namespaces_fn', 'gt_ggc_e_16dw_ranges_struct',
           'output_buffer', 'CPTI_JAVA_BOOLEAN_TYPE',
           'BUILT_IN_GOMP_LOOP_ORDERED_STATIC_START',
           'FLOOR_MOD_EXPR', 'MODE_ACCUM', 'VEC_COND_EXPR',
           'tree_translation_unit_decl', 'FLOAT_INT_REGS',
           'TARGET_CPU_DEFAULT_generic',
           'gt_ggc_e_17module_htab_entry', 'VEC_int_none',
           'X86_TUNE_NOT_VECTORMODE', 'RID_CATCH',
           'X86_TUNE_SSE_UNALIGNED_STORE_OPTIMAL', 'CONST_DECL',
           'OPT_mtbm', 'ba_check_bit', '_PC_PATH_MAX', 'UNSPEC_TPOFF',
           '_SC_VERSION', 'BUILT_IN_CTAN',
           '_SC_THREAD_ROBUST_PRIO_PROTECT', 'RID_MAX', 'off_t',
           'gt_ggc_e_14rtx_def_return', 'TS_CONST_DECL', 'DK_WARNING',
           'BUILT_IN_SIGNBITD128', 'UTAmode', 'answer',
           'OPT_fsel_sched_pipelining_outer_loops',
           'BUILT_IN_GOMP_LOOP_ORDERED_GUIDED_NEXT', 'RID_IMAGINARY',
           'CPTK_IS_CONVERTIBLE_TO', '_SC_TRACE_EVENT_NAME_MAX',
           'TI_PRIVATE', 'pthread_rwlockattr_t',
           'gt_ggc_e_14rtx_def_lo_sum', 'OMP_CLAUSE_LASTPRIVATE',
           'SI_TKILL', 'ELK_INIT', '_SC_DEVICE_IO',
           'gt_ggc_e_25deferred_locations_struct', 'text_info',
           'X86_TUNE_AVOID_VECTOR_DECODE', 'gt_ggc_e_11rtx_def_abs',
           'BB_NON_LOCAL_GOTO_TARGET', 'OPT_Wempty_body',
           'MODE_COMPLEX_FLOAT', 'SCEV_NOT_KNOWN',
           'gt_ggc_e_20tree_decl_non_common', 'cpp_identifier',
           'blkcnt_t', 'TI_QQ_TYPE', 'BUILT_IN_ISINF_SIGN',
           'OPT_mincoming_stack_boundary_', 'SFmode',
           'OPT_mtls_direct_seg_refs', 'REG_ES', 'BUILT_IN_FRONTEND',
           'BUILT_IN_LROUNDF', '__wsum', 'uid_t', 'u_int64_t',
           'GE_EXPR', 'cp_cv_quals', '__itimer_which',
           'DIAGNOSTICS_SHOW_PREFIX_NEVER', 'VEC_char_none',
           'OPT_MMD', 'seh_frame_state', 'CTImode',
           'gt_ggc_e_18VEC_parm_attr_base', '_SC_CPUTIME',
           'OPT_fassert', 'BUILT_IN_MEMCHR', 'TI_UDA_TYPE',
           'bitmap_iterator', 'BUILT_IN_VA_START', 'BUILT_IN_CACOS',
           'OPT_fsched_verbose_', '__RLIMIT_NLIMITS', 'lk_external',
           '_SC_TRACE_EVENT_FILTER', 'BUILT_IN_CTANL',
           'BUILT_IN_CTANH', 'BUILT_IN_CTANF', 'VEC_RSHIFT_EXPR',
           'BUILT_IN_TOUPPER', 'OPT_fnext_runtime', '__rlim64_t',
           'DDmode', 'gt_ggc_e_15unnamed_section',
           'UNSPECV_LWPVAL_INTRINSIC', 'rvc_nan',
           'OPT_fsched2_use_superblocks', 'CCOmode', 'dk_thread',
           'BUILT_IN_FWRITE', 'tf_ignore_bad_quals',
           'OPT_finline_small_functions', 'CM_MEDIUM_PIC',
           'CM_LARGE_PIC', 'gt_ggc_e_14tree_fixed_cst',
           'OPT_fwhole_program', 'LAST_TS_CP_ENUM', 'edge_def',
           'PROTOCOL_INTERFACE_TYPE', 'tsubst_flags_t',
           'gt_ggc_e_20die_arg_entry_struct', 'OPT_fschedule_insns',
           'const_basic_block', 'BUILT_IN_FETCH_AND_NAND_8',
           'BUILT_IN_FETCH_AND_NAND_4', 'machine_mode',
           'BUILT_IN_FETCH_AND_NAND_1', 'BUILT_IN_FETCH_AND_NAND_2',
           'BUILT_IN_ISCNTRL', '_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS',
           'plugin_info', '__kernel_ptrdiff_t', '_SC_2_C_DEV', 'wios',
           '__rusage_who', 'BUILT_IN_FPUTC_UNLOCKED',
           'OPT_falign_functions', 'TI_DOUBLE_PTR_TYPE',
           'GIMPLE_EH_MUST_NOT_THROW', 'CPTI_VTABLE_INDEX_TYPE',
           'BUILT_IN_VSCANF', 'TI_DFLOAT32_PTR_TYPE', 'UNSPEC_REP',
           'OPT_fleading_underscore',
           'gt_e_P18treetreehash_entry4htab', 'OPT_ftree_ter',
           'VEC_uchar_heap', 'tree_priority_map', 'CLK_GNUC1X',
           'RID_ONEWAY', 'OPT_floop_interchange', 'BUILT_IN_ATAN2',
           'CPTK_IS_TRIVIAL', 'OPT_Wtype_hiding',
           'CPTI_BASE_DTOR_IDENTIFIER', 'TI_ULACCUM_TYPE',
           'OPT_ftree_scev_cprop',
           'gt_ggc_e_33gimple_statement_omp_atomic_store',
           'OPT_Wfloat_equal', 'OPT_finhibit_size_directive',
#           'basic_ostream<wchar_t,std::char_traits<wchar_t> >',
           'EV_DIR_DECREASES', 'ATTR_ADDR_EXPR', 'OPT_fpack_struct',
           'TI_TQ_TYPE', 'bk_inaccessible', 'BUILT_IN_STRSPN',
           'BUILT_IN_SINH', 'gcc_options', 'BUILT_IN_SINL',
           'OPT_fpartial_inlining', 'BUILT_IN_SINF',
           'BUILT_IN_UNWIND_INIT', 'OPT_Wvolatile_register_var',
           'OPT_Wunused_but_set_parameter', 'PSEUDO_DTOR_EXPR',
           'OPT_Wunused', 'gt_ggc_e_22VEC_macinfo_entry_base',
           'SImode', 'TI_LFRACT_TYPE', 'BUILT_IN_SNPRINTF',
           'OPT_fenable_assertions', '_SC_ARG_MAX', 'no_stringop',
           'BUILT_IN_GETTEXT', 'OPT_fvisibility_ms_compat',
           'gt_ggc_e_9line_maps', 'RUSAGE_THREAD', 'OPT_mssse3',
           'MESSAGE_SEND_EXPR', 'OPT_masm_',
           'gt_ggc_e_21rtx_def_vec_duplicate',
           'OPT_freduced_reflection', 'MOVE_POSSIBLE',
           'normalized_none', 'clk_none', 'gimple_statement_eh_mnt',
           '__u16', 'tree_field_decl', 'fb_mayfail', 'TI_UFRACT_TYPE',
           'lang_tree_node', 'CPP_COMMA',
           'gt_e_P24types_used_by_vars_entry4htab',
           'simple_bitmap_def', '_SC_SYMLOOP_MAX', 'OPT_coverage',
           'RID_TYPEOF', 'int32_t', 'TI_SAT_USQ_TYPE',
           'gt_ggc_e_12rtx_def_call', 'ds_typedef',
           'BUILT_IN_GOMP_SECTIONS_NEXT', 'OPT_fipa_pta',
           'TI_SAT_FRACT_TYPE', 'CDI_POST_DOMINATORS', 'lang_decl_ns',
           'X86_TUNE_DOUBLE_WITH_ADD', 'AVAIL_LOCAL',
           'gt_ggc_e_17rtx_def_eh_return', 'CPTI_VTABLE_ENTRY_TYPE',
           '_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS', 'LDPS_ERR',
           'walk_use_def_chains_fn', 'VEC_gimple_seq_none',
           'RID_THIS', 'CPTK_HAS_NOTHROW_ASSIGN',
           'OPT_fforward_propagate', 'X86_TUNE_SSE_TYPELESS_STORES',
           'OPT_fassume_compiled', 'cgraph_node_set_def',
           'GMP_ERROR_INVALID_ARGUMENT', 'OPT_ffreestanding',
           'OPT_fpretty_templates',
           'gt_ggc_e_22VEC_ivarref_entry_base', 'OPT_fprofile_dir_',
           'OPT_fpeephole2', 'tls_model', 'BUILT_IN_LABS',
           'OPT_fdump_', '_SC_TZNAME_MAX', 'RID_ALIGNOF',
           'OPT_Wfatal_errors', 'rlim64_t', 'e_kind', 'SYSV_ABI',
           'types_used_by_vars_entry', 'NEED_PHI_STATE_MAYBE',
           'OPT_Wswitch_enum', 'pthread_mutex_t', 'RID_BYREF',
           'gt_e_P15interface_tuple4htab', 'BUILT_IN_JNL',
           'BUILT_IN_JNF', 'BUILT_IN_NAND64', 'OPT_s_bc_abi',
           'OPT_fmerge_all_constants', 'c_lang',
           'gt_e_P7rtx_def4htab', '__timer_t', 'OPT_CC',
           'tree_map_base', 'NULLPTR_TYPE', 'htab_alloc_with_arg',
           'GMP_ERROR_NONE', 'gt_ggc_e_8c_parser', 'ssa_op_iter',
           'CIF_OPTIMIZING_FOR_SIZE', '_SC_V6_ILP32_OFF32',
           'blksize_t', 'TI_INTTI_TYPE', '__kernel_time_t',
           '_SC_PII_XTI', 'composite_pointer_operation',
           'CIF_INLINE_UNIT_GROWTH_LIMIT',
           'gt_e_P22cached_dw_loc_list_def4htab', '_SC_MB_LEN_MAX',
           'gt_ggc_e_21pending_abstract_type',
           'OPT_fira_loop_pressure', 'OPT_fvpt', 'mp_size_t',
           'TI_SAT_TQ_TYPE', 'OPT_fexternal_blas', 'RTLD_DI_MAX',
           '__kernel_caddr_t', 'RID_DOUBLE', 'MODE_RANDOM',
           'RID_BOOL', 'RID_LONG', '_SC_BASE',
           'X86_TUNE_USE_VECTOR_CONVERTS', 'OPT_gxcoff',
           'BUILT_IN_VFSCANF', 'OPT_gno_strict_dwarf',
           '__kernel_clock_t', 'itk_unsigned_int', 'GMP_RAND_ALG_LC',
           'OPT_Wimplicit_procedure', 'RID_IMAGPART',
           'MODE_COMPLEX_INT', 'BUILT_IN_CPOW', 'OPT_Wuninitialized',
           'ptrmemfunc_vbit_where_t', 'UNSPEC_PALIGNR',
           'BUILT_IN_SIGNBITF', 'CPP_DIV', 'const_bitmap',
           'BUILT_IN_SIGNBITL',
           'gt_ggc_e_26rtx_def_debug_implicit_ptr', 'BREG', 'REG_CS',
           'OPT_fdefer_pop', 'ld_plugin_add_input_file', 'OPT_mrdrnd',
           'CGRAPH_STATE_CONSTRUCTION', 'POSTINCREMENT_EXPR',
           'VEC_int_base', 'DINFO_LEVEL_TERSE', 'DImode',
           'BUILT_IN_ISNAND64', 'OPT_Wchar_subscripts',
           'sequence_stack', 'gt_ggc_e_12rtx_def_ungt',
           '_CS_XBS5_LP64_OFF64_LIBS', 'BUILT_IN_LLRINT',
           'N16pthread_rwlock_t4DOT_18E', 'gt_ggc_e_12rtx_def_unge',
           'gt_ggc_e_20VEC_macinfo_entry_gc',
           '_SC_CHARCLASS_NAME_MAX', 'OPT_fbtr_bb_exclusive',
           '_CS_XBS5_ILP32_OFF32_LDFLAGS', '_SC_COLL_WEIGHTS_MAX',
           'EH_SPEC_BLOCK', 'gt_ggc_e_12lang_decl_u2',
           'gt_ggc_e_12lang_decl_u5',
           'gt_ggc_e_22VEC_ipa_edge_args_t_gc',
           'CPTK_HAS_VIRTUAL_DESTRUCTOR', 'UNSPEC_AESKEYGENASSIST',
           'gt_ggc_e_14rtx_def_subreg', 'OMP_CLAUSE_SCHEDULE',
           'built_in_class', 'OPT_Wstrict_aliasing_',
           'REPORT_OUTER_LOOPS', 'CPP_W_VARIADIC_MACROS',
           'internal_fn', 'OPT_Wold_style_definition',
           'OPT_print_multi_lib', 'NTV_MACRO',
           'gt_ggc_e_18tree_target_option', 'BUILT_IN_GAMMAF_R',
           'HAmode', 'ds_constexpr', 'BUILT_IN__EXIT2', 'FPE_INTOVF',
           'OPT_femit_class_files', 'BUILT_IN_CPROJ',
           'gt_ggc_e_14VEC_uchar_base', 'UNSPEC_FSCALE_EXP',
           'lc_reason', 'BUILT_IN_GAMMA',
           'OPT_fkeep_inline_functions', 'CPP_COMPL',
           'RTLD_DI_PROFILENAME', '_SC_TTY_NAME_MAX',
#           'basic_istream<char,std::char_traits<char> >',
           'gt_ggc_e_18VEC_temp_slot_p_gc', 'target_hard_regs',
           'X86_TUNE_PROMOTE_QI_REGS', 'OPT_frecord_gcc_switches',
           'OPT_Wunnecessary_else', 'gt_ggc_e_20VEC_ivarref_entry_gc',
#           'basic_ostream<char,std::char_traits<char> >',
           'OPT_Wdeprecated_declarations', 'sfk_destructor',
           'OPT_fif_conversion2', 'BUILT_IN_GOMP_SINGLE_START',
#           'basic_istringstream<wchar_t,std::char_traits<wchar_t>,std::allocator<wchar_t>
#           >', 
           'BUILT_IN_PUTCHAR_UNLOCKED', 'OPT_Wcast_qual',
           'string', 'OPT_ftree_copy_prop', 'X86_TUNE_MOVE_M1_VIA_OR',
           '_CS_POSIX_V6_LP64_OFF64_LIBS', '_SC_ULONG_MAX',
           'VEC_cgraph_edge_p_heap', 'gt_ggc_e_11cgraph_node',
           'POLYNOMIAL_CHREC', 'target_flag_state',
           'gt_ggc_e_19rtx_def_sign_extend', 'VEC_uchar_base',
           'cgraph_2edge_hook', 'ICR_DEFAULT_ARGUMENT',
           'gt_e_P8tree_map4htab', 'gt_ggc_e_10tree_binfo',
           'TI_SAT_UHQ_TYPE', 'FIXED_POINT_TYPE', 'OPT_Xassembler',
           'ASM_INTEL', 'OPT_ftoplevel_reorder', 'BUILT_IN_LOG1P',
           'INTEGER_TYPE', 'BUILT_IN_LGAMMAL',
           'gimple_statement_bind', 'BUILT_IN_LGAMMAF',
           'OPT_ffilelist_file', 'GIMPLE_TRY', 'CPP_CHAR32',
           'BUILT_IN_LOG10', 'gt_ggc_e_24basic_block_il_dependent',
           's_kind', 'wait', 'X86_TUNE_DOUBLE_PUSH',
           'PLUGIN_PASS_EXECUTION', 'gt_ggc_e_16gfc_powdecl_list',
           'gt_ggc_e_24VEC_cgraph_node_ptr_base', 'BUILT_IN_CBRT',
           'BUILT_IN_RINT', 'reg_class_t',
           'OPT_finstrument_functions_exclude_function_list_',
           'BUILT_IN_CABS', 'CPTK_IS_ABSTRACT', 'TLS_DIALECT_GNU2',
           'OPT_print_multi_directory', 'ARRAY_RANGE_REF',
           'UNSPEC_MOVNTDQA', 'mpz_ptr', 'AD_REGS',
           '_CS_POSIX_V7_ILP32_OFF32_LIBS', '__u32',
           'gt_ggc_e_15rtx_def_clobber',
           'gt_ggc_e_18tree_function_decl',
           'gt_e_P11cgraph_edge4htab', 'CPP0X_INLINE_NAMESPACES',
           'TS_EXP', 'OPT_rdynamic', 'gt_ggc_e_4loop',
           'CPP_TOKEN_FLD_ARG_NO', 'N7siginfo4DOT_304DOT_36E',
           'OPT_dumpspecs', 'FP_CONTRACT_ON', 'no_graph',
           'BUILT_IN_CLOG10F', 'OPT_fbranch_target_load_optimize2',
           'RID_IN', 'pthread_key_t', 'RID_TYPEID', 'OPT_fRTS_',
           'N13cp_declarator4DOT_894DOT_93E', 'V2TFmode',
           'gt_e_P9reg_attrs4htab', 'basic_block', 'CONSTRUCTOR',
           'lang_cplusplus', 'MODE_PARTIAL_INT', 'OPT_fident',
           '__locale_t', 'BUILT_IN_LOCK_RELEASE_1',
           'BUILT_IN_LOCK_RELEASE_2', 'BUILT_IN_LOCK_RELEASE_4',
           'BUILT_IN_LOCK_RELEASE_8', 'UNSPEC_PHMINPOSUW',
           'bk_not_base', 'CPP_COMMENT', 'OPT_fstack_protector_all',
           'OPT_mrtd', 'BUILT_IN_LOCK_RELEASE_N',
           '_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS', 'MAX_MODE_INT',
           'BUILT_IN_MEMSET_CHK', 'OPT_fdirectives_only',
           'char_traits<char>', 'record_type',
           'TARGET_CPU_DEFAULT_i486', 'OPT_fdelayed_branch',
           'cgraph_state', 'bb_flags', 'ARROW_EXPR',
           'OPT_fselective_scheduling', 'OPT_fuse_atomic_builtins',
           'BUILT_IN_FETCH_AND_ADD_16', '__qaddr_t', 'UNSPEC_SET_GOT',
           'TImode', 'V4DImode', 'GSS_OMP_ATOMIC_LOAD',
           'cookie_write_function_t', 'OPT_fsched_rank_heuristic',
           'TLS_MODEL_GLOBAL_DYNAMIC', 'OMP_CRITICAL',
           'OPT_fforce_classes_archive_check', 'NEW_EXPR',
           'IPA_REF_VARPOOL', 'OPT_ffixed_', '_SC_LEVEL1_ICACHE_SIZE',
           'BUILT_IN_GOMP_LOOP_DYNAMIC_START',
           'OPT_Wno_effect_assign', 'BUILT_IN_ISWPUNCT',
           '_SC_BC_BASE_MAX', 'UNSPEC_INDNTPOFF', 'OPT_fpack_struct_',
           'BUILT_IN_XOR_AND_FETCH_N', 'REG_EIP',
           'BUILT_IN_GOMP_TASK', 'gt_ggc_e_11rtx_def_ior',
           'X86_TUNE_INTEGER_DFMODE_MOVES',
           'gt_ggc_e_17tree_decl_minimal', 'walk_stmt_info',
#           'basic_ios<wchar_t,std::char_traits<wchar_t> >',
           'cpp_string', 'CPP_W_TRIGRAPHS', 'OPT_mpc',
           'BUILT_IN_STRNCAT', 'OMP_ORDERED', '_SC_2_FORT_RUN',
           'gt_ggc_e_17VEC_alias_pair_gc', 'V4TFmode',
           'gt_ggc_e_11rtl_bb_info', 'ld_plugin_symbol',
           'RID_LAST_ADDR_SPACE',
           'X86_TUNE_SSE_PACKED_SINGLE_INSN_OPTIMAL', 'RID_FRIEND',
           'BUILT_IN_XOR_AND_FETCH_8', 'BUILT_IN_XOR_AND_FETCH_4',
           'BUILT_IN_FINITE', 'BUILT_IN_XOR_AND_FETCH_2',
           'BUILT_IN_XOR_AND_FETCH_1', 'OPT_ftree_pta',
           'BUILT_IN_LROUNDL', 'X86_ARCH_XADD',
           'WARN_STRICT_OVERFLOW_MISC', 'CPTI_NELTS_IDENTIFIER',
           'OPT_dumpbase', 'CPTI_JAVA_INT_TYPE',
           'gt_ggc_e_11rtx_def_and', '_SC_THREAD_ATTR_STACKADDR',
           'BUILT_IN_SQRTF', 'tree_node_kind', 'BUILT_IN_SQRTL',
           'BUILT_IN_TOWLOWER', 'HT_NO_INSERT', 'tcc_reference',
           '__mbstate_t', 'UNSPEC_TP', 'cpp_num', 'LDPV_INTERNAL',
           'CPP_DOT', 'CTI_CHAR32_ARRAY_TYPE',
           'ADDR_SPACE_CONVERT_EXPR', 'BUILT_IN_STPNCPY',
           'CPTI_COMPLETE_CTOR_IDENTIFIER', 'ICR_INIT',
           'TI_UINTSI_TYPE', 'quad_t', 'UNSPEC_VPERMIL2F128',
           'TI_TARGET_OPTION_DEFAULT', 'V2DImode', 'PROPERTY_DECL',
           'gt_ggc_e_14rtx_def_us_neg', 'gimple_statement_asm',
           'sk_cleanup', 'gt_ggc_e_24VEC_deferred_access_base',
           'UNSPEC_FPREM1_U', 'gt_ggc_e_12rtx_def_uneq',
           'OPT_fthreadsafe_statics', 'gt_ggc_e_12object_block',
           'UNSPEC_FPREM1_F', 'OPT_fira_share_save_slots',
           'gt_ggc_e_18cgraph_global_info', 'gimple_seq_node',
           'gt_ggc_e_17rtx_def_jump_insn', 'MAX_MODE_CC',
           'tsk_expl_inst', 'fb_either', 'gt_ggc_e_12msgref_entry',
           'UNSPECV_STMXCSR', 'BUILT_IN_ISUPPER',
           'GMP_ERROR_DIVISION_BY_ZERO',
           'gt_ggc_e_17tree_priority_map', 'OPT_fd_lines_as_code',
           'SI_MESGQ', 'ld_plugin_add_input_library',
           'OPT_Wline_truncation', 'OPT_Whiding', 'OPT_mbionic',
           'BUILT_IN_TRUNC', 'RID_USING', 'BB_COLD_PARTITION',
           'OPT_mno_sse4', 'intptr_t', 'RLIMIT_FSIZE', 'RID_MUTABLE',
           'OPT_gcoff', 'constr_kind', 'CPP_W_DEPRECATED', 'GSS_BASE',
           'tree_code_class', 'BUILT_IN_XOR_AND_FETCH_16',
           'itimerval', '_SC_THREAD_CPUTIME', 'BB_HOT_PARTITION',
           '_CS_POSIX_V6_ILP32_OFF32_LIBS',
           'basic_fstream<char,std::char_traits<char> >',
           'TARGET_CPU_DEFAULT_corei7', 'CPP_W_MULTICHAR',
           'gt_ggc_e_16VEC_ipa_ref_t_gc', 'RID_HAS_TRIVIAL_ASSIGN',
           'STATIC_CAST_EXPR', 'gf_mask',
           'BUILT_IN_EMUTLS_REGISTER_COMMON',
           'gt_ggc_e_18gnat_binding_level', 'GF_CALL_NOTHROW',
           'OPT_pipe', '__blkcnt_t', 'PRED_POINTER',
           'LDPT_SET_EXTRA_LIBRARY_PATH', 'MIN_MODE_FRACT',
           'UNSPEC_COS', '_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS',
           'ipa_ref_t', 'GS_UNHANDLED', '_PC_PRIO_IO', 'CPP_CHAR16',
           'OPT_Wnls', 'stack_usage', 'OPT_fstack_check_',
           'GSI_NEW_STMT', 'CPP_NOT_EQ',
           'gt_ggc_e_17string_descriptor', 'OPT_Wnoexcept',
           'END_PREDICTORS', 'gt_ggc_e_11rtx_def_ltu',
           'gt_ggc_e_9imp_entry', 'BUILT_IN_FETCH_AND_ADD_4',
           'BUILT_IN_FETCH_AND_ADD_1', 'BUILT_IN_FETCH_AND_ADD_2',
           'BUILT_IN_FETCH_AND_ADD_8', 'stack_local_entry', 'cpp_dir',
           'VEC_EXTRACT_ODD_EXPR', 'TI_SA_TYPE', 'real_value',
           'gt_ggc_e_12ssa_operands', 'CM_MEDIUM',
           'gt_ggc_e_11tree_common', 'NON_Q_REGS', 'stat64',
           'cpp_ttype', 'gt_ggc_e_13binding_level', '_SC_SCHAR_MAX',
           'RID_FALSE', '_SC_THREAD_SAFE_FUNCTIONS',
           'OPT_mno_push_args', 'gt_ggc_e_9tree_type',
           'GIMPLE_TRY_CATCH_IS_CLEANUP', 'gt_ggc_e_5CPool',
           'F_OWNER_TID', 'N13cp_declarator4DOT_894DOT_91E',
           'OPT_fverbose_asm', 'CPTI_NOEXCEPT_FALSE_SPEC',
           'BUILT_IN_FETCH_AND_ADD_N', '_SC_AVPHYS_PAGES',
           'lvalue_use', 'OPT_print_multiarch',
           'CPP_TOKEN_FLD_PRAGMA', 'BUILT_IN_FINITED64', 'TREE_BINFO',
           'VEC_tree_base', 'OPT_ftree_forwprop', 'OPT_Wcast_align',
           'ios_base', 'size_t', 'USQmode',
           'OMP_CLAUSE_SCHEDULE_GUIDED', 'RID_CONTINUE',
           'TI_OPTIMIZATION_CURRENT', 'BUILT_IN_LOG10F',
           'CPP0X_INITIALIZER_LISTS', 'BUILT_IN_LOG10L',
           '_SC_IOV_MAX', 'ifstream',
           'BUILT_IN_GOMP_LOOP_ULL_DYNAMIC_NEXT',
           'TLS_MODEL_EMULATED', 'gt_ggc_e_11tinst_level',
           'RID_SIGNED', 'CPP_RSHIFT_EQ', 'lv_asm', 'PRIO_USER',
           'RID_DELETE', 'N_OPTS', 'MIN_MODE_FLOAT',
           'UNARY_PLUS_EXPR', 'gt_ggc_e_9temp_slot', 'CQImode',
           'BUILT_IN_SCALBLNF', 'OPT_freplace_objc_classes',
           'cookie_io_functions_t', 'BUILT_IN_ISWALNUM',
           'cgraph_2edge_hook_list', '_SC_LINE_MAX',
           'CIF_LARGE_STACK_FRAME_GROWTH_LIMIT', 'TI_PTR_TYPE',
           'XFmode', 'gt_ggc_e_13ipa_jump_func',
           'gt_ggc_e_16rtx_def_ashiftrt', 'CPLD_COPY', 'MEM_REF',
           'gt_ggc_e_9tree_list', 'CTI_UINT64_TYPE',
           'OPT_fipa_pure_const', 'RID_AT_ALIAS',
           'gt_e_P9type_hash4htab', 'BUILT_IN_CIMAG',
           'ipa_replace_map', 'vect_verbosity_levels', 'SAVE_EXPR',
           'VEC_call_site_record_none', 'gt_ggc_e_16tree_type_symtab',
           'gt_ggc_e_18rtx_def_debug_expr', 'cgraph_clone_info',
           '_SC_JOB_CONTROL', 'UNSPEC_CAST', 'IRA_ALGORITHM_CB',
           'htab_t', 'OPT_Wunused_but_set_variable', 'uintptr_t',
           '_PC_SYMLINK_MAX', 'gt_ggc_e_8cp_token', 'UNSPEC_IEEE_MIN',
           '_SC_XOPEN_REALTIME', 'MOVE_PRESERVE_EXECUTION',
           'gt_ggc_e_25qualified_typedef_usage_s',
           'OPT_fvect_cost_model', 'OPT_falign_jumps',
           '_SC_2_PBS_ACCOUNTING', 'OPT_Wsuggest_attribute_noreturn',
           'itk_signed_char', 'TYPE_ARGUMENT_PACK',
           'BUILT_IN_NEARBYINTL', 'RID_DEFAULT',
           'gt_ggc_e_21VEC_incomplete_var_gc', 'BUILT_IN_Y0L',
           'BUILT_IN_Y0F',
#           'basic_stringbuf<char,std::char_traits<char>,std::allocator<char>
#           >', 
           'OPT_gtoggle', 'OMP_CLAUSE_PRIVATE',
           'BUILT_IN_GOMP_LOOP_STATIC_START', 'BUILT_IN_LLCEIL',
           'UNSPEC_FRNDINT_TRUNC', 'CPP_AND_AND', 'fb_none',
           'BUILT_IN_STRCAT_CHK', 'BUILT_IN_SINCOSL',
           'LAST_AND_UNUSED_GIMPLE_CODE', 'BUILT_IN_SINCOSF',
           'TS_STATEMENT_LIST', 'htab_hash', 'ARRAY_TYPE',
           '_SC_INT_MAX', '_4DOT_75', 'CTI_UINT_FAST16_TYPE',
           'BUILT_IN_GOMP_BARRIER', 'ds_virtual',
           'TARGET_CPU_DEFAULT_amdfam10',
           'gt_ggc_e_17ssa_use_operand_d', 'UNSPEC_CRC32',
           'UNSPEC_MOVU', 'OPT_funroll_loops', 'cpp_callbacks',
           '_CS_LFS64_LINTFLAGS', 'MODE_VECTOR_ACCUM', 'TI_SIZE_TYPE',
           'gt_ggc_e_15lang_type_class', 'RID_BYCOPY',
           'gt_ggc_e_34VEC_cp_unparsed_functions_entry_gc',
           'BUILT_IN_FORK', 'cp_trait_kind',
           'X86_TUNE_DEEP_BRANCH_PREDICTION', 'CTI_UINT_LEAST16_TYPE',
           'const_rtx', 'END_BUILTINS', 'gt_ggc_e_16cp_label_binding',
           'TI_ULFRACT_TYPE', 'GIMPLE_DEBUG_BIND', '_SC_INT_MIN',
           'c_language_kind', 'OPT_static_libstdc__',
           'UNSPEC_XOP_TRUEFALSE', 'OPT_fsign_zero',
           'cl_target_option', 'OPT_femit_struct_debug_baseonly',
           '_ISxdigit', 'gt_ggc_e_19gimple_omp_for_iter',
           'gt_ggc_e_20operator_name_info_t', 'BITMAP_WORD',
           'OPT_fira_verbose_', 'const_call_expr_arg_iterator_d',
           'gt_ggc_e_25dw_ranges_by_label_struct', 'fpos_t',
           'gt_ggc_e_17named_label_entry', 'OPT_print_prog_name_',
           'BUILT_IN_CABSF', '__mode_t', 'ba_ignore_scope',
           'BUILT_IN_SCALBNL', 'BUILT_IN_ISNORMAL', 'HT_ALLOC',
           'TI_SAT_LACCUM_TYPE', 'dk_deferred', 'OPT_Wparentheses',
           'CPTI_AGGR_TAG', 'INIT_EXPR', 'OPT_fcheck_references',
           'ADDR_EXPR', 'BB_DUPLICATED', 'CTI_TRUTHVALUE_FALSE',
           'PRED_NORETURN', 'LC_ENTER', 'gt_ggc_e_9cp_parser',
           'STATIC_ASSERT', 'GIMPLE_SWITCH',
           'OMP_CLAUSE_SCHEDULE_AUTO', 'sk_class',
           '_CS_POSIX_V6_LPBIG_OFFBIG_LIBS',
           'OPT_Wtraditional_conversion', 'VEC_cgraph_node_set_base',
           'OPT_falign_labels_', 'TI_UDQ_TYPE',
           'GF_OMP_RETURN_NOWAIT', '_CS_XBS5_ILP32_OFFBIG_LIBS',
           'OPT_fmath_errno', 'OPT_Wold_style_declaration',
           'OPT_mbmi', 'BUILT_IN_COMPLEX_DIV_MAX', 'RID_AT_OPTIONAL',
           'gt_ggc_e_17rtx_def_unordered', 'GIMPLE_BIND',
           'CLK_GNUCXX0X', 'wistringstream', 'GSS_OMP_SECTIONS',
           'BT_TIME', 'ICV_STATEMENT', '_SC_SPAWN',
           'OPT_fsched_spec_load', '_CS_POSIX_V6_ILP32_OFF32_LDFLAGS',
           'OPT_fbuiltin', 'PLUGIN_PRE_GENERICIZE',
           'OPT_frequire_return_statement', 'RID_DFLOAT128',
           'UNSPECV_LOCK', 'OPT_Ofast', 'BUILT_IN_LCEIL',
           'LDPK_WEAKDEF', 'TI_SIZE_ONE', 'BUILT_IN_CALLOC',
           'CPP_COLON', '_SC_AIO_PRIO_DELTA_MAX',
           'gt_ggc_e_11cpool_entry', 'mpf_ptr', 'BUILT_IN_FDIML',
           'addr_space_t', 'TS_CONSTRUCTOR', 'BUILT_IN_FDIMF',
           'WARN_STRICT_OVERFLOW_MAGNITUDE', 'BUILT_IN_MODF',
           'OMP_CLAUSE_ORDERED', 'gt_ggc_e_17rtx_def_call_insn',
           'CPP_UTF8STRING', 'lang_type_header', 'const_tree',
           'CPP_GREATER_EQ', 'GSS_OMP',
#           'basic_iostream<wchar_t,std::char_traits<wchar_t> >',
           'itk_unsigned_long',
           'gt_ggc_e_34VEC_qualified_typedef_usage_t_base',
           'BUILT_IN_LGAMMAL_R', 'OFFSET_TYPE',
           'gt_ggc_e_20function_subsections',
           'BUILT_IN_ADD_AND_FETCH_16',
           'OPT_fzero_initialized_in_bss',
           'BUILT_IN_GOMP_LOOP_ORDERED_STATIC_NEXT', 'htab_eq',
           'X86_TUNE_USE_CLTD', 'gimple_p', 'BUILT_IN_EXPM1',
           'BUILT_IN_POWI', 'BUILT_IN_POWL', '_SC_2_PBS_CHECKPOINT',
           'BUILT_IN_POWF', 'gt_ggc_e_15cl_optimization',
           'BUILT_IN_LDEXPF', 'BUILT_IN_LDEXPL', 'wfilebuf',
           'OPT_ftree_lrs', 'FMA_EXPR', '_sch_iscppsp',
           'BUILT_IN_AND_AND_FETCH_N', 'gt_ggc_e_16noswitch_section',
           'UNSPEC_PFRCP', 'gt_ggc_e_19VEC_dw_attr_node_gc',
           'CPP_XOR', 'OPT_fimplicit_templates',
           'OPT_Wbuiltin_macro_redefined', 'lang_decl_u',
           'CTI_UINT_LEAST8_TYPE', '_SC_V7_ILP32_OFF32',
           'CPTI_COMPLETE_DTOR_IDENTIFIER', 'BUILT_IN_MEMMOVE_CHK',
           'gt_ggc_e_11tree_vector', 'SIGEV_THREAD_ID',
           'VEC_temp_slot_p_none', 'BUILT_IN_TOWUPPER',
           'CPP_W_DOLLARS', 'N7siginfo4DOT_304DOT_34E',
           'OPT_fstack_usage', 'OPT_Werror', 'PROCESSOR_COREI7_64',
           'BUILT_IN_PRINTF_CHK', 'tree_complex', 'itimerspec',
           'cdk_reference', 'gt_ggc_e_9type_hash', 'ref_operator',
           'OPT_aux_info', 'OPT_Wunsuffixed_float_constants',
           '_fpx_sw_bytes', '_SC_REALTIME_SIGNALS', 'STMT_EXPR',
           'OPT_funsigned_char', 'VEC_PACK_FIX_TRUNC_EXPR',
           'OPT_fobjc_sjlj_exceptions', 'OPT_fmax_subrecord_length_',
           'TS_CP_BINDING', 'OPT_fconserve_stack', '_CS_LFS_CFLAGS',
           'RID_AT_PACKAGE', 'gt_ggc_e_18call_site_record_d',
           '__blkcnt64_t', '_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS',
           'tree_niter_desc', 'OPT_frange_check',
           '_SC_LEVEL1_DCACHE_ASSOC', 'mode_t',
           'RID_HAS_TRIVIAL_CONSTRUCTOR',
           'BUILT_IN_GOMP_CRITICAL_START', 'OPT_mregparm_',
           'V8DFmode', 'BUILT_IN_STRNCMP',
           'gt_ggc_e_18lto_file_decl_data', 'CPTI_VTBL_PTR_TYPE',
           'OPT_fsection_anchors', 'lk_internal', 'frame_space',
           'OPT_fintrinsic_modules_path',
#           'basic_ifstream<wchar_t,std::char_traits<wchar_t> >',
           'DFmode', 'CIF_FUNCTION_NOT_INLINE_CANDIDATE',
           'COMPONENT_REF', 'OPT_flto_partition_1to1',
           'GMP_ERROR_UNSUPPORTED_ARGUMENT', 'sfk_base_destructor',
           'gt_ggc_e_16ident_data_tuple', 'TREE_VEC', 'RID_NONATOMIC',
           'TI_VA_LIST_FPR_COUNTER_FIELD',
           'OPT_foptimize_sibling_calls', 'OPT_iwithprefix',
           'MAX_MODE_UACCUM', 'OPT_mavx',
           'gt_ggc_e_19rtx_def_post_modify', 'BUILT_IN_FINITED128',
           'cp_lvalue_kind', 'V4SFmode', 'V8SImode', 'tree_baselink',
           'VEC_varpool_node_set_heap', 'BIT_XOR_EXPR',
           'VEC_gimple_p_heap', 'OPT_fira_algorithm_', 'CPP_LESS',
           'OPT_gnat', '_SC_XOPEN_UNIX', 'MODE_UACCUM',
           'plugin_event', 'OPT_fbranch_probabilities',
           'IDENTIFIER_NODE', 'CGRAPH_STATE_FINISHED', 'RLIMIT_CPU',
           'BUILT_IN_SCALBL', 'BUILT_IN_SCALBN', 'BUILT_IN_SCALBF',
           'TEMPLATE_PARM_INDEX', '_SC_NL_SETMAX',
           'OPT_fstack_protector', 'RID_DFLOAT64', 'BUILT_IN_MEMCPY',
           'GIMPLE_OMP_CONTINUE', 'SIREG', 'CGRAPH_STATE_IPA_SSA',
           'GSS_WCE', 'OPT_ffpe_trap_', 'PRED_OPCODE_NONEQUAL',
           'BUILT_IN_FABSF', 'TI_SAT_TA_TYPE', 'OPT_time_',
           'gt_ggc_e_17rtx_def_const_int', 'BUILT_IN_FABSL',
           'PRED_NEGATIVE_RETURN', 'BUILT_IN_ERFF', 'BUILT_IN_ERFC',
           'machine_function', 'INTEGER_CST', 'BUILT_IN_ERFL',
           'gt_ggc_e_19rtx_def_us_truncate', 'drand48_data',
           'V8DImode', 'gt_ggc_e_11rtx_def_fix', 'OPT_Wmultichar',
           'UNSPEC_FRCZ', 'cxx98', 'OPT_version', 'TI_SAT_UDA_TYPE',
           'PLUGIN_FINISH_TYPE', '__io_write_fn', 'ASM_EXPR',
           'stack_check_type', 'RID_HAS_TRIVIAL_COPY', 'RO_ARROW',
           'clk_bitfield', 'UNSPEC_GOT', 'OPT_mcx16', 'lang_decl_u2',
           'lang_decl_u5', 'saved_scope', 'uint32_t',
           'BUILT_IN_TGAMMAF', 'gt_ggc_e_9lang_type', 'suseconds_t',
           'target_cpu_default', 'BUILT_IN_ISWXDIGIT',
           'BUILT_IN_EXECVP', 'LDPT_LINKER_OUTPUT', 'FIELD_DECL',
           'sk_template_parms', 'RID_IS_POLYMORPHIC',
           'gt_ggc_e_15tree_field_decl', 'BUILT_IN_EXECVE',
           'BUILT_IN_SIGNBITD32', 'OPT_trigraphs', 'BUILT_IN_PARITYL',
           'UNSPEC_BEXTR', 'OPT_Wselector', 'OPT_mhard_float',
           'BUILT_IN_INFD32', 'BUILT_IN_J1', 'OPT__version',
           'ce_normal', 'PROCESSOR_NOCONA', 'UNSPEC_GOTOFF',
           'control_flow_graph', 'IRA_REGION_ALL', 'UNSPECV_RDTSC',
           'UNSPEC_STACK_CHECK', 'OPT_fconvert_big_endian',
           'ILL_ILLOPN', 'ILL_ILLOPC', 'OPT_fprofile_use_',
           '__kernel_suseconds_t', 'rlimit64', 'intmax_t',
           'VEC_edge_base', 'gt_ggc_e_9mem_attrs', 'OPT_fpeel_loops',
           'OPT_Wundef', 'OPT_fdump_noaddr', 'CPP_XOR_EQ',
           'basic_iostream<char,std::char_traits<char> >',
           'tcc_expression', 'PRED_CONST_RETURN', 'BUILT_IN_VSPRINTF',
           'BUILT_IN_TANHF', 'gt_ggc_e_9opt_stack',
           'OPT_Warray_bounds', 'CTI_WIDEST_INT_LIT_TYPE',
           'OPT_finstrument_functions', 'gt_ggc_e_14type_assertion',
           'X86_TUNE_USE_BT', 'gimple_statement_eh_ctrl', 'ptrdiff_t',
           'OPT_ftree_loop_im', 'bk_proper_base', 'BUILT_IN_YN',
           'PLUGIN_ALL_IPA_PASSES_START', 'VEC_varpool_node_ptr_gc',
           'TLS_MODEL_REAL', 'OPT_msse4a', 'OPT_Wa_',
           '_SC_2_PBS_TRACK', 'gmp_randstate_t', 'DIREG',
           '_IO_cookie_file', 'constructor_elt_d',
           'ld_plugin_set_extra_library_path', 'OPT_mstack_arg_probe',
           'SIGEV_SIGNAL', 'int8_t', 'OPT_Wsync_nand', 'BUILT_IN_YNF',
           'OPT_ffinite_math_only', 'BUILT_IN_YNL',
           'BUILT_IN_SCALBLNL', '__kernel_fsid_t',
           'warn_strict_overflow_code', 'MAX_MODE_VECTOR_INT',
           'BUILT_IN_Y1', 'BUILT_IN_Y0', 'EXIT_STMT', 'ITIMER_REAL',
           'OPT_c', 'OFFSETOF_EXPR', 'gimple_stmt_iterator',
           'ev_direction', 'MODE_FLOAT', 'gt_ggc_e_10rtx_def_gt',
           'VEC_ipa_ref_ptr_base', 'gt_ggc_e_11rtx_def_fma',
           'gt_ggc_e_13libfunc_entry', 'mpq_t', 'cp_id_kind',
           'PRED_TREE_EARLY_RETURN',
           'gt_ggc_e_22gfc_st_parameter_field', 'OPT_u',
           'UNSPEC_FXAM_MEM', 'gt_ggc_e_12rtx_def_sqrt',
           'OPT_imultiarch', 'gt_ggc_e_12tree_int_map', 'REG_ECX',
           'TI_LONG_DOUBLE_TYPE', 'OPT_p', 'BUILT_IN_SIGNIFICANDL',
           '_CS_V7_WIDTH_RESTRICTED_ENVS', 'BUILT_IN_VA_ARG_PACK',
           'gt_ggc_e_11eh_status_u', '__rlimit_resource_t',
           'OPT_Wconstructor_name', 'BUILT_IN_CATANL',
           'UNSPEC_GOTPCREL', 'istream', 'LD_PLUGIN_API_VERSION',
           'TS_CP_STATIC_ASSERT', 'clk_c', '__le64',
           'OPT_Wpointer_to_int_cast', 'MAX_MODE_FRACT',
           'gt_ggc_e_20VEC_vcall_entry_base',
           'CPP0X_DEFAULTED_DELETED', 'OPT_A', 'cppchar_signed_t',
           'BUILT_IN_INIT_TRAMPOLINE', 'gt_ggc_e_13tree_baselink',
           'CM_KERNEL', 'gt_ggc_e_27VEC_deferred_locations_base',
           'SS_DISABLE', '_SC_CHAR_MIN', 'OPT_findirect_inlining',
           'gt_ggc_e_19rtx_def_const_fixed', '__RLIMIT_RTPRIO',
           'UNSPEC_SP_TLS_TEST', 'ucontext_t',
           'BUILT_IN_RETURN_ADDRESS', 'id_t', 'CGRAPH_STATE_IPA',
           'CLK_STDC89', 'ILL_ILLADR', 'GF_ASM_VOLATILE', 'base_kind',
           '_ISblank', 'processor_type',
           'TARGET_CPU_DEFAULT_pentium_m', 'N11cpp_options4DOT_77E',
           'gt_ggc_e_14rtx_def_us_div', 'emit_status', 'RID_AT_CATCH',
           'gt_ggc_e_9eh_status', 'UNSPEC_PCMP', 'TRUTH_XOR_EXPR',
           '_SC_FILE_LOCKING', 'OPT_fms_extensions', 'OPT_frtti',
#           'basic_string<char,std::char_traits<char>,std::allocator<char>           >', 
           'BUILT_IN_GOMP_SINGLE_COPY_START',
           'gt_e_P24constant_descriptor_tree4htab',
           'BUILT_IN_NEARBYINT', 'BUILT_IN_ERFCL', '__fsblkcnt64_t',
           'RID_LAST_PATTR', 'V2SFmode', 'cgraph_2node_hook',
           'BUILT_IN_BCMP', 'GOTO_EXPR', '_SC_NPROCESSORS_ONLN',
           'mpf_t', 'BUILT_IN_NEXTTOWARD', 'PROCESSOR_CORE2_64',
           'OPT_Wtraditional', 'BUILT_IN_PROFILE_FUNC_ENTER',
           'x_kind', 'OPT_Winline', 'BUILT_IN_ISINFD128',
           'RID_AT_FINALLY', 'SLOT_CW_TRUNC', 'OPT_Wnormalized_',
           'WIDEN_MULT_PLUS_EXPR', 'TS_BLOCK', 'OPT_fbacktrace',
           'VEC_UNPACK_FLOAT_HI_EXPR', 'gt_ggc_e_12ptr_info_def',
           'I387_TRUNC', 'UNSPEC_ADD_CARRY', 'BUILT_IN_LFLOORL',
           'OPT_falign_loops', 'OPT_fipa_cp_clone',
           'TI_INTEGER_MINUS_ONE', 'ssa_operand_iterator_d',
           'BUILT_IN_LFLOORF', 'ssize_t', 'fallback',
           'VEC_cgraph_node_ptr_heap',
           'gt_ggc_e_25VEC_cp_label_binding_base', 'SDB_DEBUG',
           'TS_FIELD_DECL', 'OPT_Wextra',
           'gt_ggc_e_19VEC_const_char_p_gc',
           'LDPT_REGISTER_ALL_SYMBOLS_READ_HOOK', 'REPORT_COST',
           'OPT_falign_jumps_', 'PRED_NO_PREDICTION', 'RID_BREAK',
           'RID_ASM', 'rvc_zero', 'CPP_CLOSE_SQUARE',
           'gt_ggc_e_14edge_def_insns', 'GMP_ERROR_SQRT_OF_NEGATIVE',
           'SAmode', 'OPT_Winit_self',
#           'basic_istream<wchar_t,std::char_traits<wchar_t> >',
           'CPP_OR_OR', 'VEC_UNPACK_HI_EXPR',
           'OPT_Wimplicit_interface', 'LDPR_PREEMPTED_IR',
           'gt_ggc_e_8tree_vec', 'gt_ggc_e_14rtx_def_unspec',
           'gt_ggc_e_15rtx_def_concatn', 'OPT_flto_',
           'LAST_AND_UNUSED_TREE_CODE', 'X86_TUNE_PARTIAL_REG_STALL',
           'gt_e_P12varpool_node4htab', 'RID_INT', 'binding_table',
           'RETURN_EXPR', 'OPT_fwhole_file', '__gnuc_va_list',
           'RID_AT_SELECTOR', 'edge_def_insns', 'UQQmode', 'OImode',
           'TI_USFRACT_TYPE', 'streamsize', 'OPT_fgnu_runtime',
           'OPT_freorder_functions', 'tree_argument_pack_select',
           'tree_block', 'CTI_UINT_LEAST32_TYPE',
           'OPT_fdump_unnumbered_links', '__u_char',
           'BUILT_IN_SYNCHRONIZE', '__caddr_t', 'KEYWORD_DECL',
           '_SC_MQ_OPEN_MAX', 'BB_NONTHREADABLE_BLOCK',
           'gt_ggc_e_9cpp_token', '_SC_TRACE_SYS_MAX',
           'MODE_DECIMAL_FLOAT', 'pex_time', 'OPT_Wstrict_prototypes',
           'SIZETYPE', 'NON_DEPENDENT_EXPR', 'cgraph_edge',
           'OPT_ftree_loop_if_convert', '_libc_fpstate',
           'OPT_Wcomment', 'OFFSET_REF', 'LDPK_COMMON',
           '_sch_isxdigit', 'gt_e_P17named_label_entry4htab',
           '__kernel_gid16_t', 'gt_ggc_e_24gimple_statement_omp_for',
           'OPT_ftabstop_', 'ix86_args',
           'gimple_statement_omp_atomic_load', 'wstreambuf',
           'gt_ggc_e_17rtx_def_asm_input', 'gt_ggc_e_10VEC_rtx_gc',
           'GSS_OMP_SINGLE', 'UNSPEC_VCVTPS2PH',
           'OPT_mlarge_data_threshold_', 'OPT____', 'htab',
           'OMP_ATOMIC', 'OPT_Wsuggest_attribute_const',
           'AT_ENCODE_EXPR', 'BUILT_IN_ISXDIGIT', 'sk_catch',
           'BUILT_IN_ISINFD32', 'TI_DFLOAT64_PTR_TYPE',
           'gt_ggc_e_20rtx_def_if_then_else', 'lang_type_ptrmem',
           '_SC_PIPE', '_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS',
           'gimple_statement_catch', '_fpstate', '_cpp_file',
           'CPTI_DTOR_IDENTIFIER', 'OPT_funsafe_math_optimizations',
           'REG_EAX', 'OPT_mavx256_split_unaligned_store',
           'location_t', 'LDPR_RESOLVED_EXEC', 'EQ_EXPR',
           'splay_tree_foreach_fn', 'SS_ONSTACK', 'UNSPEC_FPREM_F',
           'UNSPEC_FPREM_U', 'PRED_TREE_OPCODE_POSITIVE',
           'OPT_Wlocal_hiding', 'RID_RETAIN',
           'OPT_Wsuggest_attribute_pure', 'MIN_MODE_UACCUM',
           'TI_COMPLEX_LONG_DOUBLE_TYPE', 'NTV_ARGUMENT',
           'TRY_CATCH_EXPR', 'gt_ggc_e_11rtx_def_not',
           'OPT_fobjc_call_cxx_cdtors', 'TQmode', '_SC_USHRT_MAX',
           'clockid_t', 'RID_RESTRICT', 'OPT_findirect_dispatch',
           'CPTI_STD_IDENTIFIER', 'OPT_finline_limit_',
           'gt_ggc_e_14lang_decl_func', 'gt_e_P13scev_info_str4htab',
           'OPT_findirect_classes', 'UNSPECV_VZEROUPPER',
           'gt_e_P13libfunc_entry4htab', 'OPT_fpch_deps',
           'gt_ggc_e_10spec_entry', 'TI_USQ_TYPE', 'RO_NULL',
           'TI_DFLOAT128_TYPE', 'FPE_FLTINV',
           'gt_ggc_e_19rtx_def_zero_extend', 'OPT_Werror_', 'QQmode',
           'BUILT_IN_CONJL', '__dev_t', 'OMP_CLAUSE_SCHEDULE_RUNTIME',
           'BUILT_IN_CONJF', 'BUILT_IN_NEARBYINTF', 'CTI_INT64_TYPE',
           'RID_FIRST_PQ', 'TI_SFRACT_TYPE', 'cxx_int_tree_map',
           'BUILT_IN_HUGE_VAL', 'MODOP_EXPR',
           'gt_ggc_e_29gimple_statement_omp_critical', 'BUS_ADRALN',
           'TS_COMPLEX', 'OPT_fstack_limit_register_', 'CCZmode',
           'gt_ggc_e_11rtx_def_ctz', '_CS_POSIX_V7_LPBIG_OFFBIG_LIBS',
           'ios', 'UNGE_EXPR', 'CTI_UINTMAX_TYPE', 'fb_lvalue',
           'DOM_NO_FAST_QUERY', 'OPT_fassume_compiled_',
           'gimple_rhs_class', 'gt_ggc_e_17cp_parser_context',
           '_SC_2_C_VERSION', 'reg_class', 'OPT_imacros',
           'gt_ggc_e_17cgraph_local_info', 'cpp_comment_table',
           'OPT_Wold_style_cast', 'UNSPEC_VTESTP',
           'UNSPEC_STACK_ALLOC', 'OPT_ffixed_form',
           'gt_ggc_e_16cxx_int_tree_map', '__ino64_t',
           'gt_ggc_e_11VEC_edge_gc',
           'gt_ggc_e_20rtx_def_sign_extract', 'mp_limb_signed_t',
           'pp_before', 'TI_SAT_SQ_TYPE',
           'gt_ggc_e_28varpool_node_set_element_def', 'MIN_MODE_INT',
           'htab_free_with_arg', '_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS',
           'PAREN_EXPR', '__io_close_fn', 'NONTYPE_ARGUMENT_PACK',
           'tms', 'TI_INTQI_TYPE', 'OPT_Wunused_result',
           '_SC_TYPED_MEMORY_OBJECTS', '_CS_XBS5_LP64_OFF64_LDFLAGS',
           'OPT_ftree_builtin_call_dce', 'BUILT_IN_FLOOR',
           'OPT_Wserial', 'TAmode', '__kernel_gid_t',
           'OPT_Wdeprecated', 'gt_ggc_e_10tree_block',
           'uint_least64_t', 'OPT_Wformat_extra_args',
           'BUILT_IN_PUTS_UNLOCKED', 'V32QImode',
           'gt_ggc_e_13tree_real_cst', 'GS_OK', 'OPT_Wdep_ann',
           'EV_DIR_UNKNOWN', 'cppchar_t', 'tls_dialect', 'CPP_DIV_EQ',
           'LDPO_DYN', 'PREINCREMENT_EXPR',
           'gt_ggc_e_18VEC_tree_pair_s_gc', 'OPT_finit_logical_',
           'record_layout_info_s', 'OPT_gen_decls', 'RID_LAST_PQ',
           'BUILT_IN_GOMP_PARALLEL_END', 'OPT_Wstack_protector',
           'PRED_MUDFLAP', 'TARGET_CPU_DEFAULT_atom',
           'gt_ggc_e_12rtx_def_ltgt', 'ba_any', 'OPT_fprofile',
           'gt_e_P10die_struct4htab', 'int64_t', 'CPTI_JCLASS',
           'sbitmap_iterator', 'gt_ggc_e_16tree_constructor',
           'gt_ggc_e_14VEC_tinfo_s_gc', 'OPT_mno_fancy_math_387',
           'PROFILE_ABSENT', 'OPT_fweak',
           'gt_ggc_e_21VEC_pending_weak_base', 'var_ann_d', 'tf_none',
           'OPT_Wignored_qualifiers', 'MAX_MODE_VECTOR_UACCUM',
           'TI_SAT_ULLFRACT_TYPE', 'OPT_finput_charset_', 'MULT_EXPR',
           'CPP_DL_WARNING_SYSHDR', 'BUILT_IN_RINTL', 'OPT_mfma4',
           'OPT_frepack_arrays', '_G_int32_t', 'OPT_shared_libgcc',
           'OMP_CLAUSE_DEFAULT', 'OPT_flto_partition_none',
           'RID_PRETTY_FUNCTION_NAME', 'ATTR_FLAG_BUILT_IN',
           'PROCESSOR_PENTIUM', 'gt_ggc_e_17gimple_seq_node_d',
           'RID_THROW', 'BUILT_IN_FROB_RETURN_ADDR',
           'gt_ggc_e_8line_map', 'BUILT_IN_GOMP_SECTIONS_START',
           'VEC_gimple_seq_base', '__kernel_daddr_t',
           'CTOR_INITIALIZER', 'PLUGIN_REGISTER_GGC_CACHES',
           'UNSPEC_SP_TEST', 'VEC_INTERLEAVE_HIGH_EXPR',
           'VEC_edge_var_map_heap', 'NT_VOID', 'DECLTYPE_TYPE',
           '_CS_POSIX_V6_LP64_OFF64_LINTFLAGS',
#           'basic_ostringstream<char,std::char_traits<char>,std::allocator<char>
#           >', 
           'OMP_SECTIONS', 'constant_descriptor_tree',
           'VEC_edge_gc', 'BUILT_IN_PUTCHAR', 'BUILT_IN_CONSTANT_P',
           'CPP_PASTE', 'union_type', 'vec_swallow_trailing_semi',
           'gt_ggc_e_12ipa_ref_list', 'OPT_fconstexpr_depth_',
           'gt_ggc_e_9elab_info', 'CTI_MAX', 'OPT_save_temps',
           '_SC_REGEXP', 'DEDUCE_CALL', '__locale_data',
           'lang_type_class', 'gt_e_P10vcall_insn4htab', 'pthread_t',
           '_SC_POLL', 'gt_ggc_e_24tree_optimization_option',
           'ds_friend', 'VEC_ipa_ref_ptr_none',
           'OPT_Wconversion_null', 'ao_ref', 'OPT_fsource_', 'DOM_OK',
           'incoming_args', 'TARGET_CPU_DEFAULT_pentium2',
           'TARGET_CPU_DEFAULT_pentium3',
           'TARGET_CPU_DEFAULT_pentium4', 'id_kind', 'UNSPEC_FXAM',
           'UNSPEC_IEEE_MAX', 'MIN_MODE_VECTOR_FRACT',
           '__kernel_loff_t', 'PROCESSOR_GEODE', 'ROUND_MOD_EXPR',
           'MIN_MODE_VECTOR_FLOAT', 'pp_after', '_IO_FILE', 'CIF_OK',
           '_sch_isdigit', 'VEC_ipa_opt_pass_heap', 'LE_EXPR',
           'RID_OUT', '__fsblkcnt_t', 'RID_AT_DYNAMIC',
           'BUILT_IN_ABORT', 'gt_ggc_e_11rtx_def_reg',
#           'basic_ofstream<char,std::char_traits<char> >', 
           'rvc_inf',
           'ssa_name_kind', 'UNSPEC_FRNDINT_CEIL',
           'gt_ggc_e_25VEC_cp_class_binding_base', 'GSS_CALL',
           'CPP_DL_FATAL', 'gt_ggc_e_16lang_type_ptrmem',
           'BUILT_IN_OMP_GET_NUM_THREADS',
           'gt_ggc_e_20ssa_operand_memory_d', 'BUILT_IN_STRCSPN',
           'OPT_fobjc_nilcheck', 'BUILT_IN_FINITEL', 'OPT_Os',
           '_SC_SELECT', 'printer_fn', 'BUILT_IN_FINITEF',
           '__kernel_pid_t', 'PROFILE_READ',
           'OPT_fsel_sched_reschedule_pipelined', 'BUILT_IN_FFS',
           'GIMPLE_TRY_KIND', 'ld_plugin_register_all_symbols_read',
           'gt_ggc_e_18rtx_def_vec_select', 'RID_STRUCT',
           'OPT_iplugindir_', 'CTI_VOID_ZERO', 'OPT_Wshadow',
           'FLOAT_REGS', 'OPT_fmudflapir', 'OMP_TASK',
           'TRANSLATION_UNIT_DECL', '_CS_V5_WIDTH_RESTRICTED_ENVS',
           '_SC_FSYNC', 'tree_static_assert', 'sigevent',
           'BUILT_IN_ROUNDF', 'CPP_OBJC_STRING',
           'function_args_iterator', 'TI_SAT_LLACCUM_TYPE',
           'gt_ggc_e_9tree_node', 'OPT_gxcoff_', 'div_t',
           'CPTK_IS_LITERAL_TYPE', 'TI_BOOLEAN_FALSE', 'BUILT_IN_NAN',
           'PRED_TREE_FPOPCODE', 'OPT_frounding_math',
           'gt_ggc_e_19tree_statement_list',
           'gt_ggc_e_16tree_lambda_expr', 'ipa_ref_ptr_u',
           '_SC_TIMERS', 'OPT_mabi_', 'aggr_init_expr_arg_iterator_d',
           'OPT_fcoarray_', 'UNGT_EXPR', '__blksize_t',
           'UNSPEC_MASKLOAD', 'BUILT_IN_ISNAND128',
           'gt_ggc_e_21VEC_dw_attr_node_base', 'AREG',
           'gt_ggc_e_19VEC_msgref_entry_gc', 'TS_DECL_COMMON',
           'OPT_Wformat_y2k', 'TLS_MODEL_INITIAL_EXEC',
           'CPTI_UNKNOWN_TYPE', 'ba_unique',
           'OPT_Wpkg_default_method', 'ds_explicit',
           'OPT_fpost_ipa_mem_report', 'TI_PTRDIFF_TYPE',
           'OPT_flax_vector_conversions', 'BUILT_IN_ISWBLANK',
           'OPT_fkeep_static_consts', 'PLUGIN_ALL_IPA_PASSES_END',
           'gt_ggc_e_26eh_region_u_must_not_throw',
           'PLUGIN_GGC_MARKING', 'IPA_REF_CGRAPH', 'lang_identifier',
           'ALIAS_DIAG_TO_UNDEF', 'MAX_MODE_RANDOM',
           'CPP_TOKEN_FLD_STR', 'edge_var_map', 'UNSPECV_CMPXCHG',
           'plugin_gcc_version', 'OMP_CLAUSE_COPYIN',
           'X86_TUNE_USE_MOV0', 'OPT_fmudflapth', 'FP_CONTRACT_OFF',
           'gt_ggc_e_13dw_val_struct', 'RID_AT_END', 'OPT__help_',
           'LDPV_HIDDEN', 'OPT_Ttext_', 'streamoff', 'OPT_Waliasing',
           '__key_t', 'dev_t', 'ce_derived', '_SC_LEVEL4_CACHE_SIZE',
           'VEC_cp_class_binding_none',
           'BUILT_IN_GOMP_LOOP_ULL_ORDERED_GUIDED_START',
           'OPT_fhash_synchronization', 'OPT_pg',
           'gt_ggc_e_28VEC_deferred_access_check_gc', 'availability',
           'BUILT_IN_CASINHL', 'BUILT_IN_CASINHF',
           'ATTR_FLAG_DECL_NEXT', 'CPP_W_NUM_SIGN_CHANGE',
           '__kernel_mode_t', 'OPT_std_f95', 'tcc_binary', 'ht_cb',
           'gt_ggc_e_18rtx_def_pre_modify', 'BUILT_IN_NEXTAFTERF',
           'hard_reg_set_iterator', 'CTI_UINT_FAST8_TYPE', '__fsid_t',
           'BUILT_IN_RETURN', 'tree_real_cst',
           'WARN_STRICT_OVERFLOW_COMPARISON', 'BUILT_IN_LGAMMAF_R',
           'ipa_opt_pass', 'OPT_Wunqualified_field', 'varpool_node',
           '__priority_which', 'tree_string', 'OPT_fweb',
           'VEC_WIDEN_MULT_LO_EXPR', 'CPP_OPEN_PAREN',
           'splay_tree_node',
           'BUILT_IN_GOMP_LOOP_ULL_ORDERED_DYNAMIC_NEXT', 'cpp_macro',
           'BUILT_IN_ADJUST_TRAMPOLINE', 'gt_e_II17splay_tree_node_s',
           'tree_decl_minimal', 'OPT__output_pch_', 'off64_t',
           'def_operand_p', 'LDPT_API_VERSION', 'CPP_PADDING',
           'CPTI_ABI', 'OPT_fdump_core', 'BB_SUPERBLOCK', 'ASM_ATT',
           'CPP_OPEN_SQUARE', 'pp_padding', '_SC_LEVEL1_ICACHE_ASSOC',
           '_CS_POSIX_V7_LP64_OFF64_CFLAGS', 'RID_PROTECTED',
           'OPT_freschedule_modulo_scheduled_loops',
           'TI_TARGET_OPTION_CURRENT', 'BUILT_IN_ISINFD64',
           'OPT_fdbg_cnt_', 'I387_CEIL', 'deps', 'VEC_int_heap',
           'bitmap_head',
           'gt_ggc_e_37gimple_statement_with_memory_ops_base',
           'OPT_std_gnu__98', 'RID_ADDR_SPACE_9', 'RID_ADDR_SPACE_8',
           'RID_ADDR_SPACE_3', 'RID_ADDR_SPACE_2', 'RID_ADDR_SPACE_1',
           'RID_ADDR_SPACE_0', 'RID_ADDR_SPACE_7', 'RID_ADDR_SPACE_6',
           'RID_ADDR_SPACE_5', 'RID_ADDR_SPACE_4', 'INSERT',
           'COMPLEX_TYPE', 'OPT_std_c__0x', 'INSTANCE_METHOD_DECL',
           '_IO_marker', 'UNSPEC_FRNDINT_MASK_PM',
           'OPT_ffunction_cse', 'binding_table_s',
           'OPT_fimplicit_none', 'cp_parameter_declarator',
           'OPT_falign_commons', '_IO_lock_t',
           'gimple_statement_with_memory_ops_base', 'RUSAGE_SELF',
           'OPT_Tbss', 'ld_plugin_get_symbols', 'pp_wrapping_mode_t',
           'X86_TUNE_MOVX', 'cgraph_node_hook',
           'OPT_fcx_limited_range',
           'gt_ggc_e_23VEC_ltrans_partition_gc', 'CPP_MACRO_ARG',
           '_SC_LEVEL4_CACHE_ASSOC', 'BUILT_IN_CCOS',
           'OPT_ffunction_sections', '_CS_XBS5_ILP32_OFFBIG_CFLAGS',
           'ds_thread', 'BUILT_IN_CABSL', 'OPT_MM', 'SI_KERNEL',
           'int_least32_t', 'OPT_MG', 'OPT_MF', 'OPT_MD',
           'TS_CP_TRAIT_EXPR', 'OPT_MQ', 'OPT_MP', 'rtl_eh',
           'OPT_dumpdir', 'OPT_MT', '_SC_TRACE',
           'OPT_fcompare_debug_', 'GF_CALL_VA_ARG_PACK',
           'ix86_stack_slot', 'OPT_mmovbe', 'BUILT_IN_FMAXF',
           'BUILT_IN_FMAXL', 'UNSPECV_LDMXCSR', 'OPT_fcall_used_',
           'CLK_CXX98', 'OPT_fdefault_double_8',
           'LDPT_RELEASE_INPUT_FILE', 'TS_TARGET_OPTION',
           'OPT_Wc___compat', 'BUILT_IN_OR_AND_FETCH_16',
           '__codecvt_result', 'OPT_Wunused_import', 'sigevent_t',
           '__RLIMIT_NPROC', 'BUILT_IN_INFF', 'BUILT_IN_INFL',
           'cpp_options', 'unspec', 'OPT_cpp_',
           'CIF_MAX_INLINE_INSNS_SINGLE_LIMIT', 'tree_map',
           'CPP_W_UNDEF', 'CCNOmode', 'gimple_try_flags',
           'BUILT_IN_ISSPACE', 'BOOLEAN_TYPE', '__kernel_old_gid_t',
           'OPT_ftree_loop_distribute_patterns',
           'OPT_Wintrinsic_shadow', 'COMPARE_EXPR', 'TI_SAT_UDQ_TYPE',
           'BUILT_IN_DWARF_CFA', 'OPT_mcld',
           'VEC_cp_label_binding_none', 'TI_DFLOAT32_TYPE',
           'ostringstream', 'OPT_fgraphite_identity',
           'PRED_NULL_RETURN', 'tree_decl_common', 'BUILT_IN_BCOPY',
           'TDmode', 'gt_ggc_e_12var_loc_node',
           'gt_ggc_e_32gimple_statement_omp_atomic_load',
           'F_OWNER_PID', 'BUILT_IN_ISWUPPER', '_IScntrl',
           'all_kinds', '_libc_fpreg', 'gt_ggc_e_14cpp_identifier',
           'TS_DECL_MINIMAL', 'GF_OMP_SECTION_LAST',
           'BUILT_IN_EXPM1L', 'BUILT_IN_EXPM1F',
           'OPT_ftree_loop_optimize', 'TYPE_PACK_EXPANSION',
           'CPP_OR_EQ', 'OPT_Wcondition_assign',
           '_SC_SYSTEM_DATABASE', 'VEC_cgraph_node_set_none',
           'GTC_MERGE', 'RO_IMPLICIT_CONVERSION',
           'gt_ggc_e_16rtx_def_rotatert', 'X86_ARCH_BSWAP',
           'gt_ggc_e_15tree_const_decl', 'RID_TEMPLATE',
           'gt_ggc_e_14sequence_stack', 'OPT_fprofile_generate',
           'RDIV_EXPR', 'BUILT_IN_INIT_DWARF_REG_SIZES', '__sum16',
           'tsk_template', 'VEC_EXTRACT_EVEN_EXPR', 'MEMBER_REF',
           'mp_exp_t', 'sfk_none', 'gt_ggc_e_17mem_addr_template',
           '__time_t', 'gt_e_II12splay_tree_s', 'OPT_Wintrinsics_std',
           'GS_ALL_DONE', 'CPP_TOKEN_FLD_NODE', 'GIMPLE_ASM',
           'pthread_rwlock_t', 'ILL_PRVOPC', 'LDPV_PROTECTED',
           'TI_SIZE_ZERO', 'OPT_Wintf_annotation', 'BUILT_IN_SETJMP',
           'gt_ggc_e_14section_common', 'cgraph_inline_failed_t',
           'clk_rvalueref', 'gt_ggc_e_15cgraph_asm_node',
           'splay_tree_allocate_fn', 'BUILT_IN_CTZLL',
           '_SC_SS_REPL_MAX', 'OPT_malign_double', 'OPT_m3dnowa',
           'BUILT_IN_VAL_COMPARE_AND_SWAP_16', 'DAmode',
           'PRIO_PROCESS', 'OPT_floop_strip_mine',
           'MODE_VECTOR_UACCUM', 'PRED_LOOP_ITERATIONS',
           'BUILT_IN_FABS', 'VEC_temp_slot_p_base', 'CPP_STRING32',
           'BB_NEW', 
#'basic_streambuf<char,std::char_traits<char> >',
           'gt_ggc_e_18VEC_ipa_ref_t_base', 'tag_scope',
           'tree_vector', 'gt_ggc_e_24VEC_cxx_saved_binding_gc',
           'VEC_qualified_typedef_usage_t_base', 'allocator<char>',
           '__off_t', 'BUILT_IN_ALLOCA', 'gt_ggc_e_10alias_pair',
           'VEC_ipa_ref_ptr_heap', 'UNSPEC_AESDEC', 'tsk_expl_spec',
           'BUILT_IN_STRNCPY', 'gt_ggc_e_19dw_line_info_struct',
           'I387_MASK_PM', 'CPTI_ATEXIT_FN_PTR_TYPE',
           'gt_ggc_e_25VEC_ltrans_partition_base',
           'BUILT_IN_UNREACHABLE', '_PC_REC_MIN_XFER_SIZE',
           'ENUMERAL_TYPE', 'OPT_falign_labels', 'excess_precision',
           'NO_STACK_CHECK', 'gt_ggc_e_16dw_val_die_union',
           'duration_kind', 'gt_ggc_e_11parm_attr_d',
           'UNSPEC_COPYSIGN', 'CPP_AT_NAME',
           'X86_TUNE_READ_MODIFY_WRITE', 'FUNCTION_TYPE',
           'VEC_DELETE_EXPR', 'TI_COMPLEX_FLOAT_TYPE',
           '_SC_THREAD_PRIO_INHERIT', 'UNSPEC_AESENCLAST',
           'OPT_fschedule_insns2', 'REINTERPRET_CAST_EXPR',
           'OPT_print_multi_os_directory', 'OPT_SPECIAL_ignore',
           'RID_FUNCTION_NAME', 'SIGEV_THREAD',
           'gt_ggc_e_13dw_vec_struct', 'BUILT_IN_NANSF',
           'BUILT_IN_NANSL', 'IPA_REF_LOAD', 'LDPL_WARNING',
           'DK_FATAL', 'edge_list', 'BUILT_IN_COMPLEX_MUL_MIN',
           'OMP_CLAUSE', 'N22__gmp_randstate_struct4DOT_68E',
           'LOOP_STMT', 'BUILT_IN_STRNCASECMP', 'FILE',
           'BUILT_IN_MEMMOVE', 'DCmode',
           'OPT_finline_functions_called_once', 'PROFILE_GUESSED',
           'VEC_tree_heap', 'BUILT_IN_APPLY_ARGS', 'rtl_data',
           'UNSPEC_FSCALE_FRACT', '_SC_MEMORY_PROTECTION',
           'tree_base', 'BUILT_IN_FETCH_AND_NAND_16',
           'OPT_fprofile_use', 'UNSPECV_PROBE_STACK_RANGE',
           'wofstream', 'OPT_fprofile_correction',
           'BUILT_IN_LLROUNDF', 'normalized_identifier_C',
           '_SC_SPIN_LOCKS', 'BUILT_IN_LLROUNDL', 'gimple_seq_d',
           'TS_FIXED_CST', 'call_expr_arg_iterator_d',
           'gt_ggc_e_11rtx_def_neg', 'sigset_t',
           'OPT_m96bit_long_double',
           'gt_ggc_e_27VEC_cp_default_arg_entry_gc', 'OMP_FOR',
           '_ISalnum', 'REG_SS', 'OPT_static_libgo',
           'BUILT_IN_VPRINTF', 'PLUGIN_NEW_PASS', '_SC_XOPEN_STREAMS',
           'BUILT_IN_RINDEX', 'DOTSTAR_EXPR', 'ipa_ref_list',
           '_SC_XBS5_ILP32_OFFBIG', 'scope_kind', 'cpp_hashnode',
           '_SC_CHAR_MAX', 'u_int32_t',
           'gt_ggc_e_17alias_set_entry_d', 'STATEMENT_LIST',
           'gt_ggc_e_13tree_var_decl', 'OPT_msoft_float',
           'REPORT_NONE', 'BUILT_IN_SIGNIFICAND', 'constructor_elt',
           'BUILT_IN_ISLOWER', 'OPT_foptimize_register_move',
           'OPT_mno_red_zone', 'CPTI_VTT_PARM_IDENTIFIER',
           'OPT_print_sysroot_headers_suffix', 'OPT_ftree_sra',
           'BUILT_IN_GAMMAL', 'BUILT_IN_EXIT', 'OPT_Wendif_labels',
           'BUILT_IN_GAMMAF', 'UNSPEC_LDDQU', 'OPT_Wmain',
           '_SC_SEM_VALUE_MAX', 'TI_UHQ_TYPE', 'OPT__param',
           'RID_LABEL', 'UNSPEC_FLDCW', 'RID_ADDR_SPACE_10',
           'CPP_MULT_EQ', 'pthread_cond_t', 'UNSPECV_LLWP_INTRINSIC',
           'V1SImode', 'gt_ggc_e_14cp_token_cache',
           'CPTI_NULLPTR_TYPE', 'tsk_excessive_parms',
           'OPT_fenable_assertions_', 'nlink_t',
           'PLUGIN_EARLY_GIMPLE_PASSES_START', 'TI_NULL_POINTER',
           'BUILT_IN_GAMMAL_R', 'OPT_fbounds_check', 'BUILT_IN_PUTS',
           'CPLD_REFERENCE', 'OPT_Wundeclared_selector',
           'BUILT_IN_PUTC', 'cgraph_edge_hook', 'BUILT_IN_ATANHL',
           'BUILT_IN_CLOGF', 'CIF_LARGE_FUNCTION_GROWTH_LIMIT',
           'BUILT_IN_CLOGL', 'BUILT_IN_ATANHF', 'MAX_MACHINE_MODE',
           'OPT_mforce_drap', 'BUILT_IN_COSHF', 'BUILT_IN_COSHL',
           'fsfilcnt_t', '__swblk_t', 'BUILT_IN_FPRINTF_UNLOCKED',
           'machine_frame_state', 'UNSPEC_ROUND', 'gimple_bb_info',
           'BUILT_IN_ISNANF', 'OPT_fshort_double', 'BUILT_IN_LRINTF',
           'chunk_info', 'BUILT_IN_ISNANL', 'BUILT_IN_LRINTL',
           'UNSPEC_PCMPISTR', 'OPT_Wtrampolines', 'siginfo',
           'ssa_op_iter_tree', 'BUILT_IN_POWIF',
           'gt_ggc_e_11heapvar_map', 'BUILT_IN_POWIL',
           'BUILT_IN_DGETTEXT', 'GIMPLE_INVALID_RHS', '_SC_2_SW_DEV',
           'special_function_kind', 'Q_REGS', 'RID_REALPART',
           'UI_SJLJ', 'gt_ggc_e_10rtx_def_pc', 'RID_CONSTEXPR',
           'OPT_Wstrict_overflow_', 'BUILT_IN_LLCEILF', 'htab_del',
           'comparison_fn_t', 'BUILT_IN_LLCEILL', 'IMAGPART_EXPR',
           'gt_ggc_e_27cgraph_node_set_element_def', 'mbstate_t',
           'UNSPEC_PTEST', 'BUILT_IN_EXECLP', 'OPT_Wsurprising',
           'gimple_statement_omp_single', 'BUILT_IN_VA_ARG_PACK_LEN',
           'GIMPLE_RETURN', 'gimple_code', 'BUILT_IN_EXECLE',
           'TI_UACCUM_TYPE', 'walk_stmt_fn', 'FP_TOP_REG',
           'BUILT_IN_CLZLL', 'DK_ANACHRONISM',
           'OPT_m128bit_long_double', 'GIMPLE_OMP_SECTIONS',
           'CPP_HEADER_NAME', 'GF_CALL_INTERNAL', 'GSS_EH_MNT',
           'TS_OPTIMIZATION', 'RID_VA_ARG', 'gt_ggc_e_7ipa_ref',
           '_ISgraph', 'CPTK_HAS_TRIVIAL_DESTRUCTOR',
           'OPT_fsched_group_heuristic', '_ISalpha',
           'gt_ggc_e_12cpp_hashnode', 'OPT_fdollar_ok',
           'BUILT_IN_POW10', 'ipa_ref_type', 'SLOT_VIRTUAL',
           'gimple_statement_with_memory_ops', 'CLASS_INTERFACE_TYPE',
           'CPP_STRING16', 'CPTI_GLOBAL_DELETE_FNDECL', 'calling_abi',
           'cp_token_cache', 'GIMPLE_PREDICT', 'time_t',
           'CPTK_HAS_TRIVIAL_COPY', 'OPT_malign_stringops',
           'typename_type', 'fsblkcnt64_t', 'OPT_fipa_reference',
           'CPLD_NONE', 'cgraph_node_ptr', 'OPT_Winvalid_pch',
           '_CS_PATH', 'TI_INTHI_TYPE', 'OPT_fdump_parse_tree',
           'UNSPEC_FPATAN', 'BUILT_IN_CATANHF', '_SC_PHYS_PAGES',
           'OPT_fsecond_underscore', 'BUILT_IN_CATANHL',
           'cxx_saved_binding', 'RID_CHAR16', 'lldiv_t', '__int64_t',
           'gt_ggc_e_20initial_value_struct', 'BUILT_IN_EXP2L',
           'OPT_floop_flatten', 'BUILT_IN_EXP2F', 'OPT_fstack_limit',
           'BUILT_IN_FFSL', 'BUILT_IN_LROUND', 'CTI_INTMAX_TYPE',
           'tree_binfo', 'gt_ggc_e_15rtx_def_address',
           'gt_ggc_e_9loop_exit', 'OPT_maes', '__u_short',
           'CPTI_INIT_LIST_TYPE', 'gt_ggc_e_15ipa_replace_map',
           'LC_RENAME_VERBATIM', 'OPT_fipa_profile', 'UNSPEC_SAHF',
           'CPP_MINUS', 'OPT_fimplement_inlines', 'OPT_fzero_link',
           'tree_decl_with_vis', 'OPT_fwide_exec_charset_', 'BT_STDC',
           'BUILT_IN_ATAN2L', 'OPT__sysroot_', 'BUILT_IN_ATAN2F',
           'TI_SAT_ACCUM_TYPE', 'tcc_comparison', 'UNSPEC_PFRSQRT',
           'gt_ggc_e_13rtx_def_bswap', 'CTI_INT_LEAST8_TYPE',
           'gt_ggc_e_12block_symbol', 'CGRAPH_STATE_EXPANSION',
           'OPT_fmudflap', '_SC_PII_OSI', 'cpp_cb', 'BUILT_IN_TRUNCL',
           'UNSPEC_PARITY', 'BUILT_IN_ACOS', 'OPT_ftree_cselim',
           'BUILT_IN_TRUNCF', 'BUILT_IN_ATAN', 'OPT_fsched_pressure',
           'OPT_fasm', 'BUILT_IN_GOMP_LOOP_GUIDED_START',
           'gt_ggc_e_11rtx_def_div', 'gt_e_P17tree_priority_map4htab',
           'MIN_MODE_COMPLEX_INT', 'OPT_fbranch_target_load_optimize',
           'TI_TA_TYPE', 'IRA_ALGORITHM_PRIORITY', 'cdk_pointer',
           'UNSPEC_TLS_GD', 'TI_CONST_PTR_TYPE',
           'REPORT_BAD_FORM_LOOPS', 'RID_TYPES_COMPATIBLE_P',
           'rusage', 'BUILT_IN_ISWCNTRL', '_SC_ADVISORY_INFO',
           'UNSPEC_SINCOS_SIN',
           'gt_ggc_e_26VEC_cxx_saved_binding_base',
           'gt_ggc_e_20VEC_pubname_entry_gc', 'MAX_MODE_ACCUM',
           'UNSPEC_XOP_PERMUTE', 'CPTI_STD', 'CLK_GNUC89', 'OPT_Qy',
           'CONTINUE_STMT', 'GIMPLE_NOP', 'cpp_reader', 'OPT_Qn',
           'OPT_ftree_reassoc', 'TI_ERROR_MARK', '_PC_PIPE_BUF',
           'EXCESS_PRECISION_DEFAULT', 'PLUGIN_FINISH',
           'gt_ggc_e_11rtx_def_clz', 'r_kind',
           'tree_node_structure_enum', 'OPT_imultilib',
           'gt_ggc_e_20lto_symtab_entry_def', 'OPT_freorder_blocks',
           'ld_plugin_message', 'VIEW_CONVERT_EXPR',
           '_SC_REGEX_VERSION', 'BUILT_IN_REMAINDERF',
           'BUILT_IN_REMAINDERL', 'NO_SPECIAL', 'BUILT_IN_J1L',
           'tf_user', 'BUILT_IN_J1F', 'VEC_deferred_access_check_gc',
           'diagnostic_classification_change_t',
           'TARGET_CPU_DEFAULT_geode', 'enum_type',
           'OPT_ffixed_line_length_none', 'ALL_REGS',
           'GIMPLE_OMP_MASTER', 'istringstream',
           'gt_ggc_e_18VEC_basic_block_gc', 'u_short', 'TI_PROTECTED',
           'OPT_mavx256_split_unaligned_load', 'UNSPEC_PLTOFF',
           'uint8_t', 'walk_tree_lh', 'built_in_function',
           'BUILT_IN_GOMP_LOOP_ULL_STATIC_NEXT',
           'PLUGIN_ALL_PASSES_START', 'gt_ggc_e_11rtx_def_use',
           'TS_VAR_DECL', 'GSS_OMP_TASK', 'POINTER_PLUS_EXPR',
           'OPT_gdwarf_', 'gt_ggc_e_25VEC_varpool_node_ptr_base',
           'MMX_REGS', 'IFN_STORE_LANES', 'OPT_mcrc32',
           'X86_TUNE_SINGLE_STRINGOP',
           'OPT_Wdeclaration_after_statement',
           'X86_TUNE_PROLOGUE_USING_MOVE', 'IX86_FPCMP_ARITH',
           'CPP_FIRST_DIGRAPH', '__uint64_t', 'RID_CASE',
           'gt_e_P9loop_exit4htab', 'CPP_MINUS_EQ',
           'OPT_foptimize_static_class_initialization',
           'VISIBILITY_DEFAULT', 'BUILT_IN_STACK_SAVE',
           '_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS', 'VEC_alias_pair_base',
           'PRIO_PGRP', 'MOVE_IMPOSSIBLE', 'OPT_Wtabs',
           'gt_ggc_e_13ipa_edge_args', 'sk_namespace',
           'TI_ACCUM_TYPE', 'VEC_rtx_none', 'OPT_MMD_',
           'RROTATE_EXPR', 'OPT_momit_leaf_frame_pointer',
           'cpp_token_fld_kind', 'VISIBILITY_PROTECTED',
           'rep_prefix_8_byte', 'GIMPLE_TRY_FINALLY', 'METHOD_TYPE',
           'LIM_REG_CLASSES', 'X86_TUNE_SHIFT1',
           'omp_clause_schedule_kind',
           'OPT_fimplicit_inline_templates', 'OPT_Wnonnull',
           'NTV_NONE', 'VEC_edge_var_map_none', 'BUILT_IN_CTZL',
           'varpool_node_set_element_def', 'lang_java',
           'DINFO_STRUCT_FILE_ANY', 'gt_e_P9tree_node4htab',
           'splay_tree_compare_fn', 'gt_ggc_e_14method_entry_d',
           'DEDUCE_EXACT', 'OPT_fsched_spec_load_dangerous',
           '__fsfilcnt64_t', 'varasm_status',
           'PLUGIN_EARLY_GIMPLE_PASSES_END', '__io_read_fn',
           'CTI_UINT8_TYPE', 'tree_statement_list', 'ptrmem_cst',
           'RID_FRACT', 'CPP_QUERY', 'X86_TUNE_EXT_80387_CONSTANTS',
           'ld_plugin_release_input_file', 'REG_ERR',
           'gt_ggc_e_16rtx_def_post_dec', 'RID_THREAD',
           '_CS_XBS5_LP64_OFF64_CFLAGS', 'RID_REINTCAST',
           'OPT_std_legacy', '_SC_THREAD_PRIO_PROTECT',
           'OMP_CLAUSE_SCHEDULE_STATIC', 'TYPEOF_TYPE',
           '__pthread_internal_slist', 'Dl_serpath',
           'gt_ggc_e_11cpp_token_u', '_ISspace', '__clock_t',
           'LDPK_UNDEF', 'fsblkcnt_t', 'CPP_WSTRING',
           '_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS', 'GSS_BIND',
           'X86_TUNE_INTER_UNIT_MOVES', 'CPTI_DELTA_TYPE',
           'BUILT_IN_LOCK_TEST_AND_SET_16', 'gimple_predicate',
           'RTLD_DI_SERINFOSIZE', 'gt_ggc_e_15queued_reg_save',
           'gt_ggc_e_11expr_status', 'BUILT_IN_FLOORL',
           'OPT_ftree_fre', 'BUILT_IN_FLOORF', '_SC_XOPEN_SHM',
           'fpos64_t', 'ATTR_FLAG_FUNCTION_NEXT', 'RID_CHAR32',
           '_sch_isalnum', '_SC_SEM_NSEMS_MAX', 'OPT_Wunused_local',
           'gt_ggc_e_27gimple_statement_omp_single',
           'OPT_fconstant_string_class_', 'OPT_fmain_', 'OPT_Wnull',
           'OPT_Wchar_concat', 'CPTK_IS_CLASS',
           'BUILT_IN_OR_AND_FETCH_1', 'BUILT_IN_OR_AND_FETCH_4',
           'RID_STATCAST', 'NOP_EXPR', 'loops', 'FP_CONTRACT_FAST',
           'BUILT_IN_SNPRINTF_CHK', 'CPTI_DSO_HANDLE', 'UNEQ_EXPR',
           'OPT_fcheck_data_deps', 'V2SImode',
           'gt_ggc_e_24VEC_ipa_replace_map_p_gc', 'OPT_ftree_vrp',
           'OPT_Wmasked_catch_block', 'OPT_fmodule_private',
           '_SC_NL_NMAX', 'SWITCH_STMT', 'RID_READONLY',
           'real_value_class', 'OPT_ftarget_', 'OEP_PURE_SAME',
           '__kernel_uid_t', 'gt_ggc_e_13tree_overload',
           'BOUND_TEMPLATE_TEMPLATE_PARM', 'SI_USER',
           'RID_IS_TRIVIAL', 'LDPR_PREVAILING_DEF_IRONLY',
           'TI_SAT_SA_TYPE', 'pthread_spinlock_t', 'use_optype_d',
           'gt_ggc_e_20gimple_statement_omp',
           'TS_CP_ARGUMENT_PACK_SELECT', 'ipa_ref_ptr',
           'OPT_fbackslash', 'OPT_Woverloaded_virtual',
           'UNSPEC_FIX_NOTRUNC', 'OPT_fsched_interblock',
           '_SC_V6_LP64_OFF64', 'tsk_invalid_expl_inst',
           'OPT_Wwarning_token', 'OMP_CLAUSE_ERROR',
           'tree_trait_expr', 'gt_ggc_e_11lang_decl_u',
           'OPT_Wunused_parameter',
           'BUILT_IN_GOMP_PARALLEL_LOOP_GUIDED_START',
           'LDPT_GNU_LD_VERSION', 'OPT_fsched_last_insn_heuristic',
           'lk_none', 'CPP0X_VARIADIC_TEMPLATES',
           'MAX_386_STACK_LOCALS', 'gt_ggc_e_17cgraph_clone_info',
           'IFN_LAST', 'BUILT_IN_PROFILE_FUNC_EXIT',
           'gt_ggc_e_20rtx_def_var_location', 'CPTI_VPTR_IDENTIFIER',
           'TI_CURRENT_OPTIMIZE_PRAGMA', 'mpf_srcptr',
           '_SC_TIMER_MAX', 'UNSPEC_AESENC', 'RID_RETURN',
           'OPT_Wboxing', 'TI_SAT_UTA_TYPE', 'CTI_INT_LEAST64_TYPE',
           'DEPS_SYSTEM', 'GIMPLE_ERROR_MARK',
           'VEC_cgraph_node_ptr_none', 'OPT_fenforce_eh_specs',
           'CPP_LAST_CPP_OP', 'RID_SHORT',
           'gt_ggc_e_15bitmap_head_def', 'RID_UNSIGNED', 'UDAmode',
           'gt_ggc_e_26tree_translation_unit_decl', 'tree_identifier',
           'gt_ggc_e_11rtx_def_mem', '_SC_C_LANG_SUPPORT', 'rtx',
           'OPT_fprofile_generate_', 'X86_TUNE_SHORTEN_X87_SSE',
           'UNSPEC_PFRCPIT2', 'OPT__help', 'UNSPEC_PFRCPIT1',
           'LDPL_ERROR', 'CPP_PLUS_EQ', 'OPT_std_gnu', 'TI_HA_TYPE',
           'VEC_cgraph_node_set_heap', 'TI_INTEGER_THREE',
           'UNCONSTRAINED_ARRAY_REF',
           'OPT_freorder_blocks_and_partition',
           'VEC_ipa_opt_pass_none', 'OPT_fpredictive_commoning',
           'OPT_minline_stringops_dynamically',
           'cookie_close_function_t', 'OPT_malign_loops_',
           'gt_ggc_e_18rtx_def_vec_concat', 'DEDUCE_CONV',
           'BUILT_IN_LDEXP', 'line_maps', 'BUILT_IN_CLZ',
           'WITH_CLEANUP_EXPR', 'sigaltstack', '__off64_t',
           'VEC_NEW_EXPR', 'OPT_fd_lines_as_comments',
           'MIN_MODE_PARTIAL_INT', 'phi_arg_d', 'BUILT_IN_HYPOTF',
           'NT_MACRO', 'BUILT_IN_HYPOTL', 'BUILT_IN_ISGRAPH',
           'TS_CP_TEMPLATE_INFO', 'graph_dump_types',
           'PLUGIN_EVENT_FIRST_DYNAMIC', 'X86_TUNE_USE_SAHF',
           'gt_ggc_e_17rtx_def_label_ref',
           'gt_ggc_e_15interface_tuple', 'BB_DISABLE_SCHEDULE',
           'VEC_gimple_heap', 'BUILT_IN_TANH',
           'gt_ggc_e_23VEC_incomplete_var_base', 'BUILT_IN_CTANHL',
           'OPT_Wclobbered', 'BUILT_IN_CTANHF',
           '_SC_LEVEL4_CACHE_LINESIZE', 'N11__mbstate_t3DOT_2E',
           'gt_ggc_e_18rtx_def_debug_insn', 'cl_decoded_option',
           'PLUGIN_PRAGMAS', 'SIZEOF_EXPR',
           'gt_ggc_e_24VEC_alias_set_entry_base', 'OPT_Wimplicit',
           '_SC_EXPR_NEST_MAX', 'OPT_Wvarargs_cast',
           'CPTI_JAVA_FLOAT_TYPE', 'gt_ggc_e_18sorted_fields_type',
           'OPT_fbootclasspath_', '_fpxreg', 'u_long',
           'OPT_Wunknown_pragmas', 'TS_DECL_NON_COMMON',
           'TRUTH_NOT_EXPR', 'MODE_VECTOR_FRACT',
           'BUILT_IN_OMP_GET_THREAD_NUM', 'RID_AT_DEFS',
           'X86_TUNE_PROMOTE_HI_REGS', 'rid',
           'gt_ggc_e_24VEC_constructor_elt_base', 'error_t',
           'tree_result_decl', '_SC_SIGQUEUE_MAX', 'IX86_FPCMP_SAHF',
           'VEC_cxx_saved_binding_gc', 'BUS_OBJERR', 'GIMPLE_DEBUG',
           '_sch_isnvsp', 'REPORT_DETAILS', 'OPT_Wp_',
           'OPT_fpre_ipa_mem_report', 'gt_ggc_e_11lang_type_u',
           'BUILT_IN_STRCHR', 'UNSPEC_TAN', 'idtype_t', 'mp_srcptr',
           'ssa_operand_memory_d', 'RID_FIRST_PATTR', 'edge',
           'splay_tree_delete_value_fn', '_SC_RAW_SOCKETS',
           'CPTI_TYPE_INFO_PTR_TYPE', 'F_OWNER_GID', 'BT_PRAGMA',
           'OPT_auxbase', 'OPT_gstrict_dwarf',
           'gt_ggc_e_16cp_class_binding', 'OPT_Wuseless_type_check',
           'OPT_fconserve_space', 'TI_MAIN_IDENTIFIER',
           'OPT_Wnon_template_friend', 'RID_ELSE',
           'CIF_INDIRECT_UNKNOWN_CALL', 'CPP_PLUS_PLUS',
           'PROPERTY_REF', 'gt_ggc_e_13lang_decl_min',
           'BUILT_IN_FMINL', 'gt_ggc_e_19VEC_pending_weak_gc',
           'BUILT_IN_FMINF', 'ak_private', 'OPT_falign_functions_',
           'OPT_feliminate_unused_debug_types',
           'OPT_Wformat_contains_nul',
           'gt_ggc_e_20gimple_statement_phi', '_SC_FILE_ATTRIBUTES',
           'BUILT_IN_GOMP_LOOP_ULL_RUNTIME_NEXT',
           'GIMPLE_TERNARY_RHS', '_SC_MQ_PRIO_MAX', 'RID_DYNCAST',
           'OEP_ONLY_CONST', '_edge_var_map', 'EXPR_STMT', 'OPT_Wall',
           'expanded_location', 'socklen_t', 'FPE_INTDIV',
           'CCGOCmode', 'tree_code', '_G_uint16_t', 'binfo_kind',
           'gt_ggc_e_16rtx_def_us_minus', 'gt_ggc_e_11stack_usage',
           'OPT_Windirect_static', 'ABS_EXPR', 'TARGET_MEM_REF',
           'bt_foreach_proc', 'ht_identifier_ptr',
           'TS_CP_LAMBDA_EXPR', 'OPT_fdump_go_spec_',
           'PRED_LOOP_EXIT', 'gt_ggc_e_6rtl_eh', '_sch_isgraph',
           'cgraph_global_info', 'MINUS_NOMOD_EXPR',
           'gt_ggc_e_13tree_map_base', 'INDIRECT_REF', 'DK_PEDWARN',
           'BUILT_IN_CCOSHF',
           'gt_ggc_e_28dw_separate_line_info_struct', 'RID_EXPLICIT',
           'BUILT_IN_CCOSHL', 'gimple_omp_for_iter', 'u_int', 'gid_t',
           'tsk_insufficient_parms', 'USING_STMT', 'OPT_fzee',
           'source_location', 'gimple_seq', 'BUILT_IN_UNWIND_RESUME',
           'BUILT_IN_OBJECT_SIZE', 'OPT_fplugin_',
           'OPT_fcompare_debug_second', 'RID_HAS_NOTHROW_ASSIGN',
           'EXCESS_PRECISION_STANDARD', 'OPT_pedantic_errors',
           'rtvec_def', 'OPT_fmerge_debug_strings',
           '__codecvt_noconv', 'VEC_ipa_replace_map_p_gc',
           'OPT_export_dynamic', 'gt_e_P17lto_in_decl_state4htab',
           'RID_VOLATILE', 'RID_IS_ABSTRACT', 'CPO_CONDITIONAL_EXPR',
           'OPT_fdevirtualize', 'itk_int128',
           'BUILT_IN_GOMP_TASKWAIT', 'languages', '__kernel_size_t',
           'NO_INSERT', 'OPT_funit_at_a_time', 'BUILT_IN_CLZIMAX',
           'gt_ggc_e_16rtx_def_lshiftrt', 'OPT_fblas_matmul_limit_',
           'CLEANUP_POINT_EXPR', 'OPT_Wprotocol',
           'VEC_constructor_elt_none', 'OPT_Ttext', 'UNSPEC_RDRAND',
           'cdk_id', 'gt_ggc_e_13rtx_def_const', 'LDPS_NO_SYMS',
           'OPT_fcheck_', 'BT_COUNTER', 'BUILT_IN_FPCLASSIFY',
           'BUILT_IN_EXP', 'TARGET_CPU_DEFAULT_nocona',
           'VEC_WIDEN_MULT_HI_EXPR', 'UNSPEC_FIST_FLOOR',
           'gt_ggc_e_7c_scope', 'MAX_VERBOSITY_LEVEL',
           'gt_ggc_e_15rtx_def_pre_dec', 'OPT_finit_real_',
           'MIN_MODE_CC', 'TARGET_CPU_DEFAULT_max', 'SEGV_ACCERR',
           'POLL_ERR', 'missing_header_cb', 'cgraph_node',
           'cdi_direction', 'gt_ggc_e_24constant_descriptor_tree',
           'itk_unsigned_char', 'RID_LAST_AT',
           'OPT_fsched_spec_insn_heuristic',
           'BUILT_IN_GOMP_ORDERED_START', 'OPT_fsplit_wide_types',
           'TI_ULLFRACT_TYPE', 'GSS_OMP_CONTINUE',
           'gt_ggc_e_14tree_type_decl', 'BUILT_IN_ISWALPHA', 'fsid_t',
           'OPT_mfpmath_', 'fsfilcnt64_t',
           'BUILT_IN_LOCK_TEST_AND_SET_N', 'OPT_g',
           'BUILT_IN_LOCK_TEST_AND_SET_4', 'OPT_e', 'OPT_d',
           'BUILT_IN_LOCK_TEST_AND_SET_1', 'TI_FRACT_TYPE',
           'BUILT_IN_LOCK_TEST_AND_SET_2', 'OPT_o', 'OPT_n', 'OPT_l',
           'sighandler_t', 'BUILT_IN_LOCK_TEST_AND_SET_8', 'OPT_h',
           'OPT_w', 'OPT_v', 'OPT_fuse_divide_subroutine', 'OPT_t',
           'OPT_s', 'OPT_r', 'BUILT_IN_CATANF',
           'TI_DFLOAT128_PTR_TYPE', 'BUILT_IN_CATANH',
           'gt_ggc_e_15rtx_def_ss_plus', 'OPT_z', 'OPT_x', 'OPT_F',
           'OPT_E', 'OPT_D', 'OPT_C', 'OPT_B',
           'CIF_RECURSIVE_INLINING', 'OPT_O', 'OPT_N', 'OPT_M',
           'OPT_L', 'OPT_J', 'OPT_I', 'OPT_H', 'OPT_U', 'OPT_T',
           'OPT_S', 'OPT_R', 'OPT_Q', 'OPT_P', 'CPP_NOT', 'OPT_Z',
           'gt_ggc_e_12gimple_seq_d', 'VEC_gimple_base',
           'gt_ggc_e_16pending_template', 'OPT_Wpadded',
           'BUILT_IN_TOLOWER', 'OPT_static', 'gimple_statement_phi',
           'OPT_fwpa', 'binding_entry', 'dk_auto', 'OPT_fsyntax_only',
           'OPT_Wunused_variable', 'OPT_fcaller_saves',
           'N4wait4DOT_23E', 'OPT_mcmodel_', 'REFERENCE_TYPE',
           'OPT_Wraw', 'VEC_char_heap', 'tinst_level', 'DQmode',
           'RID_CHOOSE_EXPR', 'UNSPEC_GOTNTPOFF',
           'cookie_seek_function_t', 'BIND_EXPR', '_CS_LFS64_LDFLAGS',
           'MAX_MODE_UFRACT', 'BUILT_IN_PUTC_UNLOCKED',
           'gt_e_P14constexpr_call4htab', 'OPT_Wattributes',
           'RID_UNION', 'OPT_msse2avx',
           'X86_TUNE_PARTIAL_REG_DEPENDENCY',
           'gt_ggc_e_13cpp_macro_arg', 'CPP_AND_EQ',
           'sfk_complete_destructor', 'LDPL_INFO',
           'OPT_fdump_final_insns_',
           'gt_ggc_e_23gimple_statement_eh_mnt',
           'X86_TUNE_NOT_UNPAIRABLE', 'BUILT_IN_ISWLOWER',
           'gt_ggc_e_13lang_decl_var', 'OPT_finit_character_',
           'ggc_cache_tab', 'CPTI_JAVA_LONG_TYPE', 'BUILT_IN_CEXP',
           'VEC_INIT_EXPR', 'VOID_TYPE', 'sfk_move_assignment',
           'c_tree_index', '__int32_t', '_SC_GETPW_R_SIZE_MAX',
           'OPT_tno_android_cc', 'OPT_fipa_matrix_reorg', 'vcg',
           'CIF_NOT_DECLARED_INLINED', 'UNSPECV_FEMMS',
           'gt_ggc_e_32gimple_statement_with_memory_ops',
           'OPT_fnil_receivers', 'BUILT_IN_HYPOT',
           'CPTI_JAVA_DOUBLE_TYPE',
           'BUILT_IN_GOMP_LOOP_ORDERED_RUNTIME_START',
           'alias_diag_flags', 'CPP_CLOSE_BRACE',
           'CIF_MISMATCHED_ARGUMENTS', '_SC_XOPEN_XPG4',
           'CPP_DL_ERROR', '_SC_XOPEN_XPG2', '_SC_XOPEN_XPG3',
           'OPT_flto_partition_balanced', 'TI_SAT_ULACCUM_TYPE',
           'VEC_constructor_elt_gc', 'OMP_CLAUSE_REDUCTION',
           'INT_SSE_REGS', 'BUILT_IN_DWARF_SP_COLUMN',
           'OPT_Wwrite_strings', 'BUILT_IN_GOMP_SECTIONS_END',
           'OPT_Wabi', 'gt_ggc_e_26VEC_mem_addr_template_base',
           '_SC_2_C_BIND', 'OPT_frecord_marker_4',
           'OPT_frecord_marker_8', 'gt_ggc_e_19VEC_alias_pair_base',
           'OPT_Wconversion', 'c_kind', 'UNSPECV_WRFSBASE',
           'OPT_fbuiltin_', 'UNSPEC_NTPOFF', 'LDPT_OPTION',
           'cpp_token', 'cgraph_indirect_call_info',
           'LDPT_ADD_SYMBOLS', 'OPT_fdump_fortran_optimized',
           'OPT_fpreprocessed', 'gt_ggc_e_12rtx_def_unle',
           'gt_ggc_e_14string_or_tree', 'gt_ggc_e_12rtx_def_unlt',
           'X86_TUNE_SSE_UNALIGNED_LOAD_OPTIMAL', 'PRED_FIRST_MATCH',
           'CLEANUP_STMT', '__s32', '_SC_NL_MSGMAX',
           'OPT_Wreal_q_constant', 'BUILT_IN_FETCH_AND_AND_16',
           'gt_ggc_e_14lang_decl_parm', 'PROCESSOR_BTVER1',
           'OPT_fdeduce_init_list', 'BUILT_IN_EXP10F',
           'BUILT_IN_EXP10L', 'CPP_W_NONE', '__uid_t',
           'BUILT_IN_STPCPY_CHK', 'TREE_LIST', 'TI_DOUBLE_TYPE',
           'htab_alloc', 'gt_ggc_e_16VEC_parm_attr_gc', 'CPP_MULT',
           'gt_ggc_e_24gimple_statement_eh_ctrl',
           'OPT_fstrict_aliasing', 'basic_block_il_dependent',
           'SCmode', '_SC_CHAR_BIT',
           'gt_ggc_e_36VEC_cp_unparsed_functions_entry_base',
           'BUILT_IN_COMPLEX_MUL_MAX', 'tcc_statement',
           'gt_ggc_e_15c_inline_static', 'gt_ggc_e_14inline_summary',
           'VEC_unsigned_base', 'CPTK_HAS_NOTHROW_COPY',
           'gt_ggc_e_18tree_decl_with_vis', 'RID_DECLTYPE',
           'BB_FORWARDER_BLOCK', '__itimer_which_t',
           'gt_ggc_e_15rtx_def_scratch', 'CPTI_VTBL_TYPE', 'OPT_m32',
           'VOIDmode', 'tree_fixed_cst', '__ssize_t',
           'gt_ggc_e_24VEC_ipa_edge_args_t_base', 'mpq_ptr',
           'ELK_MEM_INIT', 'EV_DIR_GROWS', 'int16_t', 'cpp_macro_arg',
           'GIMPLE_OMP_CRITICAL', 'OPT_Wextraneous_semicolon',
           'OPT_fabi_version_', 'CPTI_CALL_UNEXPECTED',
           'N9sigaction4DOT_48E', 'OPT_fdwarf2_cfi_asm',
           'CTI_STRING_TYPE', 'cgraph_thunk_info',
           'gt_ggc_e_9var_ann_d', 'splay_tree_node_s',
           'gt_ggc_e_11stmt_tree_s', 'BUILT_IN_STRDUP',
           'gt_ggc_e_24VEC_prot_list_entry_base',
           'CTI_INT_FAST32_TYPE', 'UNSPEC_INSERTQI', 'IPA_REF_STORE',
           'OPT_finit_local_zero', '_SC_SHELL', 'uint16_t',
           'RID_NOEXCEPT', 'gt_ggc_e_16limbo_die_struct', 'RID_FLOAT',
           'ld_plugin_register_claim_file', 'P_PID',
           'tree_omp_clause', 'UNSPEC_MASKMOV',
           'const_cgraph_node_set_element', 'OPT_fstore_check',
           'BUILT_IN_REMQUO',
#           'basic_filebuf<wchar_t,std::char_traits<wchar_t> >',
           'gt_ggc_e_14tree_parm_decl', 'CCAmode',
           'X86_TUNE_INTER_UNIT_CONVERSIONS',
           'gt_ggc_e_19rtx_def_ss_truncate', 'br_predictor',
           'ICR_ARGPASS', 'ILL_COPROC', 'ld_plugin_api_version',
           'VEC_cp_label_binding_gc', 'OPT_fdebug_prefix_map_',
           'RID_TRUE', 'uintmax_t', 'LDPR_PREVAILING_DEF',
           'VEC_edge_none', 'TI_COMPLEX_DOUBLE_TYPE',
           'OPT_fearly_inlining', 'PROCESSOR_GENERIC32',
           'BUILT_IN_UPDATE_SETJMP_BUF', 'OPT_fgnu_keywords',
           'gt_ggc_e_17lto_in_decl_state', 'CTI_NULL',
           'OPT_ftree_dominator_opts', 'OPT_ansi',
           'OPT_Wframe_larger_than_', 'lang_c', 'OPT_mxop',
           'gt_ggc_e_12rtx_def_high', 'OPT_Wtasks', 'BUS_ADRERR',
           'LABEL_DECL', 'gt_e_P17string_descriptor4htab',
           'OPT_Wparam_assign', 'RID_IS_EMPTY',
           'MIN_MODE_DECIMAL_FLOAT', 'OPT_ffor_scope', 'wstring',
           'gt_ggc_e_10eh_catch_d', 'CP_ID_KIND_UNQUALIFIED',
           'GIMPLE_OMP_SECTION', 'gt_ggc_e_22cp_default_arg_entry_d',
           'omp_clause_kind', 'CPP_ELLIPSIS',
           'NODE_FREQUENCY_UNLIKELY_EXECUTED', '__compar_fn_t',
           'V4TImode', 'POINTER_TYPE', 'UNSPEC_SFENCE',
           'const_sbitmap', 'gt_ggc_e_21rtx_def_addr_diff_vec',
           'CTI_TRUTHVALUE_TRUE', 'RO_UNARY_STAR', '__codecvt_error',
           'GIMPLE_COND', 'cpp_deps_style', 'OPT_Wl_',
           'TARGET_CPU_DEFAULT_i386', 'imm_use_iterator',
           '_SC_LEVEL1_DCACHE_LINESIZE',
           'gt_ggc_e_25gimple_statement_with_ops', 'BUILT_IN_ISPUNCT',
           'BB_RTL', '_SC_AIO_LISTIO_MAX', 'OPT_fmem_report',
           'UNSPEC_MOVMSK', 'BUILT_IN_STRSTR', 'OPT_ftree_ch',
           'DINFO_STRUCT_FILE_NONE', 'GSS_CATCH', 'OPT_frealloc_lhs',
           '__locale_struct', 'OPT_femit_class_file',
           'bk_via_virtual', '_SC_IPV6',
           'const_call_expr_arg_iterator',
           'gt_ggc_e_16rtx_def_ss_minus', 'RID_IS_STD_LAYOUT',
           'BUILT_IN_NAND32', 'CPP_W_NORMALIZE', 'ht_identifier',
           'BUILT_IN_CARGL', 'BUILT_IN_CARGF', 'TI_USA_TYPE',
           'OPT_fselective_scheduling2', 'DK_PERMERROR',
           'CPTK_HAS_TRIVIAL_ASSIGN', 'VEC_varpool_node_ptr_base',
           'aggr_init_expr_arg_iterator', 'REG_FS', 'OMP_SINGLE',
           'gt_ggc_e_8cp_lexer', 'tree_vec', 'OPT_fenable_icf_debug',
           'REALPART_EXPR', 'wstringstream',
           'CPTI_BASE_CTOR_IDENTIFIER', 'ak_none', 'TI_DA_TYPE',
           'GSS_OMP_PARALLEL', 'const_rtvec', 'TI_SAT_UFRACT_TYPE',
           'OPT_msse3', 'OPT_msse2', 'gt_ggc_e_15rtx_def_UnKnown',
           'OPT_msse4', 'gt_ggc_e_24tree_statement_list_node',
           'UNSPEC_FYL2X', 
#'char_traits<wchar_t>',
           'BUILT_IN_EXTRACT_RETURN_ADDR', 'RID_EXPORT',
           'IRA_REGION_ONE', 'OMP_CLAUSE_NOWAIT',
           'gt_ggc_e_10target_rtl', 'ICV_THIRD_OF_COND']
